{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Beacon Documentation","text":"<p>Beacon v2 is a protocol and specification established by the Global Alliance for Genomics and Health (GA4GH) that defines an open standard for the discovery of genomic (and phenoclinic) data in biomedical research and clinical applications. Beacon facilitates the discovery of genomic variants and biomedical data in single or distributed resources with the goal to empower federated data models - i.e. the discovery (and potential retrieval) of data from different organisational and geographic locations.</p> <p></p> Concept behind the Beacon v2 specification The protocol defines a framework   for queries potentially containing genomic, phenotypic, clinical and techmical parameters. While all beacons support the minimal response of \"yes / no\" upon a query, Beacon v2 enables rich responses including detailed information about samples and experiments if supported by the individual resource and in the given context of security and authorisation. <p>The Beacon specification is developed by an international team of sientists and technology experts, as a product of the GA4GH Discovery work stream and with major support from the European bioinformatics infrastructure organization ELIXIR.</p> <p>The current version of the protocol is Beacon v2 represents a complete revision of the original code base and introduced a number of powerful new features which were considered important by the community such as:</p> <ul> <li>extended and clearer specified genomic variation queries, including patterns (wildcards) and region queries (i.e. returning variants within a genomic/chromosomal region)</li> <li>retrieving information about samples or subject data related to e.g. phenotypes or   other biomedical parameters, depending on the existence of the required authentication and authorization</li> <li>powerful filters, primarily based on CURIE terms for ontologies and references, including options to control the use of hierarchical terms or the precision of term matching</li> <li>scoped data delivery (e.g. matched variant details or sample information) as part of    Beacon responses using its data model or through handover protocols</li> </ul> <p>Move to Beacon v2!</p> <p>On 2022-04-21 Beacon v2 has been approved as an official GA4GH standard through the GA4GH steering committee.</p> <p>With the release of Beacon v2 implementations of v1 and earlier are not longer supported. Deployers of Beacon instances or networks are advised to migrate to v2 of the standard. The functionality of Beacon v1 can be easily implemented in v2. </p> <p>This website represents information about the Beacon protocol, its use for data  discovery and data delivery but also about ways towards its implementation to \"beaconize\" genomics datasets and resources as well as discussions of the technical details of the Beacon framework and data model.</p> <p>Additional information about the Beacon project - including news, events, publications - is available through the separate website  at genomebeacons.org.</p> <p>Historical Tip</p> <p>Originally, the Beacon protocol (versions 0 and 1) allowed researchers to get information about the presence/absence of a given, specific, genomic mutation in a set of data, from patients of a given disease or from the population in general. Early versions of Beacon did not support query parameters beyond genomic variations and did provide ways for the optional retrieval of matched recors.  </p>"},{"location":"#components","title":"Components","text":"<p>Beacon v2 consists of two components, the Framework and the Models. </p> <p>The Framework  contains the format for the requests and responses, whereas the Models  define the structure of the biological data response. The overall function of these components is to provide the instructions to design a REST API (REpresentational State Transfer Application Programming Interface) with OpenAPI Specification (OAS). The OAS  defines a standard, language-agnostic interface that is used by software developers to implement REST APIs. </p> <p>Framework interdependency, releases and alternative models</p> <p>In principle, this dual system allows for different Models (in other domains outside of the Beacon v2 realm, e.g. \"Imaging Beacon\" to be built using the same Framework. However, in the current context of Beacon v2, we consider the two elements interdependent and likely to be updated together for subsequent major versions (e.g. from v2 to v3).</p>"},{"location":"#informations-for-different-types-of-beacon-users","title":"Informations for Different Types of Beacon Users","text":"<p>The Beacon documentation provides information for different types of users, depending on their interests and use cases. Although those will overlap, we highlight information relevant for some general scenarios throughout the documentation.</p>"},{"location":"#users","title":"Users","text":"<p>A Beacon user (or end-user) is interested in querying Beacon instances and networks, either through web interfaces by using the Beacon API. While users of Beacon web forms in principle do not need to understand the underlying query syntax and response formats they too may benefit from some insights into the general capabilities of the underlying protocol.</p> <p>User</p> <ul> <li>Beacon v2 Models</li> <li>Knowing what is available in an instance<ul> <li>Data Models and Schemas</li> <li>Beacon Flavours &amp; Response Granularity</li> <li>Security </li> <li>Other Request, Response &amp; Error Elements</li> </ul> </li> <li>Using Beacon v2 Features<ul> <li>Genomic Variant Queries</li> <li>Filters for Phenotypes, Diseases &amp; Other Parameters</li> <li>Alternative Schemas Link</li> </ul> </li> </ul>"},{"location":"#deployers-and-implementers","title":"Deployers and Implementers","text":"<p>A Beacon Deployer is someone who wants to make their genomics resource accessible through the Beacon protocol, without necessarily being interested or experienced in the computational aspects; while a Beacon Implementer provides the technical expertise (and potentially may get involved with Beacon development itself, e.g. to extend the protocol for novel use cases). </p> <p>Deployer</p> <ul> <li> <p>Beacon v2 Models</p> </li> <li> <p>Reference Implementation Link</p> <ul> <li>Infrastructure requirements</li> <li>How to install</li> <li>Configuration<ul> <li>Cohorts and/or Datasets</li> <li>Entry types</li> <li>Filtering terms</li> <li>Alternative schemas</li> <li>Granularity &amp; Security</li> </ul> </li> <li>Administration</li> <li>Testing the instance</li> </ul> </li> </ul> <p>Implementer</p> <ul> <li>Beacon v2<ul> <li>Framework</li> <li>Models</li> </ul> </li> <li>Protocol basics<ul> <li>Requests, responses &amp; errors</li> <li>OpenAPI</li> </ul> </li> <li>Beacon v2 Features<ul> <li>Filters</li> <li>Alternative schemas Link</li> </ul> </li> <li>Configuration<ul> <li>Granularity &amp; security Link</li> </ul> </li> <li>Verifying compliance</li> </ul>"},{"location":"#stakeholder","title":"Stakeholder","text":"<p>Stakeholder</p> <ul> <li>Integration into GA4GH</li> <li>Leveraging The Beacon Framework in other domains</li> <li>Success Stories:<ul> <li>Implementations</li> <li>Real world data</li> </ul> </li> </ul>"},{"location":"beacon-flavours/","title":"Beacon \"Flavours\"","text":"<p>About UI</p> <p>Most of the information that you will find here is related to the Beacon v2 specification. For that reason, the examples are shown as REST API requests/responses in the form of JSON. If you are only interested in using beacon with a graphical interface please visit the implementations page.</p> <p>While the original Beacon v1 only provided Boolean (i.e. YES/NO) responses on queries for the existence of specific genomic variants, Beacon v2 is a flexible protocol that supports different usage scenarios - also called \"flavours\", since they are more a representation of usage types w/o prescribing their specific details.</p> <p>Importantly, the Beacon framework separates query options from the response side. In that way a privacy-protecting<sup>1</sup> Boolean Beacon still may offer more query features - and therefore better usability - compared to the first Beacon concept implementations.</p> <p>Technical Notes</p> <p>For detailed information about the technical implementation of the different logical scopes please see the Framework documentation.</p>"},{"location":"beacon-flavours/#aggregate-response-beacons-boolean-and-count","title":"Aggregate Response Beacons - Boolean and Count","text":"<p>A Boolean Response Beacon is in it's response similar to Beacon v1 - i.e. responding with a true or false value when queried for the existence of some data in a resource. Similarly a Count Response Beacon only returns aggregate information, i.e. the number of matched entries (e.g. genomic variants), a feature also part of the Beacon v1 protocol.</p> <p>However, in contrast to earlier versions, in Beacon v2 in principle a beaconized resource may implement all types of query options (e.g. combinations of various filters and genomic query parameters) but still only offer a Boolean and optionally Count response.</p> <p>Also, all Beacons should implement the Boolean Response format as fallback option and handle extended options depending on the user's authentication status.</p> Boolean Response in v2Count Response in v2 <pre><code>{\n  \"meta\": {\n    \"apiVersion\": \"v2.0.0\",\n    \"__other_meta_parameters__\": \"...\"\n    \"receivedRequestSummary\": {\n      \"requestedGranularity\": \"boolean\",\n      \"__other_request_parameters__\": \"...\"\n    },\n    \"returnedGranularity\": \"boolean\"\n   },\n  \"responseSummary\": {\n    \"exists\": true\n  }\n}\n</code></pre> <pre><code>{\n  \"meta\": {\n    \"apiVersion\": \"v2.0.0\",\n    \"__other_meta_parameters__\": \"...\"\n    \"receivedRequestSummary\": {\n      \"requestedGranularity\": \"count\",\n      \"__other_request_parameters__\": \"...\"\n    },\n    \"returnedGranularity\": \"count\"\n   },\n  \"responseSummary\": {\n    \"exists\": true,\n    \"numTotalResults\": 42\n  }\n}\n</code></pre>"},{"location":"beacon-flavours/#beacons-supporting-data-and-information-delivery","title":"Beacons Supporting Data and Information Delivery","text":"<p>Technical Notes</p> <p>For detailed information about the technical implementation of the different logical scopes please see the Models documentation.</p> <p>Information about the different data delivery options can be found here:</p> <ul> <li>data delivery using Model defined records</li> <li>file and information linking using handover objects</li> </ul> <ol> <li> <p>Privacy protecting as in \"reasonably protecting by design but not immune to complex re-identification attacks\".\u00a0\u21a9</p> </li> </ol>"},{"location":"changes-todo/","title":"TODO, Bugs &amp; Changes","text":"<p>This page only lists changes w/ regard to the documentation and general organization of the Beacon project site(s) as well as with overarching repository organization.</p>"},{"location":"changes-todo/#changes","title":"Changes","text":""},{"location":"changes-todo/#2024-08-08-genomebeaconsorg-now-default-beacon-domain","title":"2024-08-08: genomebeacons.org now default Beacon domain","text":"<p>We have now migrated towards general use fo the <code>genomebeacons.org</code> domain for Beacon-related services and documentation. The main addresses are:</p> <ul> <li>genomebeacons.org - main site for information, news ...</li> <li>docs.genomebeacons.org - documentation site for API development and implementations</li> </ul> <p>In due course we will disentangle the current pages and purge the more general Beacon information from docs.genomebeacons.org. A start has been made with the Frequently Asked Questions section which is now under genomebeacons.org/FAQ.</p> <p>The old domain beacon-project.io still exists but is only used for forwarding.</p>"},{"location":"changes-todo/#2023-06-12-restructured-and-extended-documentation","title":"2023-06-12: Restructured and extended documentation","text":"<ul> <li>new separation of navigation areas into \"Introducing Beacon\", \"Using Beacons\",   \"Creating Beacons\" and \"Beacon Development\", with subtopics such as \"Data Discovery\",   \"Data Delivery\" ...</li> <li>combined \"what-is-beacon-v2\" into rewritten index page</li> <li>new pages for \"Data Delivery\": Biosamples, Variants... and   Data Handovers - so far limited content</li> </ul> <p>@mbaudis</p>"},{"location":"changes-todo/#2023-06-04-improved-filter-documentation-https","title":"2023-06-04: Improved filter documentation &amp; HTTPS","text":"<ul> <li>extended &amp; clarified \"filters\" documentation<ul> <li>filter types in line with specification</li> <li>example for pseudo-numerical value queries in <code>GET</code> context</li> </ul> </li> <li>fixed <code>HTTPS</code> issue (by brute-forcing all links on site to <code>https://</code>)</li> </ul> <p>@mbaudis</p>"},{"location":"changes-todo/#2023-03-14-new-website-docs-branch","title":"2023-03-14: New <code>website-docs</code> branch","text":"<p>To protect the code branches we are using now a separate <code>website-docs</code> branch in <code>beacon-v2</code> for documentation website updates. Please make sure all documentation edits happen there!</p> <p>@mbaudis</p>"},{"location":"changes-todo/#2022-06-20-retiring-of-beacon-framework-v2-and-beacon-v2-models-repos","title":"2022-06-20: Retiring of <code>beacon-framework-v2</code> and <code>beacon-v2-Models</code> repos","text":"<ul> <li>all issues and PRs were either resolved or transferred to this repository</li> <li> repos were clearly labeled as <code>archived</code> w/ pointers to this one here and archived (i.e. set to read only)</li> <li>also archiving of the <code>implementations-v2</code> repository (part of documentation)</li> </ul>"},{"location":"changes-todo/#2022-05-11-retiring-readthedocs-configuration-more","title":"2022-05-11: Retiring ReadTheDocs configuration &amp; more","text":"<ul> <li>removed ReadTheDocs configuration files</li> <li>added some \"how to implement\" instructions</li> </ul>"},{"location":"changes-todo/#2022-04-21-ga4gh-approval-notice","title":"2022-04-21: GA4GH approval notice","text":""},{"location":"changes-todo/#2022-04-18-documentation-updates","title":"2022-04-18: Documentation updates","text":"<ul> <li>Shuffled small fragments to facilitate comprehension.</li> </ul>"},{"location":"changes-todo/#2022-04-17-documentation-updates","title":"2022-04-17: Documentation updates","text":"<ul> <li>Updated default schemas tables according to the newest changes.</li> <li>Moved <code>filters.md</code> from section Beacon Components to Implement....</li> <li>Dismissed pages w/o content (<code>_rest-api.md</code> and <code>_tips-for-implementers.md</code>).</li> <li>Dismissed link to RTD version (deprecated).</li> </ul>"},{"location":"changes-todo/#2022-04-01-documentation-updates","title":"2022-04-01: Documentation updates","text":"<ul> <li>Partial update of Default schemas Tables (still work in progress)</li> <li>Updated <code>bin</code> files that parse JSON schemas</li> </ul>"},{"location":"changes-todo/#2022-03-30-documentation-updates","title":"2022-03-30: Documentation updates","text":"<ul> <li>Updated diagram in Models page.</li> <li>Removal of some outdated text, e.g. reference to TEMPLATE model (for now)</li> <li>continuous updates from upstream</li> </ul>"},{"location":"changes-todo/#2022-03-28-documentation-updates","title":"2022-03-28: Documentation updates","text":"<ul> <li>added content to the Standards page (VRS, Phenopackets, coordinates)</li> <li>Queries page now with comparison table for (some) variant type terms</li> </ul>"},{"location":"changes-todo/#2022-03-25-miscellanea-changes-in-docsmd","title":"2022-03-25: Miscellanea changes in <code>docs/*.md</code>","text":"<ul> <li>Changes in multiple Markdown pages.</li> <li>Moved from <code>mermaid</code> to <code>mermaid2</code> plugin.</li> </ul>"},{"location":"changes-todo/#2022-03-24-retiring-separate-implementations-repository","title":"2022-03-24: Retiring Separate Implementations Repository","text":"<ul> <li>Started adding content to pages such as <code>networks.md and</code>roles.md`</li> <li>Moved pages to different locations in navigation. Created <code>security.md</code> under Beacon Types.</li> <li>Example implementations have been moved from the <code>implementations-v2</code> repository to the Beacon v2 Documentation - web access here.</li> </ul>"},{"location":"changes-todo/#2022-03-23-name-change-to-beacon-v2","title":"2022-03-23: Name Change to <code>beacon-v2</code>","text":"<ul> <li>The repository name and file paths have been changed from <code>beacon-v2-unity-testing</code> to <code>beacon-v2</code>.</li> <li>Added miscellanea suggestions from Jorge (not all of them).</li> </ul>"},{"location":"changes-todo/#2022-03-22-more-reorganization-of-navigation","title":"2022-03-22: More Reorganization of Navigation","text":"<ul> <li>Moved content from <code>implementations-and-networks</code> to <code>other-implementations</code> and left only the \"Networks\" Part.</li> <li>Added <code>mkdocs-mermaid2-plugin</code> both to <code>mkdocs.yaml</code> and to github workflows.</li> <li>Moved Schemas (Markdown Tables) and Terms List from main navigation to <code>Beacon Compoments/Models</code></li> <li>Reorganization of navigation</li> <li>Added pages: Tips for Implementers</li> </ul>"},{"location":"changes-todo/#2022-03-21-reorganization-of-navigation","title":"2022-03-21: Reorganization of navigation","text":"<ul> <li>Reorganization of navigation</li> <li>Deleted page <code>implement-and-deploy.md</code></li> <li>Added pages: What is Beacon v2 and Implementation options</li> <li>Filters Page Updated</li> </ul>"},{"location":"changes-todo/#2022-03-18-macros-and-variables-for-documentation-pages","title":"2022-03-18: Macros and Variables for Documentation pages","text":"<p>The <code>mkdocs-macros-plugin</code> has been activated, allowing the use of site-wide variables:</p> <ul> <li><code>repo_model_url: https://github.com/ga4gh-beacon/beacon-v2/tree/main/models/src</code></li> <li>this can be used inline as <code>{{ no such element: mkdocs.config.defaults.MkDocsConfig object['repo_model_url'] }}</code></li> </ul>"},{"location":"changes-todo/#2022-03-16-documentation-content-and-formats-updates","title":"2022-03-16: Documentation Content and Formats Updates","text":"<ul> <li> addition of more variant query examples</li> <li> new landing pages for <code>Implementations and Networks</code> and Standards Integration</li> <li> many adjustments to documentation structure, appearance and representation (e.g. content tabs for query examples)</li> </ul>"},{"location":"changes-todo/#2022-03-14-documentation-in-repository","title":"2022-03-14: Documentation in Repository","text":"<p>As of today the new/emerging Beacon v2 documentation is meintained in this repository. We're testing rendered versions (same text/code base) through Github actions (here) and ReadTheDocs.</p> <ul> <li> testing of ReadTheDocs version vs. a <code>material</code> themed build</li> <li> created and linked docs.genomebeacons.org sub-domain to the Github hosted version of the rendered documentation</li> <li> merging of previous separate documentation repository content from beacon-v2-schema-documentation in the \"unity\" repository and archiving of the old one</li> </ul>"},{"location":"changes-todo/#2022-03-11-removing-yaml-export-version","title":"2022-03-11: Removing <code>yaml</code> export version","text":"<p>Since moving to source in YAML the existence of a separate <code>yaml</code> export seems unnecessary &amp; maybe confusing. Removed.</p>"},{"location":"changes-todo/#2022-03-09-nesting-models","title":"2022-03-09: Nesting models","text":"<p>The structure of the <code>models</code> directory has now be changed to have the default model as one of possibly multiple options as per the discussions in #1. The current structure (below) might not be final (e.g. placing of the <code>beaconConfiguration.yaml</code>, <code>beaconMap.yaml</code>, <code>endpoints.yaml</code> files?).</p> <pre><code>beacon\n  |\n  |-- framework ...\n  |-- models\n  |    |-- src\n  |    |    |-- beacon-v2-default-model\n  |    |         |-- analyses ...\n  |    |         |-- biosamples ...\n  |    |         |-- genomicVariations ...\n  |    |         |-- ...\n  |    |         |-- endpoints.yaml\n  |    |     \n  |    |-- json\n  |         |-- beacon-v2-default-model\n  |              |-- analyses ...\n  |              |-- biosamples ...\n  |              |-- genomicVariations ...\n  |              |-- ...\n  |              |-- endpoints.yaml\n  |\n  |-- bin ...\n  |-- docs ...               \n...\n</code></pre>"},{"location":"changes-todo/#2022-03-08-automated-pulling-from-current-origin-repos","title":"2022-03-08: Automated pulling from current origin repos","text":"<ul> <li>added simple pull commands to the conversion for automatic update to the donor repos</li> </ul> <pre><code>git -C $BEACONMODELPATH pull\ngit -C $BEACONFRAMEWORKPATH pull\n</code></pre> <ul> <li>updated to current crop of PRs</li> </ul>"},{"location":"changes-todo/#2022-02-24-path-fixes","title":"2022-02-24: Path fixes","text":"<ul> <li>changed the path replacements to the current repo, resulting in e.g. raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/sections/beaconInformationalResponseMeta.json</li> </ul>"},{"location":"changes-todo/#2022-02-23-re-tool","title":"2022-02-23: Re-tool","text":"<ul> <li> replacement of the previopus general <code>yamler.py</code> with a dedicated <code>beaconYamler.py</code></li> <li> moving replacements to bin/config.yaml</li> <li> requirement for complete arguments (in and out paths, in- and out formats) - see bin/yamlerRunner.sh</li> </ul>"},{"location":"changes-todo/#2022-02-22-creation-of-repository","title":"2022-02-22: Creation of repository","text":"<ul> <li> design of directory structure</li> <li> test tooling &amp; population with auto-converted files</li> </ul>"},{"location":"changes-todo/#todo","title":"TODO","text":"<ul> <li> re-structuring of Framework page<ul> <li> add part about necessary files, dependening on installation type (e.g. if not needing to support OpenAPI)</li> </ul> </li> <li> add more Implementations</li> <li> extend Query documentation<ul> <li> expand the table comparing different \"variant types\"</li> <li> use more content from the variant scouts document</li> </ul> </li> </ul>"},{"location":"code-organization/","title":"Repository and Branch Organization","text":"<p>The development of Beacon code and documentation happens in the <code>beacon-v2</code> repository.</p>"},{"location":"code-organization/#core-branches","title":"Core branches","text":""},{"location":"code-organization/#main","title":"<code>main</code>","text":"<p>The <code>main</code> branch is the branch used for production, it reflects the last version that beacon v2 has reached by accomplishing the milestones that ga4gh has set for the beacon to be considered as a new version. It can only be committed by a PR from the develop branch and exceptionally by some hotfixes to correct errors spotted after its official deployment.</p>"},{"location":"code-organization/#develop","title":"<code>develop</code>","text":"<p>The <code>develop</code> branch is the branch used for development, it reflects the current state of the progress of development. It can be modified by all the PR from the feature branches that have been finished (this means that must include all the merges from the subfeature branches) and the PR must reach a consensus to be finally accepted.</p>"},{"location":"code-organization/#website-docs","title":"<code>website-docs</code>","text":"<p>This branch is used to maintain the website at docs.genomebeacons.org. The relevant files consists of anything under <code>/docs</code> as well as the configuration file (<code>/mkdocs.yaml</code>) and the workflow file for processing the pages under <code>/.github/workflows/mk-beacon-docs.yaml</code>.</p> <p>Changes to the Markdown files in the <code>/docs</code> directory (and its children) will initiate the processing of the workflow file; updating of the website than may take some minutes.</p>"},{"location":"code-organization/#gh-pages","title":"<code>gh-pages</code>","text":"<p>The <code>gh-pages</code> branch is generated from the <code>/docs</code> directory through its <code>mkdocs</code> workflow and contains the website itself. Do not edit</p>"},{"location":"code-organization/#hotfix-branches","title":"Hotfix branches","text":"<p>These are the branches that are meant to fix some bugs that break the specifications and need an urgent fix. The branches are directly deployed towards the <code>main</code> branch.</p>"},{"location":"code-organization/#entry-type-definitions-cleanup","title":"<code>entry-type-definitions-cleanup</code>","text":"<p>This branch aims to redefine the wording of the entry types in a way that makes more clear what are the entry types. As the old definitions could mislead to some confusions, this is a sensible change that is needed to directly affect the current modification.</p> <p>Current status:Waiting for PR to be accepted.</p>"},{"location":"code-organization/#hotfix_filteringtermsresults","title":"<code>hotfix_filteringTermsResults</code>","text":"<p>As the beaconFilteringTermsResults.json \"type\" property of the FilteringTerm is ambiguous, this branch has the objective to fix this and make filtering terms object to be operative and ready to point to the filtering terms type.</p> <p>Current status:Waiting for PR to be accepted.</p>"},{"location":"code-organization/#schema-urgent-fixes","title":"<code>schema-urgent-fixes</code>","text":"<p>Some of the instances of the schema were missing attributes and other aspects that are required to make a beacon work. This is mandatory to be urgently fixed and this is the purpose of this branch deployment.</p> <p>Current status:Waiting for PR to be accepted.</p>"},{"location":"code-organization/#feature-and-subfeature-branches","title":"Feature and subfeature branches","text":"<p>The feature branches are the branches that bring a lot of changes together to change some specific part of the specifications. They can be composed by different subfeature branches that commit to them or just have one single working branch. The feature branches commit to the <code>develop</code> branch as they are the changes that will lead beacon to be upgraded to a new version. The subfeature branches commit to their parent feature branch, as they are a microchange of all the aspects that have to change in a new feature that is being developed. The branches are named as the main purpose of them, so it is made very clear what is the working area of them and the subfeature branches add the name of the feature branch they belong as a prefix followed by an underscore. The list of these feature branches with their subfeature branches is the one shown next:</p>"},{"location":"code-organization/#clean-up","title":"<code>clean-up</code>","text":""},{"location":"code-organization/#clean-up_sticky_modified_files","title":"<code>clean-up_sticky_modified_files</code>","text":"<p>Current status:Last commit by @jrambla.</p>"},{"location":"code-organization/#clean-up_renaming_entity_to_entry_type","title":"<code>clean-up_renaming_entity_to_entry_type</code>","text":"<p>Current status:Added in framework-refactor-entry-type-definitions branch by @mbaudis and waiting for a PR to be accepted.</p>"},{"location":"code-organization/#clean-up_decouple-model-framework-refs","title":"<code>clean-up_decouple-model-framework-refs</code>","text":"<p>Current status:Last commit by @mbaudis.</p>"},{"location":"code-organization/#clean-up_move-curie-to-beaconcommoncomponents","title":"<code>clean-up_move-CURIE-to-beaconCommonComponents</code>","text":"<p>Current status:This branch has not had any commit.</p>"},{"location":"code-organization/#clean-up_de-snakify-token-names","title":"<code>clean-up_de-snakify-token-names</code>","text":"<p>Current status:This branch has not had any commit.</p>"},{"location":"code-organization/#clean-up_refactor-analysys-pipeline-info","title":"<code>clean-up_refactor-analysys-pipeline-info</code>","text":"<p>Current status:Last commit by @mbaudis.</p>"},{"location":"code-organization/#resultsets","title":"<code>resultsets</code>","text":""},{"location":"code-organization/#resultsets_remove-requirement-results-resultscount","title":"<code>resultsets_remove-requirement-results-resultsCount</code>","text":"<p>Current status:Last commit by @mbaudis.</p>"},{"location":"code-organization/#requestparameters","title":"<code>requestParameters</code>","text":""},{"location":"code-organization/#requestparameters_genomicvariations-fix","title":"<code>requestParameters_genomicVariations-fix</code>","text":"<p>Current status:Last commit by @mbaudis.</p>"},{"location":"code-organization/#requestparameters_list-parameters-with-comma","title":"<code>requestParameters_list-parameters-with-comma</code>","text":"<p>Current status:This branch has not had any commit.</p>"},{"location":"code-organization/#phenopackets","title":"<code>phenopackets</code>","text":""},{"location":"code-organization/#phenopackets_standards-alignment","title":"<code>phenopackets_standards-alignment</code>","text":"<p>Current status:Last commit by @mbaudis.</p>"},{"location":"code-organization/#network","title":"<code>network</code>","text":""},{"location":"code-organization/#network_aggregator-and-networks-support","title":"<code>network_aggregator-and-networks-support</code>","text":"<p>Current status:This branch has not had any commit.</p>"},{"location":"code-organization/#network_meta-add-aggregator-flag","title":"<code>network_meta-add-aggregator-flag</code>","text":"<p>Current status:Last commit by @mbaudis.</p>"},{"location":"code-organization/#anyof","title":"<code>anyOf</code>","text":""},{"location":"code-organization/#anyof_filteringterms","title":"<code>anyOf_filteringTerms</code>","text":"<p>Current status:This branch has not had any commit.</p>"},{"location":"code-organization/#genomicvariations","title":"<code>genomicVariations</code>","text":"<p>Current status:Waiting for PR to be accepted.</p>"},{"location":"code-organization/#received-filters","title":"<code>received-filters</code>","text":"<p>Current status:Waiting for PR to be accepted.</p>"},{"location":"code-organization/#response-meta-add-warnings","title":"<code>response-meta-add-warnings</code>","text":"<p>Current status:Waiting for PR to be accepted.</p>"},{"location":"code-organization/#framework-refactor-entry-type-definitions","title":"<code>framework-refactor-entry-type-definitions</code>","text":"<p>Current status:Waiting for PR to be accepted.</p> <p>TBD</p>"},{"location":"contribute/","title":"How to Contribute to Beacon Development","text":"<p>The Beacon API &amp; standard is a driver project of the Global Alliance for Genomics and Health GA4GH. Since 2016 Beacon development has been  organized through projects supported by ELIXIR with additional contributions from outside organizations and individual developers and implementers.</p> <p>TBD</p>"},{"location":"filters/","title":"Filters","text":"<p>Filters represent a powerful addition to the Beacon query API. They are rules for selecting records based upon the field values those records contain. The rules can refer to bio-ontology or custom terms, numerical or alphanumerical values, and employ wildcards, standard operators or other principles of selection. This empowers such options as queries for phenotypes, disease codes or technical parameters associated with observed genomic variants.</p> <p>Using Filters</p> <p>Please see Using Filters in Queries for more information on how to use filters in Beacon requests.</p>"},{"location":"filters/#filter-types","title":"Filter types","text":"<p>A Beacon can support three general types of Filters.</p> <ol> <li>Bio-ontology terms and public identifiers for biomedical data, procedural    metadata or prefixed identifiers listed in public repositories such as the EMBL-EBI    Ontology Lookup Service, the NCBO BioPortal    or PubMed. <code>OntologyFilters</code> are identified using the full term/class identifier    as CURIE, e.g. \u201cHP:0100526\u201d.</li> <li>Numerical and alphanumerical values including an indicator for their logical    scope - preferably as a CURIE (e.g. <code>HP:0032443</code> Past medical history), a    comparator and a numerical, pseudo-numerical (e.g. ISO8601 period) or string    value</li> <li>Custom terms for biomedical or metadata terms that are locally defined by    a Beacon (e.g. not corresponding to known bio-ontology terms). Custom terms must    contain unique identifiers that are used in Beacon requests (e.g. local prefixes.</li> </ol>"},{"location":"filters/#filtering_terms-informational-endpoint","title":"/filtering_terms  informational endpoint","text":"<p>The /filtering_terms endpoint returns a list of all data fields whose values may be subjected to filtering, plus the data type(s) for those fields, and/or the list of extant values for each of those data fields in the current dataset.  In addition, for each bio-ontology used by a Beacon, the endpoint response includes a description of the bio-ontology in Phenopackets Resource format.</p> <p>The endpoint's <code>filteringTerms</code> response identifies the Filter types.</p> <p>Bio-ontology and custom term Filter types contain:</p> <ul> <li><code>type</code> = resource name (required) </li> <li><code>id</code> = term id (required) </li> <li><code>label</code> = term label (optional)</li> </ul> <pre><code>\"response\":{\n    \"resources\":[\n        {\n            \"id\":\"hp\",\n            \"name\":\"Human Phenotype Ontology\",\n            \"url\":\"https://purl.obolibrary.org/obo/hp.owl\",\n            \"version\":\"27-03-2020\",\n            \"namespacePrefix\":\"HP\",\n            \"iriPrefix\":\"https://purl.obolibrary.org/obo/HP_\"\n        },\n        ...\n    ],\n    \"filteringTerms\": [\n        {\n            \"type\": \"ontologyTerm\",\n            \"id\": \"HP:0008773\",\n            \"label\": \"neoplasm of the lung\"\n        },\n        ...\n    ]\n}\n</code></pre> <p>Alphanumerical value Filter types contain:</p> <ul> <li><code>type</code> = data type as 'alphanumeric' (required) </li> <li><code>id</code> = field id (required) </li> <li><code>label</code> = field label (optional) </li> </ul> <pre><code>\"filteringTerms\": [\n    {\n        \"type\": \"alphanumeric\",\n        \"id\": \"PATO:0000011\",\n        \"label\": \"age\"\n    }\n]\n</code></pre>"},{"location":"filters/#using-filters-in-queries","title":"Using Filters in Queries","text":"<p>The Filter <code>id</code> is required for all query types.</p> <p>Boolean Logic Between Filtering Terms</p> <p>Beacon queries as of v2 always omply a logical AND between query parameters and individual filters, i.e. all conditions have to be met. There is currently no support for Boolean expressions.</p> <p>Filters in <code>GET</code> Requests</p> <p><code>GET</code> requests use a <code>filters</code> parameter for one or more (comma-separated) filter <code>id</code> values. In this case general filter defaults apply (e.g. <code>{ \"includeDescendantTerms\": true }</code>). Generally, use of filters other than CURIE values for filter ids is discouraged.</p> <p>List Parameters in GET Requests</p> <p>Since the direct interpretation of list parameters in queries is not supported by some server environments (e.g. PHP, GO\u2026), list parameters such as <code>start</code> and <code>end</code> should be provided as comma-concatenated strings when using them in GET requests.</p>"},{"location":"filters/#curie-based-filters-query-type-ontologyfilters","title":"CURIE based filters query (type \"OntologyFilters\")","text":"<p>Hierarchical term expansion</p> <p>It is recomended that the use of terms from hierarchical ontologies/classicfications uses an internal term expansion mechanism - i.e. records with parameters containing a child term are matched when the parent term is being queried. This default behaviour can be modoiified (see below).</p> <p>The following query retrieves (or filters retrieved...) data matching the diagnosis of Papillary Renal Cell Carcinoma (NCIT:C6975) from a publication identified through its PubMed id (22824167):</p> GETPOST <pre><code>/biosamples?filters=PMID:22824167,NCIT:C6975\n</code></pre> <pre><code>\"filters\": [\n    {\n        \"id\": \"PMID:22824167\"\n    },\n    {\n        \"id\": \"NCIT:C6975\"\n    }\n]\n</code></pre>"},{"location":"filters/#modified-hierarchical-ontology-query","title":"Modified hierarchical ontology query","text":"<p>A Beacon will query for entities associated with the submitted bio-ontology term(s), and by default, all descendent terms. The optional <code>includeDescendantTerms</code> parameter can be set to either <code>true</code> or <code>false</code>. The default and assumed value of <code>includeDescendantTerms</code> is <code>true</code>, thus if the parameter is not set, then the use of bio-ontology terms in a Beacon request implies that a hierarchical ontology search is requested.</p> <p>Request example of two filters, where one filter excludes matches with descendent terms:</p> POST <pre><code>\"filters\": [\n    {\n        \"id\": \"HP:0100526\",\n        \"includeDescendantTerms\": false\n    },\n    {\n        \"id\": \"HP:0005978\"\n    }\n]\n</code></pre>"},{"location":"filters/#semantic-similarity-query","title":"Semantic similarity query","text":"<p>A Beacon will query for entities that are associated with bio-ontology terms that are similar to the submitted terms.  The Beacon API is agnostic to the semantic similarity model implemented by a Beacon and how a Beacon applies the relative thresholds of similarity.  A semantic similarity query request contains the required <code>similarity</code> parameter with a value set to define the relative threshold level of <code>high</code>, <code>medium</code> or <code>low</code>.</p> <p>POST request example of two Filters using differing relative similarity thresholds:</p> <pre><code>\"filters\": [\n    {\n        \"id\": \"HP:0100526\",\n        \"similarity\": \"high\"\n    },\n    {\n        \"id\": \"HP:0005978\",\n        \"similarity\": \"medium\"\n    }\n]\n</code></pre>"},{"location":"filters/#alphanumerical-value-queries","title":"Alphanumerical value queries","text":"<p>A Beacon will query for quantitative properties when the required <code>operator</code> and numerical <code>value</code> parameters are set in the filters request. The <code>id</code> parameter identifies the logical scope (with the exact field depending on the internal data model at the resource), the <code>operator</code> parameter defines the operator to use, and the <code>value</code> parameter provides the field query value. Equality and relational operators (= &lt; &gt;) can be used between field name and field value pairs, and field values can be associated with units if applicable.</p>"},{"location":"filters/#pseudo-numerical-value-queries","title":"(Pseudo-)numerical value queries","text":""},{"location":"filters/#example-of-a-filter-for-individuals-over-70-years-of-age","title":"Example of a Filter for individuals over 70 years of age","text":"<ul> <li>age = PATO:0000011, age syntax as ISO 8601</li> </ul> GETPOST <ul> <li><code>filters=age:&gt;P70Y</code><ul> <li>intuitive use but w/o clear scoping (age... when?)</li> </ul> </li> <li><code>filters=PATO_0000011:&gt;P70Y</code> (\"age\")<ul> <li>using a term for expressing the age quality of the ISO8601 duration</li> <li>computationally more robust but w/o additional quality (age... when?)</li> </ul> </li> <li><code>filters=EFO_0004847:&gt;P70Y</code> (\"age at onset\")<ul> <li>specific for an \"onset\" scope of the age value</li> </ul> </li> </ul> <pre><code>\"filters\": [\n    {\n        \"id\": \"PATO:0000011\",\n        \"operator\": \"&gt;\",\n        \"value\": \"P70Y\"\n    }\n]\n</code></pre> <p>We recommend that implementers provide term expansions for equivalent terms, depending on the context. Also, it is up to the implementers to provide the correct tooling for e.g. transformation of input values (e.g. numerical age in years and comparator) to the standardized wire format (e.g. ages/durations are always transmitted as ISO8601 periods) as well as the correct deparsing and use (e.g. the ISO values probably will be converted to some numerical format for database matches).</p>"},{"location":"filters/#text-matches","title":"Text matches","text":"<p>A Beacon will query free-text values within fields when the required <code>operator</code> and alphanumerical <code>value</code> parameters are set in the filters request. Queries can be for exact alphanumerical values, used to exclude alphanumerical values, or employ wildcards to match patterns within alphanumerical values.  In all query classes, the <code>id</code> parameter identifies the field name, the <code>operator</code> parameter defines the operator to use, and the <code>value</code> parameter provides the field query value.</p>"},{"location":"filters/#exact-value-query","title":"'EXACT' value query","text":"<p>The <code>operator</code> parameter is set to the equality (=) operator.</p> <p>POST request example of using free-text to filter medical history (past medical history = HP:0032443):</p> <pre><code>\"filters\": [\n    {\n        \"id\": \"HP:0032443\",\n        \"operator\": \"=\",\n        \"value\": \"unknown medical history\"\n    }\n]\n</code></pre> <p>'LIKE' value query</p> <p>The inclusion of a percent sign (%) wildcard character within the <code>value</code> parameter represents zero or more characters within a LIKE style string match.  The wildcard character can lead the query string, end the string, or surround the string.</p> <p>POST request example to filter medical history free-text for any reference to cancer:</p> <pre><code>\"filters\": [\n    {\n        \"id\": \"HP:0032443\",\n        \"operator\": \"=\",\n        \"value\": \"%cancer%\"\n    }\n]\n</code></pre>"},{"location":"filters/#not-value-query","title":"'NOT' value query","text":"<p>The <code>operator</code> parameter is set to the logical not (!) operator.  The <code>value</code> parameter should not be present in field value.  The wildcard character can be used if required. The following example shows how to filter medical history free-text for records that do not include the query string:</p> GETPOST <p><code>filters=HP_0032443:!unknown+medical+history</code></p> <pre><code>\"filters\": [\n    {\n        \"id\": \"HP:0032443\",\n        \"operator\": \"!\",\n        \"value\": \"unknown medical history\"\n    }\n]\n</code></pre>"},{"location":"formats-standards/","title":"Formats, Standards and Integrations","text":""},{"location":"formats-standards/#data-formats-and-standards","title":"Data Formats and Standards","text":""},{"location":"formats-standards/#coding-and-naming-conventions","title":"Coding and naming conventions","text":"<p>For historical reasons, in the names of entities, parameters and URLs we are following these conventions:</p> <ul> <li>Entity names: <code>PascalCase</code> </li> <li>parameters: <code>camelCase</code> </li> <li>URI path elements: <code>snake_case</code> </li> </ul> <p>The only exception is: <code>service-info</code> which is a required GA4GH standard and has a different word separation convention.</p>"},{"location":"formats-standards/#schema-language-and-conventions","title":"Schema Language and Conventions","text":"<p>The Beacon v2 API follows OpenAPI 3.0.2 specification for the endpoints, in conjuntion with JSON Schema (2020-12) to define the Framework  and the Models  components. The specification uses JSON references (<code>$ref</code>) to reference internal (e.g., definitions) or external concepts/terms (e.g., VRS).</p> <p>The Beacon v2 specification is written in YAML. The original files are located under <code>src</code> directory (see below). For technical purposes, we also provide a copy of the original YAML in JSON format (see <code>json</code> directory below). Changes in the specification must be performed in the YAML version and are then rewritten to the JSON version.</p> FrameworkModels <pre><code>framework\n|-- json\n|   |-- common\n|   |   `-- examples\n|   |-- configuration\n|   |   `-- examples\n|   |-- requests\n|   |   |-- examples-fullDocuments\n|   |   `-- examples-sections\n|   `-- responses\n|       |-- sections\n|       |-- examples-fullDocuments\n|       `-- examples-sections\n`-- src\n    |-- common\n    |   `-- examples\n    |-- configuration\n    |   `-- examples\n    |-- requests\n    |   |-- examples-fullDocuments\n    |   `-- examples-sections\n    `-- responses\n        |-- sections\n        |-- examples-fullDocuments\n        `-- examples-sections\n</code></pre> <pre><code>models\n|-- json\n|   `-- beacon-v2-default-model\n|       |-- analyses\n|       |   `-- examples\n|       |-- biosamples\n|       |   `-- examples\n|       |-- cohorts\n|       |   `-- examples\n|       |-- common\n|       |-- datasets\n|       |   `-- examples\n|       |-- genomicVariations\n|       |   `-- examples\n|       |-- individuals\n|       |   `-- examples\n|       `-- runs\n|           `-- examples\n`-- src\n    `-- beacon-v2-default-model\n        |-- analyses\n        |   `-- examples\n        |-- biosamples\n        |   `-- examples\n        |-- cohorts\n        |   `-- examples\n        |-- common\n        |-- datasets\n        |   `-- examples\n        |-- genomicVariations\n        |   `-- examples\n        |-- individuals\n        |   `-- examples\n        `-- runs\n            `-- examples\n</code></pre>"},{"location":"formats-standards/#genome-coordinates","title":"Genome Coordinates","text":"<p>GA4GH Genome Coordinate Use Recommendation<sup>1</sup></p> <ul> <li>We recommends the use of \"0-start, half-open\" (interbase) coordinate system in all systems</li> <li>\"1-start, fully-closed\" should be used when displaying coordinates through a GUI or report</li> </ul>"},{"location":"formats-standards/#dates-and-times","title":"Dates and Times","text":"<p>Date and time formats are specified as ISO8601 compatible strings, both for time points as well as for durations. Some of the ISO8601 compatible formats have not (yet) been used in the Beacon v2 default model.</p>"},{"location":"formats-standards/#examples","title":"Examples","text":"<ul> <li>time stamp in milliseconds in YYYY-MM-DDTHH:MM:SS.SSS<ul> <li>2015-02-10T00:03:42.123Z<ul> <li>schema specification in JSON Schema is <code>\"type\": \"string\", format\": \"date-time\"</code></li> <li>Timepoints with millisecond granularity are typical use cases for timing computer generated entries, e.g. the time of a record's update (\"updateTime\").</li> </ul> </li> </ul> </li> <li>age in years and months in PnYnM<ul> <li>P43Y08M</li> </ul> </li> </ul>"},{"location":"formats-standards/#link-w3c-iso8601","title":"LINK: W3C ISO8601","text":""},{"location":"formats-standards/#link-iso8601-documentation-at-ga4gh-schemablocks","title":"LINK: ISO8601 documentation at GA4GH SchemaBlocks","text":""},{"location":"formats-standards/#integration-with-external-standards","title":"Integration with External Standards","text":"<p>The development of the Beacon v2 framework and default model closely follows and widely adopts concepts and schemas from approved GA4GH products such as Phenopackets and the Variant Representation Standard (VRS).</p>"},{"location":"formats-standards/#variant-representation-standard-vrs","title":"Variant Representation Standard (VRS)","text":"<p>The GA4GH Variant Representation Standard (VRS) constitutes the reference one should use when implementing representations of genomic variations. The current version 1.2 has been approved and covers a set of use cases and requirements, especially with respect to genomic (including cytogenetic or feature based) locations. However, it is not yet suitable for a number of practical use cases, especially the representation of some structural variations.</p> <p>The Beacon v2 default model for <code>GenomicVariation</code> makes use of the VRS standard to represent the <code>variation</code> part, i.e. the location and sequence or copy number changes of the genomic variation. While a \"legacy\" alternative is still allowed this one too has been adjusted to make use of the VRS <code>Location</code> format.</p>"},{"location":"formats-standards/#examples_1","title":"Examples","text":"<p>The examples are for different forma of the <code>location</code> property inside a <code>genomicVariation</code>.</p> Beacon v2 VRS AlleleBeacon v2 VRS CNVBeacon v2 legacy SNVBeacon v2 legacy CNV <pre><code>\"variation\": {\n    \"type\": \"Allele\",\n    \"state\": {\n        \"sequence\": \"G\",\n        \"type\": \"LiteralSequenceExpression\"\n    },\n    \"location\": {\n        \"type\": \"SequenceLocation\",\n        \"sequence_id\": \"refseq:NC_000017.11\",\n        \"interval\": {\n            \"type\": \"SequenceInterval\",\n            \"start\": {\n                \"type\": \"Number\",\n                \"value\": 7577120\n            },\n            \"end\": {\n                \"type\": \"Number\",\n                \"value\": 7577121\n            }\n        }\n    }\n}\n</code></pre> <pre><code>\"variation\": {\n    \"type\": \"RelativeCopyNumber\",\n    \"relative_copy_class\": \"partial loss\",\n    \"location\": {\n        \"type\": \"SequenceLocation\",\n        \"sequence_id\": \"refseq:NC_000018.10\",\n        \"interval\": {\n            \"start\": {\n                \"type\": \"Number\",\n                \"value\": 23029501\n            },\n            \"end\": {\n                \"type\": \"Number\",\n                \"value\": 62947165\n            }\n        }\n    }\n}\n</code></pre> <pre><code>\"variation\": {\n    \"variantType\": \"SNP\",\n    \"referenceBases\": \"C\",\n    \"alternateBases\": \"G\",\n    \"location\": {\n        \"type\": \"SequenceLocation\",\n        \"sequence_id\": \"refseq:NC_000017.11\",\n        \"interval\": {\n            \"type\": \"SequenceInterval\",\n            \"start\": {\n                \"type\": \"Number\",\n                \"value\": 7577120\n            },\n            \"end\": {\n                \"type\": \"Number\",\n                \"value\": 7577121\n            }\n        }\n    }\n}\n</code></pre> <pre><code>\"variation\": {\n    \"variantType\": \"DEL\",\n    \"location\": {\n        \"type\": \"SequenceLocation\",\n        \"sequence_id\": \"refseq:NC_000018.10\",\n        \"interval\": {\n            \"start\": {\n                \"type\": \"Number\",\n                \"value\": 23029501\n            },\n            \"end\": {\n                \"type\": \"Number\",\n                \"value\": 62947165\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"formats-standards/#link-vrs-documentation","title":"LINK: VRS Documentation","text":""},{"location":"formats-standards/#phenopackets","title":"Phenopackets","text":"<p>In the Beacon v2 default data model, many schemas are either directly compatible to Phenopackets v2 building blocks or at least reflect them but with some adjustments. While the Beacon v2 default model's schemas do not per se have to reflect PXF schemas, we target an as-close-as-possible alignment to promote/leverage GA4GH-wide standardization.</p>"},{"location":"formats-standards/#top-level-differences","title":"Top-level differences","text":"<p>The Phenopackets model is centered around the <code>Phenopacket</code>, which is the collector and integrator of all sub-schemas (with the addition of the external <code>Family</code> and <code>Cohort</code> schemas). While <code>Phenopacket</code> usually describes information related to a <code>subject</code> -  which is defined in an <code>Individual</code> - and the top level elements in <code>Phenopacket</code> relate to a specific <code>proband</code> (<code>measurements</code> as \"Measurements performed in the proband\"), the phenopacket itself does not explicitely represent an individual.</p> <p>In contrast, the Beacon v2 default model uses a hierarchy in which biosamples reference individuals directly (if existing). For most purposes one can equate Beacon's <code>Individual</code> with a merge of Phenopacket's core <code>Phenopacket</code> and <code>Individual</code> parameters.</p>"},{"location":"formats-standards/#building-block-comparisons-beacon-v2-pxf-v2","title":"Building block comparisons: Beacon v2 <code>==</code> PXF v2","text":""},{"location":"formats-standards/#age","title":"<code>Age</code>","text":"<ul> <li>PXF Age</li> <li>Beacon v2 Age</li> </ul>"},{"location":"formats-standards/#agerange","title":"<code>AgeRange</code>","text":"<ul> <li>PXF AgeRange</li> <li>Beacon v2 AgeRange</li> </ul>"},{"location":"formats-standards/#evidence","title":"<code>Evidence</code>","text":"<ul> <li>PXF Evidence</li> <li>Beacon v2 Evidence</li> </ul>"},{"location":"formats-standards/#karyotypicsex","title":"<code>KaryotypicSex</code>","text":"<ul> <li>PXF</li> <li>Beacon</li> </ul>"},{"location":"formats-standards/#referencerange","title":"<code>ReferenceRange</code>","text":"<ul> <li>PXF ReferenceRange</li> <li>Beacon v2 ReferenceRange</li> </ul> <p>While <code>unit</code> in Beacon points to a <code>Unit</code> definition, this is itself an <code>OntologyTerm</code> i.e. structurally the same.</p>"},{"location":"formats-standards/#value","title":"<code>Value</code>","text":"<ul> <li>PXF Value</li> <li>Beacon v2 Value</li> </ul>"},{"location":"formats-standards/#beacon-v2-pxf-v2-eg-renamed-or-additional-parameters","title":"Beacon v2 <code>=~</code> PXF v2 (e.g. renamed or additional parameters)","text":""},{"location":"formats-standards/#complexvalue","title":"<code>ComplexValue</code>","text":"<ul> <li>PXF ComplexValue</li> <li>Beacon v2 ComplexValue</li> </ul> <p>Renamed <code>ComplexValue.TypedQuantity.quantityType</code> compared to GA4GH Phenopackets v2 <code>ComplexValue.TypedQuantity.type</code> due to problematic use of <code>type</code> as parameter</p>"},{"location":"formats-standards/#externalreference","title":"<code>ExternalReference</code>","text":"<ul> <li>PXF ExternalReference</li> <li>Beacon v2 ExternalReference</li> </ul> <p>Renamed <code>ExternalReference.notes</code> compared to GA4GH Phenopackets v2 <code>ExternalReference.description</code> due to problematic use of <code>description</code> as parameter</p>"},{"location":"formats-standards/#measurement","title":"<code>Measurement</code>","text":"<ul> <li>PXF Measurement</li> <li>Beacon v2 Measurement</li> </ul> <p>Added <code>notes</code> and <code>date</code>.</p>"},{"location":"formats-standards/#phenotypicfeature","title":"<code>PhenotypicFeature</code>","text":"<ul> <li>PXF PhenotypicFeature</li> <li>Beacon v2 PhenotypicFeature</li> </ul> Beacon Phenopackets <code>featureType</code> <code>type</code> <code>severity</code>  (re-used definition reflecting an ontology term) <code>severity</code> (ontology class) <code>notes</code>"},{"location":"formats-standards/#procedure","title":"<code>Procedure</code>","text":"<ul> <li>PXF Procedure</li> <li>Beacon v2 Procedure</li> </ul> Beacon Phenopackets <code>procedureCode</code> <code>code</code> <code>ageAtProcedure</code>  (TimeElement) <code>performed</code> (<code>TimeElement</code>) <code>dateOfProcedure</code>  (ISO date)"},{"location":"formats-standards/#timeelement","title":"<code>TimeElement</code>","text":"<ul> <li>PXF TimeElement</li> <li>Beacon v2 TimeElement</li> </ul> <p>The specific parameters have been aligned w/ minimal differences in naming or use of general parameters.</p> Beacon Phenopackets <code>ontologyTerm</code> <code>ontology_class</code> <code>age</code> <code>age</code> (<code>Age</code>) <code>ageRange</code> <code>age_range</code> (<code>AgeRange</code>) <code>gestationalAge</code> <code>gestational_age</code> (<code>GestationalAge</code>) <code>...Timestamp</code> <code>timestamp</code> (<code>TimeStamp</code>) <code>timeInterval</code> <code>interval</code> (<code>TimeInterval</code>)"},{"location":"formats-standards/#treatment","title":"<code>Treatment</code>","text":"<ul> <li>PXF Treatment</li> <li>Beacon v2 Treatment</li> </ul> <p>Beacon still has an <code>ageOfOnset</code> parameter (?). Also, PXF <code>agent</code> has been renamed to a more general <code>treatmentCode</code>.</p>"},{"location":"formats-standards/#beacon-v2-pxf-v2-eg-multiplecomplex-differences","title":"Beacon v2 <code>~</code> PXF v2 (e.g. multiple/complex differences)","text":""},{"location":"formats-standards/#disease","title":"<code>Disease</code>","text":""},{"location":"formats-standards/#pedigree","title":"<code>Pedigree</code>","text":"<p>While the Beacon &amp; Phenopackets schemas for \"pedigree\" representation are not aligned, they may become superseded by the GA4GH pedigree standard currenty under development.</p>"},{"location":"formats-standards/#sex","title":"<code>Sex</code>","text":"<p>Beacon directly uses the (IMO preferable) representation through an ontology term, while PXF uses an ordinal mapping</p>"},{"location":"formats-standards/#link-phenopackets-documentation","title":"LINK: Phenopackets Documentation","text":"<ol> <li> <p>Source: @andrewyatz at GenomeStandards \u21a9</p> </li> </ol>"},{"location":"framework/","title":"Beacon v2 Framework","text":""},{"location":"framework/#introduction","title":"Introduction","text":"<p>The GA4GH Beacon specification is composed by two parts:</p> <ul> <li>the Beacon Framework </li> <li>the Beacon Models </li> </ul> <p>The Beacon Framework is the part that describes the overall structure of the API requests, responses, parameters, the common components, etc. It could also be referred in this document as simply the Framework.</p> <p>A Beacon Model describes the set of concepts included in a Beacon version (e.g. Beacon v2), like individual or biosample. It could also be referred in this document as simply the Model.</p> <p>The Framework could be considered the syntax and the Model as the semantics. </p> <p>Refer to the Models  for further information about the default model and how to use it.</p> <p>The Framework doesn't include anything related to specific entities but only the mechanisms for querying them and parsing the responses.  The BF is, therefore, independent from/agnostic to any specific Model. It can be leveraged to describe models from other domains like proteomics, imaging, biobanking, etc.</p> <p>A Beacon instance is just an implementation of a Beacon Model that follows the rules stated by the Beacon Framework.</p> <p>If you are a Beacon implementer, then, you don't need to clone this (Framework) repo, you only need to copy (or clone) the Beacon Model and modify it to your specific instance. You will find plenty of references to the Framework in the Model copy, and you will use the Json schemas in the Framework to validate that both the structure of your requests and responses are compliant with the Beacon Framework. The Beacon verifier tool would help in such validation.</p> <p>The Framework repo includes the elements that are common to all Beacons:</p> <ol> <li>The configuration files</li> <li>The Json schemas for the requests, the responses, and its respective sections</li> <li>The files of every Beacon root</li> <li>Examples of all the above (using a fake and simple Model)</li> </ol>"},{"location":"framework/#coding-and-naming-conventions","title":"Coding and naming conventions","text":"<p>Please visit the Standards Page</p>"},{"location":"framework/#folder-structure-in-the-framework-repo","title":"Folder structure in the framework repo","text":"<p>The above listed elements are organized in several folders (in alphabetical order):</p> <ul> <li>common: Json schemas and examples of the components used in other parts of the specification.</li> <li>configuration: Json schemas and examples for the configuration files that every Beacon MUST implement.</li> <li>requests: Json schemas and examples for the different sections of a request.</li> <li>responses: Json schemas and examples for the different types of responses and response sections.</li> <li>root folder: It only includes the definition of the Beacon root endpoints.</li> </ul>"},{"location":"framework/#the-root-folder-and-the-beacon-root-endpoints","title":"The root folder and the Beacon root endpoints","text":"<p>The root folder only contains the endpoints.json document, an OpenAPI 3.0.2 description of the endpoints that every Beacon instance MUST implement. The endpoints are: * the root (<code>/</code>) and <code>/info</code> that MUST return information (metadata) about the Beacon service and the organization supporting it. * the <code>/service-info</code> endpoint that returns the Beacon metadata in the GA4GH Service Info schema. * the <code>/configuration</code> endpoint that returns some configuration aspects and the definition of the entry types (e.g. genomic variants, biosamples, cohorts) implemented in that specific Beacon server or instance. * the <code>/entry_types</code> endpoints that only return the section of the configuration that describes the entry types in that Beacon. * the <code>/map</code> endpoint that returns a map (like a web sitemap) of the different endpoints implemented in that Beacon instance. * the <code>/filtering_terms</code> endpoint that returns a list of the filtering terms accepted by that Beacon instance.</p> <p>Most of these endpoints simply return the configuration files that are in the Beacon configuration folder. Of course, every Beacon instance would have their particular instance of such documents, including the configuration of such instance.</p> <p>Note: It could be argued that the Beacon configuration files are different for every Beacon instance and, hence, they should be part of the Model. However, the configuration files MUST be used, exactly with the same schema, by any model, independently if that Beacon follows the Beacon v2 Model or any other. Additionally, these endpoints and configuration files are critical for a Beacon client to be able to understand and use a Beacon instance. Therefore, we have considered it to be an essential part of the Framework and belonging to it.</p>"},{"location":"framework/#the-configuration","title":"The Configuration","text":"<p>Contains the Json schema files that describe the Beacon configuration, its contents are described in the section above, as they have almost a 1-to-1 relationship with such endpoints. Further details about the specific content of each file could be find in the corresponding sections below.</p>"},{"location":"framework/#the-requests","title":"The Requests","text":"<p>Contains the following Json schemas:</p> <ul> <li><code>beaconRequestBody.json:</code> Schema for the whole Beacon request. It is named <code>RequestBody</code> to keep the same nomenclature used by OpenAPI v3, but it actually contains the definition of the whole HTTP POST request payload.</li> <li><code>beaconRequestMeta.json:</code> Meta section of the Beacon request. It includes request context details relevant for the Beacon server when processing the request, like the Beacon API version used to format the request or the schemas expected for the entry types in the response.</li> <li><code>filteringTerms.json:</code> defines the schema for the filters included in the request.</li> <li><code>requestParameters.json</code> defines the, very free, schema of the parameters included in the request.</li> <li><code>examples-fullDocuments</code> folder: includes examples of \"actual\" requests. The example labelled with <code>MIN</code> in the name shows the minimal required attributes for the request to be compliant. The example labelled with <code>MAX</code> in the name includes a richer case with all the sections filled in.</li> <li><code>examples-sections</code> folder: includes examples of \"actual\" sections of the requests. It is included to allow specification designers and Beacon implementers to check the compliance with a single section instead of having to implement a whole request. Such way, We aim to facilitate an \"incremental\" implementation of an instance.</li> </ul>"},{"location":"framework/#differences-between-filteringterms-and-requestparameters","title":"Differences between FilteringTerms and RequestParameters","text":"<p>Both, the filters (filteringTerms) and the parameters (requestParameters), are used to refine the query. The availability of two mechanisms to refine the queries could sound initially confusing, but that separation is  taylored to facilitate the interpretation of the request by the Beacon server.</p> <p>An basic difference is that, in HTTP GET requests, each parameters is named (e.g. 'id', 'skip','limit') while filters go under the same named parameter 'filters'. For HTTP POST requests, the difference relays on paramaters having each one a separate definition (e.g. <code>id</code> is a <code>string</code>, while <code>skip</code> is an <code>integer</code>), while all filters follow the schema described in <code>/requests/filteringTerms.json</code>.</p> <p>An unrestricted query like <code>/datasets</code> should return the list of all datasets in a Beacon instance. That query could be refined by adding a generic condition like: \"return only datasets which could be used for 'general research'\" or \"return only the first 10 datasets\". The former belong to the filter category, the latter to the parameters. If you are a beacon implementer, a rule of thumb could be:</p> <ul> <li>anything that requires its own schema would be a request parameter </li> <li>anything that could be represented by an ontology term would go into the filters section.</li> <li>anything else would probably be a request parameter.</li> </ul>"},{"location":"framework/#the-responses","title":"The Responses","text":"<p>The Beacon concept includes several types of responses: some informative or informational and some with actual data payloads, and the error one. </p>"},{"location":"framework/#informational-responses","title":"Informational responses","text":"<p>A Beacon is able to return information, details, about itself. Many of the schema responses included in the <code>responses</code> folder have a 1-to-1 relationship with the corresponding configuration documents and their equivalent root endpoints, e.g. the <code>beaconEntryTypeResponse.json</code> is the schema of a response that wraps the <code>beaconConfiguration.json</code> document, and is then used as the payload of the <code>/entry_types</code> root endpoint. Schematically:</p> <ul> <li>configuration/an_schema.json: describes the schema of the configuration file itself.</li> <li>responses/an_schema_response.json: describes the format of the response that returns these configuration information.</li> <li>root/endpoints.json: describes the API endpoints to be called and parameters to be used to retrieve such responses.</li> </ul> <p>The following schemas refer to informational responses: beaconConfigurationResponse, beaconEntryTypeResponse, beaconFilteringTermsResponse, \u00e2nd beaconMapResponse.</p>"},{"location":"framework/#data-responses","title":"Data Responses","text":"<p>A Beacon could return responses at different granularity levels:</p> <ul> <li>boolean: only returns <code>exists: true</code> ('Yes') or <code>exists: false</code> ('No') to a given query.</li> <li>count: returns <code>Yes</code>/<code>No</code> and the number of matching results.</li> <li>record returns <code>Yes</code>/<code>No</code>, the number of matching results and all documents   corresponding to the requested entities. Documents are wrapped in \"result set\"   objects for every collection (e.g. every dataset or cohort). Even for record   level responses each beacon can control the details of data exposed in record   besides the minimal requirements of the entry type's schema.</li> </ul> <p>Each of these granularity levels has an equivalent response schema: </p> <ul> <li>boolean: <code>beaconBooleanResponse</code></li> <li>count: <code>beaconCountResponse</code></li> <li>record: <code>beaconResultSetsResponse</code></li> </ul> <p>An additional schema, beaconCollectionsResponse, describes such responses that returns details about the collections in a Beacon, but not the collection content themselves. Otherwise said, the response describes a dataset, but not returns the contents of any dataset.</p>"},{"location":"framework/#common-components","title":"Common Components","text":"<p>Some elements are transerval to the Framework and to any model, e.g. the schema for describing an ontology term or the reference to an external schema (like the reference to GA4GH Phenopackets or GA4GH Service Info schemas).</p>"},{"location":"framework/#pagination-skip-and-limit","title":"Pagination - <code>skip</code> and <code>limit</code>","text":"<p>Record level responses potentially may return many (i.e. thousands and beyond) documents which usually would be \"paginated\", i.e. split into may chunks (\"pages\"). Beacon handles pagination through the <code>skip</code> and <code>limit</code> parameters as part of the request:</p> <ul> <li><code>limit</code> in the request tells the server the maximum number of records that should   be returned in a single response (i.e. the \"page size\")</li> <li><code>skip</code> indicates how many of those pages should be skipped over when delivering   the results</li> </ul> <p>Therefore, <code>skip: 2</code> and <code>limit: 8</code> will return records 17-24 (if those exist).</p>"},{"location":"framework/#testing-the-compliance-of-an-implementation-with-testmode","title":"Testing the compliance of an implementation with testMode","text":"<p>Given that the flexibility allowed in the implentation of each Beacon instance, and the security restrictions that could apply (e.g. only answering after authentication of the user), a mechanism is required for allowing testing the compliance of a Beacon. A first step in this compliance testing is done by the implementer by checking that received requests are correct and that the generated responses match the provided schemas. However, an external compliance testing is desirable when the Beacon instance plans to be integrated in a network or to engage in dialogs with a diversity of clients. For this second scenario, the testMode parameter was included.</p> <p>A Beacon instance could receive a request with the testMode parameter activated (value= true) in which case the Beacon MUST respond, with actual or fake contents, using the response format and skipping any user authentication. The fact that a response has been generated for testing purposes is included in the meta section of the response.</p>"},{"location":"framework/#the-beacon-configuration-file","title":"The Beacon Configuration file","text":"<p>The file <code>/configuration/beaconConfiguration.json</code> defines the schema (in Json schema draft-07) of the Json file that includes core aspects of a Beacon instance configuration. The schema includes four sections:</p> <ol> <li>$schema: that MUST BE a reference to a schema. In the Models, the instances of that file will point to this file. Having the schema allows verifying that the document is compliant with it.</li> <li>maturityAttributes: Declares the level of maturity of the Beacon instance. Available values are:<ul> <li>DEV: Service potentially unstable, not using real data, which availability and data should not be used in production setups.</li> <li>TEST: The service is expected to be stable, meaning up and available, but does not include real data to be trusted for real world queries.</li> <li>PROD: Service stable, at production level standards, containing actual data. Except when testing, most of the Beacon queries are expected to be answered by 'PROD' Beacons.</li> </ul> </li> <li>securityAttributes: Configuration of the security aspects of the Beacon. By default, a Beacon that does not declare the configuration settings would return <code>boolean</code> (true/false) responses, and only if the user is authenticated and explicitly authorized to access the Beacon resources. Although this is the safest set of settings, it is not recommended unless the Beacon shares very sensitive information. Non sensitive Beacons should preferably opt for a <code>record</code> and <code>PUBLIC</code> combination.<ul> <li>defaultGranularity: Default granularity of the responses. Some responses could return higher detail, but this would be the granularity by default.</li> <li>securityLevels: All access levels supported by the Beacon. Any combination is valid, as every option would apply to different parts of the Beacon. Available options are:</li> </ul> </li> </ol> Granularity Description <code>boolean</code> returns 'true/false' responses. <code>count</code> adds the total number of positive results found. <code>record</code> returns details for every row. <p>For those cases where a Beacon prefers to return records with less, not all, attributes, different strategies have been considered, e.g.: keep non-mandatory attributes empty, or Beacon to provide a minimal record definition, but these strategies still need to be tested in real world cases and hence no design decision has been taken yet.</p> security level description <code>PUBLIC</code> Any anonymous user can read the data <code>REGISTERED</code> Only known users can read the data <code>CONTROLLED</code> Only specificly granted users can read the data"},{"location":"framework/#example","title":"Example","text":"<pre><code>  \"maturityAttributes\": {\n    \"productionStatus\": \"DEV\"\n  },\n  \"securityAttributes\": {\n    \"defaultGranularity\": \"boolean\",\n    \"securityLevels\": [\"PUBLIC\", \"REGISTERED\", \"CONTROLLED\"]\n  }\n</code></pre> <p>The Beacon in the example is in development status, returns boolean answers by default, and has queries available in any of the access levels.</p>"},{"location":"handovers/","title":"[H\u2014&gt;O] Beacon Handovers for Data Delivery","text":"<p>While the Beacon v1 response was restricted to aggregate data and Beacon v2 itself provides schemas for structuring response objects (e.g. henomic variation  or biosample data)  the protocol can be expanded by providing custom access methods to data elements matched by a Beacon query. Since November 2018, Beacon v1.n has included support for a \"handover\" protocol, in which rich data content can be provided from linked services, initiated through a Beacon query<sup>1</sup>.</p> <p>Typical examples of <code>Handover</code> use include:</p> <ul> <li>access to restricted data, in which a handover URL points to data behind an authentication service or Firewall</li> <li>delivery of large/binary datasets, e.g. original array data or BAM files for a given analysis</li> <li>asynchronous calls in which a front-end follows handover URLs for additional data</li> </ul>"},{"location":"handovers/#examples","title":"Examples","text":""},{"location":"handovers/#download-variants-in-vcf-format","title":"Download variants in VCF format","text":"<p>In the following example a minimal boolean response is shown which contains a single handover in the general <code>resultsHandovers</code> list.</p> <pre><code>{\n    \"meta\": {\n        ...\n    },\n    \"responseSummary\": {\n        \"exists\": true\n    },\n    \"resultsHandovers\": [\n        {\n            \"handoverType\": {\n                \"id\": \"EDAM:3016\",\n                \"label\": \"VCF\"\n            },\n            \"url\": \"https://my.genomeserver.space/data/vcf/grch38/gizsgf8oaoiteowgfdhhpoiuy/variants.vcf\",\n            \"note\": \"VCFv4.4 file with sample mapped variants (authentication required)\"\n        }\n    ]\n}\n</code></pre> <ol> <li> <p>An early discussion of the topic can e.g. be found in the Beacon developer area on Github. As of 2018-11-13, the handover concept had become part of the code development.\u00a0\u21a9</p> </li> </ol>"},{"location":"implementations-options/","title":"Implementations options","text":"<p>Important</p> <p>As previously described, Beacon v2 is an specification for sharing/discovery of data. Thus, a priori, it has nothing to do with any particular software, database or computer language.</p>"},{"location":"implementations-options/#which-are-the-implementation-options","title":"Which are the implementation options?","text":"<p>Two elements are needed to implement (or \"light\") a Beacon v2: </p> <ol> <li>An internal database (where the biological data are stored).</li> <li>A REST API that provides a standardized way to send queries and receive responses (containing yes/no, counts or data).</li> </ol> <p>In this section we are going to present three implementation options, going from no involvement/delegate to CRG software to full delegate to CRG software.</p>"},{"location":"implementations-options/#option-a","title":"Option A","text":"<p>Let's say that you have your data organized and structured in a database (e.g. SQL or NoSQL which may or may not have an internal layer to get access to it). Let's also say that you have the resources (and knowledge) to read the \"instructions\" (i.e., Beacon v2 specification) to build an API on top of your existing solution. If that's your case, then this is the option for you. You are one of what we call Beacon v2 API implementers. We have a few of them already in the Beacon v2 Service Registry:</p> <ul> <li>European Genome-Phenome Archive Beacon</li> <li>Cafe Variome</li> <li><code>bycon</code> Python stack driving full featured v2 under the Progenetix resource</li> <li>Fundacion Progreso y Salud Beacon v2 API</li> <li>CNAG Beacon v2 API</li> </ul>"},{"location":"implementations-options/#option-b","title":"Option B","text":"<p>Let's say that you have a solution to organize your data but you don't have the resources (or knowledge) to implement a Beacon v2 API yourself. In some pilot studies, CRG has been helping individual institutions to build their Beacon v2 API. However, this option is not practical and does not scalate well so you may want to check Option C.</p>"},{"location":"implementations-options/#option-c","title":"Option C","text":"<p>Let's say that you have your data somewhat structured (you may have Excel files, PDFs, VCFs... or maybe a SQL database, or an EHR solution with phenoclinic information). </p> <p>You want to \"beaconize\" your data to be part of a larger ecosystem, but you're unsure where to start, and/or don't want to invest a lot of resources because you are still unsure if the whole thing will pay off. Well, you're a not alone! Most centers are in this situation. For that reason at CRG we developed the Beacon v2 Reference Implementation.</p> <p>Important</p> <p>People that download and install B2RI or another pre-packaged solution are named Beacon v2 deployers.</p>"},{"location":"models/","title":"beacon-v2-Models","text":""},{"location":"models/#introduction","title":"Introduction","text":"<p>The GA4GH Beacon specification is composed by two parts:</p> <ul> <li>the Beacon Framework </li> <li>the Beacon Models </li> </ul> <p>The Beacon Framework (in Framework repo  ) is the part that describes the overall structure of the API requests, responses, parameters, the common components, etc. It could also be referred in this document as simply the Framework.</p> <p>Beacon Models (in the Models repo  ) describes the set of concepts included in a Beacon version (e.g. Beacon v2), like individual or biosample, and also the relationships between them. It could also be referred in this document as simply the Model.</p> <p>The Framework could be considered the syntax and the Model as the semantics. </p> <p>Refer to the Framework  for further information about the Framework and its parts.</p> <p>A beacon instance is just an implementation of a Beacon Model that follows the rules stated by the Beacon Framework.</p> <p>Beacon default model vs. beacon instances</p> <p>While the Beacon default model provides templates for responses and formats for uniform data delivery - especially for networked beacons - it does not prescribe how data should be organised in individual instances or what schemas should be used for local storage. </p> <p>If you are a Beacon implementer, then, you don't need to clone the Framework repo, you only need to copy (or clone) the Beacon Model and modify it to your specific case. You will find plenty of references to the Framework in the Model copy, and you will use the Json schemas there to validate that both the structure of your requests and responses are compliant with the Beacon Framework. The Framework is not used to check the schema in the responses payload (e.g. the actual details of a biosample of a cohort). The schemas for that are included in the Model that you should have copied.</p> <p>classDiagram      analyses &lt;-- genomicVariations : 1..n     runs &lt;-- analyses : 1..n     biosamples &lt;-- runs : 1..n     individuals &lt;-- biosamples : 1..n      runs &lt;.. genomicVariations : 1..n     biosamples &lt;.. genomicVariations : 1..n     individuals &lt;.. genomicVariations : 1..n     biosamples &lt;.. analyses : 1..n     individuals &lt;.. analyses : 1..n     individuals &lt;.. runs : 1..n      cohorts o-- individuals : m..n     datasets o-- genomicVariations : 1..n      class genomicVariations{         analysisId         runId         biosampleId         individualId         variation         clinicalInterpretations         caseLevelData         ...     }     class analyses{         id         runId         biosampleId         individualId         analysisDate         pipelineName         aligner         ...     }     class biosamples{         id         individualId         biosampleStatus         sampleOriginType         histologicalDiagnosis         collectionDate         ...     }     class individuals{         id         sex         diseases         phenotypicFeatures         ethnicity         pedigrees         ...     }     class runs{         id         biosampleId         individualId         runDate         librarySource         libraryStrategy         platform         ...         }     class datasets{         id         name         description         dataUseCondition         info         updateDateTime         ...     }     class cohorts{         id         name         cohortType         cohortSize         cohortDataTypes         cohortDesign         ...     }  </p> Beacon v2 Models entities and their relationships <p>The above entities are defined as follows;</p> <ul> <li>Collections (Datasets and Cohorts): groupings of variants or individuals that share something in common: e.g., who belong to the same repository (datasets) or study populations (cohorts).</li> <li>Genomic variations: unique genomic alterations, e.g., position in a genome, sequence alterations, type, etc.</li> <li>Individuals: either patients or healthy controls whose details (including phenotypic and clinical) are stored in the repository.</li> <li>Biosamples: samples taken from individuals, including details of procedures, dates and times.</li> <li>Analyses &amp; Runs: details on (a) procedures used for sequencing a biosample (runs), and (b) bioinformatic procedures to identify variants (analyses)</li> </ul> <p>Beacon v1 Model: Repo</p> <p>Provided as an example for Beacon v1 implementers that want to update to Beacon v2 but not planning to add any additional entry type to their Beacon.</p>"},{"location":"networks/","title":"Beacon Networks and Aggregators","text":"<p>Although a Beacon can be instantiated as stand-alone solution Many Beacon instances will be part of managed networks, e.g. multi-institunional projects where individual beacons are combined through a single interface. Additionally, open beacon instances may be accessed from aggregators which can register these resources, federate queries and aggregate the responses, possibly without any direct support from the instances' maintainers.</p> <p>Beacon Networks</p> <p>... are collections of multiple beacon instances - possibly from different institutions or providers. Beacon networks rely on some sort of central service managing the integration of nodes and provide a unified access through a customized interface and possibly with active alignment of the instances' features (such as harmonized filtering terms). One may think of a beacon network as a \"managed aggregator\" with some active alignment of the individual resources.</p> <p>Beacon Aggregator</p> <p>... provides a single interface and API for accessing multiple Beacon instances where the individual beacons may not necessarily be harmonized (or even aware of their integration through the aggregator). An aggregator may include functionality to remap requests and responses for beacons with e.g. different versions or such using different standards (genome editions, ontology terms...).</p> <p>The Beacon framework includes several features aimed to be consumed by Beacon network aggregators. For example, a Beacon endpoint declares which entities are implemented in that particular instance, which filtering terms are being supported or the URL endpoints through which different entities (such as biosamples or genomic variants) can be queried.</p> <p> </p> Beacon v2 Networks"},{"location":"networks/#networking-heterogeneous-beacons","title":"Networking heterogeneous beacons","text":"<p>In addition to genomic variation queries with Boolean responses the Beacon v2 protocol permits the implementers to support different types of entities (e.g. biosample and analysis data) both to be queried against and to be returned in Beacon responses - so a request may retrieve information about the samples in which an indicated genomic variant had been found or information about technical parameters used to detect such a variant.</p> <p>However, individual beacons will have different profiles regarding the supported parameters, supported entities or the filtering terms recognized. Here, a number of information endpoints allow the profiling of beacons which is especially important when designing Beacon networks and aggregating their responses.</p>"},{"location":"networks/#supported-filters","title":"Supported filters","text":"<p>Filters represent a powerful way to query various features in beacon entities. When designing a network of multiple beacons the <code>filtering_terms</code> informational endpoints can be utilized to e.g. implement translators for harmonizing the possibly differing terms used in the individual Beacon instances.</p> <p>TBD</p>"},{"location":"other-implementations/","title":"Other implementations","text":""},{"location":"other-implementations/#registry-server","title":"Registry Server","text":"<p>The Beacon registry server, hosted through the European Genome-Phenome Archive, monitors a number of implementations of the Beacon v2 protocol by various organisations actively involved in Beacon protocol development.</p>"},{"location":"other-implementations/#link-beacon-v2-ga4gh-approval-registry","title":"Link: Beacon v2 GA4GH Approval Registry","text":""},{"location":"other-implementations/#example-implementations","title":"Example Implementations","text":""},{"location":"other-implementations/#progenetix-api","title":"Progenetix API","text":"<p>The Progenetix database and cancer genomic information resource contains genome profiles of more than 140000 individual cancer genome screening experiments, with the majority representing results from genomic copy number assessment studies. With its Beacon<sup>+</sup> forward-looking test implementation, since 2016 Progenetix has been developing concepts for Beacon protocol extensions such as CNV query options or handover data delivery.</p>"},{"location":"other-implementations/#technologies","title":"Technologies","text":"<ul> <li>MongoDB backend</li> <li><code>bycon</code> Python-based full stack API / middleware (documentation here)</li> <li><code>progenetix-web</code> React based front-end (modular for Beacon instances as well as the whole Progenetix UI)</li> </ul>"},{"location":"other-implementations/#link-documentation-page-for-progenetix-rest-paths","title":"Link: Documentation page for Progenetix REST paths","text":""},{"location":"other-implementations/#cafe-variome","title":"Cafe Variome","text":""},{"location":"other-implementations/#link-cafe-variome","title":"Link: Cafe Variome","text":""},{"location":"other-implementations/#cnag-beacon-v2-api","title":"CNAG Beacon v2 API","text":""},{"location":"other-implementations/#link-cnag-beacon-v2-api","title":"Link: CNAG Beacon v2 API","text":""},{"location":"other-implementations/#tips-for-new-implementers","title":"Tips for New Implementers","text":"<p>Find below some tips to get you started:</p> <ol> <li>Start with a boolean beacon.</li> <li>List your available endpoints.</li> <li>Map the data from your DB to the Models .</li> <li>Handle the different types of filters and request parameters.</li> <li>Build a response following the Framework .</li> </ol>"},{"location":"pedigree/","title":"Overview of the JSON schema pedigree.json","text":"<p>The JSON schema for the pedigree data defines how members of a pedigree (family tree) are represented. It includes several key components:</p> <ol> <li>\"id\": A unique identifier for the pedigree, which is distinct from a family ID. This is because one individual can be involved in multiple pedigrees related to different diseases.</li> </ol> <p></p> <p>Example: in case a proband (Proband 1) is affected by two diseases segregating in the family, they can be found in two pedigrees related to these different diseases (pedigree drawn here from the Proband 1 perspective showing all family members).</p> <ol> <li> <p>\"members\": An array of individuals involved in the pedigree, either with a full family structure (if attached to the proband) or with two members (if the perspective is from a parent or relative). Each member object includes:</p> <ul> <li>\"affected\": Whether the individual is affected by the disease.</li> <li>\"memberId\": The unique identifier of the individual.</li> <li>\"role\": A role object identifying the relationship of the individual (e.g., proband, biological mother, biological father).</li> </ul> </li> <li> <p>\"disease\": A reference to the disease(s) affecting the individual in the pedigree. This links to another file, <code>disease.json</code>, which contains more details about the disease data.</p> </li> <li> <p>\"numSubjects\": The total number of individuals in the pedigree. This simplifies queries by providing the total count, helping to avoid reconstructing the family tree repeatedly.</p> </li> </ol>"},{"location":"pedigree/#asymmetry-in-members","title":"Asymmetry in \"members\":","text":"<ul> <li>If the schema is defined from the proband's perspective, all members (proband, parents, etc.) are included.</li> <li>If defined from another individual's perspective (e.g., the mother), only two entries are included: the individual and the proband. This structure helps with flexibility in representing different family views and cases where an individual may appear in multiple pedigrees.</li> </ul>"},{"location":"pedigree/#faqs-and-considerations","title":"FAQs and considerations:","text":"<p>1. Is it necessary to include one pedigree for each disease an individual has?</p> <p>Answer: No, it is not necessary to create a new pedigree for every disease an individual has. Doing so can overburden the system with redundant information, resulting in many pedigrees that may be of little to no interest. Instead, you should focus on the most relevant or impactful diseases for the family and research context.</p> <p>2. Can pedigrees be added on demand?</p> <p>Answer: Yes, pedigrees can be added dynamically as the individual\u2019s data in Beacon is not static. This allows flexibility to update an individual\u2019s genetic or family data as more information is discovered, or when a particular disease becomes the focus of research or clinical interest.</p>"},{"location":"records/","title":"Model defined records","text":"<p>A beacon instance will allow to retrieve data - in contrast to the aggregated boolean and count responses - if it supports <code>record</code> granularity. The type of document(s) is selected either through the REST path or by specifying the entity through the <code>requestedEntityId</code>. </p> <p>While any beacon can in principle choose its own data model - and thereby the schemas of records it supports - for biomedical genomics beacons we recommend the support of the Beacon default data model</p>"},{"location":"records/#beacon-default-data-model","title":"Beacon Default Data Model","text":"<p>The Beacon v2 default data model provides a set of schemas for common data entities with a focus on biomedical genomics (although neither specific to medical application or human genomics per se).</p> <p>In contrast to earlier versions of the protocol, the Beacon v2 default models provide the technical blueprint for rich, structured data responses to Beacon queries, such as annotated genomic variations, biosamples from which matched variants were retrieved or data about individuals and study cohorts, where available and authorized.</p> <p>Detailed information is available through the Models Introduction and the default schemas documented from there.</p>"},{"location":"records/#examples","title":"Examples","text":"Biosample in Beacon v2.0 <p>This example is a single biosample response, e.g. as the result of a REST path call (<code>.../biosamples/{id}/</code>). The response just demonstrates some of the available biosample parameters and removes some technical/meta information for clarity. Also, the sample contains fields which are not defined in the default schema (such as  <code>icdoMorphology</code>...); but although the use of custom fields is discouraged to enhance interoperability, the use of <code>additionalProperties</code> is allowed so the data itself remains schema conform. </p> <pre><code>{\n  \"meta\": {\n    \"apiVersion\": \"v2.0.0\",\n    \"beaconId\": \"org.progenetix\",\n    \"receivedRequestSummary\": {\n        ...\n    },\n    \"returnedGranularity\": \"record\",\n    \"returnedSchemas\": [\n      {\n        \"entityType\": \"biosample\",\n        \"schema\": \"https://progenetix.org/services/schemas/biosample/\"\n      }\n    ],\n  },\n  \"responseSummary\": {\n    \"exists\": true,\n    \"numTotalResults\": 1\n  },\n  \"response\": {\n    \"resultSets\": [\n      {\n        \"exists\": true,\n        \"setType\": \"dataset\",\n        \"id\": \"progenetix\",\n        \"resultsCount\": 1,\n        \"results\": [\n          {\n            \"id\": \"pgxbs-kftvi9i0\",\n            \"individualId\": \"pgxind-kftvi9i0\",\n            \"notes\": \"Primary Tumor\",\n            \"biosampleStatus\": {\n              \"id\": \"EFO:0009656\",\n              \"label\": \"neoplastic sample\"\n            },\n            \"collectionMoment\": \"P44Y1M24D\",\n            \"sampleOriginType\": {\n              \"id\": \"OBI:0001479\",\n              \"label\": \"specimen from organism\"\n            },\n            \"dataUseConditions\": {\n              \"id\": \"DUO:0000004\",\n              \"label\": \"no restriction\"\n            },\n            \"externalReferences\": [\n              {\n                \"id\": \"pgx:TCGA.933b9daf-a5bf-46cf-92b6-5ddd8279919c\",\n                \"label\": \"TCGA case_id\"\n              },\n              {\n                \"id\": \"pgx:TCGA.TCGA-76-6663\",\n                \"label\": \"TCGA submitter_id\"\n              },\n              {\n                \"id\": \"pgx:TCGA.005cb7ce-5050-43aa-85ff-cd56ed830535\",\n                \"label\": \"TCGA sample_id\"\n              },\n              {\n                \"id\": \"pgx:TCGA.GBM\",\n                \"label\": \"TCGA GBM project\"\n              }\n            ],\n            \"histologicalDiagnosis\": {\n              \"id\": \"NCIT:C3058\",\n              \"label\": \"Glioblastoma\"\n            },\n            \"icdoMorphology\": {\n              \"id\": \"pgx:icdom-94403\",\n              \"label\": \"Glioblastoma, NOS\"\n            },\n            \"icdoTopography\": {\n              \"id\": \"pgx:icdot-C71.9\",\n              \"label\": \"Brain, NOS\"\n            },\n            \"pathologicalStage\": {\n              \"id\": \"NCIT:C92207\",\n              \"label\": \"Stage Unknown\"\n            },\n            \"sampleOriginDetail\": {\n              \"id\": \"UBERON:0000955\",\n              \"label\": \"brain\"\n            },\n            \"updated\": \"2020-09-10 17:44:04.888000\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"records/#alternative-data-models","title":"Alternative Data Models","text":"<p>In principle, the separation of framework and models allows for different models in domains  outside of the genomics focussed Beacon v2 realm, e.g. \u201cImaging Beacon\u201d, to be built using the same Framework.</p>"},{"location":"rest-api/","title":"Beacon REST API","text":"<p>While the full power of the Beacon API can be unlocked through the use of structured queries using JSON serialization (\"POST\" requests), the majority of common queries can be implemented through standard query URLs with parameters (GET queries).</p>"},{"location":"rest-api/#beacon-api-url-structure","title":"Beacon API URL structure","text":"<p>Beacon REST paths in general follow the format</p> <p><code>__APIroot__/__entryType__/{id}/</code></p> <p>or</p> <p><code>__APIroot__/__entryType__/{id}/__requestedSchema__</code></p> <p>A typical example would e.g. the request to retrieve all genomic variants associated with a biosample</p> <p><code>https://example.com/beacon/api/biosamples/bios-st4582/g_variants</code></p> REST Endpoint Definitions <p>The endpoind paths available for a given Beacon instance are defined in <code>__APIroot__/beaconMap/</code> Github</p>"},{"location":"rest-api/#post-requests","title":"<code>POST</code> requests","text":"<p>In <code>POST</code> requests queries and metadata are defined in JSON objects as specified in the model supported by the Beacon instance. For more information see</p> <ul> <li>the requests documentation</li> <li>the models</li> </ul>"},{"location":"rest-api/#get-queries","title":"<code>GET</code> queries","text":"<p>By default the Beacon model supports a limited set of query parameters, most notably such addressing genomic variations. Examples can be found in the Genomic Queries documentation and in the requests section of the default model.</p>"},{"location":"rest-api/#list-parameters-in-get-queries","title":"List parameters in <code>GET</code> queries","text":"<p>Several of the common query parameters have a multiple value option, i.e. are assumed to be lists. A typical use case here would be the construction of Bracket Queries which use 2 of each <code>start</code> and <code>end</code> values.</p> Use a comma <code>,</code> separator for list values in <code>GET</code> <p>Due to the problem of some web frameworks with the interpretation of multiple values for the same parameter we recommend the consistant use of a single parameter name and comma-concatenated values.</p> <ul> <li><code>&amp;start=1234000&amp;start=5234000</code></li> <li><code>&amp;start=1234000,5234000</code></li> </ul>"},{"location":"security/","title":"Security","text":"<p>Disclaimer</p> <pre><code>A stand-alone regulatory and ethics review has been performed on the specification itself&gt;\nHowever, it is the responsibility of the implementer to ensure that appropriate measures are taken\nto remove risks related to privacy, confidentiality, and/or security of data.\n</code></pre> <p>The Beacon uses a 3-tiered access model: <code>anonymous</code>, <code>registered</code>, and <code>controlled access</code>.</p> <p>Technical Notes</p> <pre><code>For detailed information about the technical implementation of the different levels\nof security please see the [Framework](framework.md) documentation.\n</code></pre>"},{"location":"security/#registered","title":"Registered","text":"<p>For a Beacon to respond to a query at the registered tier, the user must identify themselves to the Beacon, for example by using an ELIXIR identity. </p>"},{"location":"security/#controlled","title":"Controlled","text":"<p>For a Beacon to respond to a controlled access query, the user must have applied for, and been granted access to, the Beacon (or data derived from one or more individuals within the Beacon) individuals) whose data is only accessible at specified tiers within the Beacon. This tiered access model allows the owner or controller of a Beacon to determine which responses are returned to whom depending on the query and the user who is making the request, for example to ensure the response respects the consent under which the data were collected.</p>"},{"location":"security/#anonymous","title":"Anonymous","text":"<p>Anonymous Beacon can be accessed by any request.</p> <p>Synthetic data</p> <p>The use of synthetic data for testing is important in that it ensures that the full functionality of a Beacon can be tested and / or demonstrated without risk of exposing data from individuals. In addition to testing or demonstrating a deployment, synthetic data should be used for development, for example when adding new features.</p>"},{"location":"variant-queries/","title":"Genomic Variant Queries","text":"<p>For querying of genomic variations Beacon v2 builds on and extends the options provided by earlier versions.</p>"},{"location":"variant-queries/#beacon-sequence-queries","title":"Beacon Sequence Queries","text":"<p>Sequence Queries query for the existence of a specified sequence at a given genomic position. Such queries correspond to the original Beacon queries and are used to match short, precisely defined genomic variants such as SNVs and INDELs.</p>"},{"location":"variant-queries/#parameters","title":"Parameters","text":"<ul> <li><code>referenceName</code></li> <li><code>start</code> (single value)</li> <li><code>alternateBases</code></li> <li><code>referenceBases</code></li> </ul>"},{"location":"variant-queries/#example-eif4a1-single-base-mutation","title":"Example: EIF4A1 Single Base Mutation","text":"<p>This is an example for a single base mutation (<code>G&gt;A</code>) at a specific position (GRCh38 chromosome 17 <code>7577120</code>) in the EIF4A1 eukaryotic translation initiation factor 4A1.</p> Beacon v2 GETBeacon v2 POSTBeacon v1Beacon v0.3 <pre><code>?referenceName=NC_000017.11&amp;start=7577120&amp;referenceBases=G&amp;alternateBases=A\n</code></pre> <pre><code>{\n    \"$schema\":\"beaconRequestBody.json\",\n    \"meta\": {\n        \"apiVersion\": \"2.0\",\n        \"requestedSchemas\": [\n            {\n                \"entityType\": \"genomicVariation\",\n                \"schema:\": \"https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/models/json/beacon-v2-default-model/genomicVariations/defaultSchema.json\"\n            }\n        ]\n    },\n    \"query\": {\n        \"requestParameters\": {\n            \"g_variant\": {\n                \"referenceName\": \"NC_000017.11\",\n                \"start\": [7577120],\n                \"referenceBases\": \"G\",\n                \"alternateBases\": \"A\"\n            }\n        }\n    },\n    \"requestedGranularity\": \"record\",\n    \"pagination\": {\n        \"skip\": 0,\n        \"limit\": 5\n    }\n}\n</code></pre> <p>There are optional parameters [<code>datasetIds</code>, <code>filters</code> ...] and also the option to specify the response type (through <code>requestedGranularity</code>) and returned data format (<code>requestedSchemas</code>). Please follow this up in the framework documentation.</p> <pre><code>?assemblyId=GRCh38&amp;referenceName=17&amp;start=7577120&amp;referenceBases=G&amp;alternateBases=A\n</code></pre> <pre><code>?ref=GRCh38&amp;chrom=17&amp;pos=7577121&amp;referenceAllele=C&amp;allele=A\n</code></pre>"},{"location":"variant-queries/#optional","title":"Optional","text":"<ul> <li><code>datasetIds=__some-dataset-ids__</code></li> <li><code>filters</code> ...</li> </ul>"},{"location":"variant-queries/#optional_1","title":"Optional","text":"<ul> <li><code>datasetIds=__some-dataset-ids__</code></li> </ul>"},{"location":"variant-queries/#optional_2","title":"Optional","text":"<ul> <li><code>beacon=__some-beacon-id__</code></li> </ul> <p>Before Beacon v0.4 a 1-based coordinate system was being used.</p>"},{"location":"variant-queries/#beacon-range-queries","title":"Beacon Range Queries","text":"<p>Beacon Range Queries are supposed to return matches of any variant with at least partial overlap of the sequence range specified by <code>reference_name</code>, <code>start</code> and <code>end</code> parameters.</p> <p></p>"},{"location":"variant-queries/#parameters_1","title":"Parameters","text":"<ul> <li><code>referenceName</code></li> <li><code>start</code> (single value)</li> <li><code>end</code> (single value)</li> <li>optional<ul> <li><code>variantType</code> OR <code>alternateBases</code> OR <code>aminoacidChange</code></li> <li><code>variantMinLength</code></li> <li><code>variantMaxLength</code></li> </ul> </li> </ul> <p>Use of <code>start</code> and <code>end</code></p> <p>Range queries require the use of single <code>start</code> and <code>end</code> parameters, in contrast to Bracket Queries.</p>"},{"location":"variant-queries/#example-any-variant-affecting-eif4a1","title":"Example: Any variant affecting EIF4A1","text":"Beacon v2 GETBeacon v2 POSTBeacon v1Beacon v0.3 <pre><code>?assemblyId=GRCh38&amp;referenceName=17&amp;start=7572837&amp;end=7578641\n</code></pre> <pre><code>{\n    \"$schema\":\"https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json\",\n    \"meta\": {\n        \"apiVersion\": \"2.0\",\n        \"requestedSchemas\": [\n            {\n                \"entityType\": \"genomicVariation\",\n                \"schema:\": \"https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/models/json/beacon-v2-default-model/genomicVariations/defaultSchema.json\"\n            }\n        ]\n    },\n    \"query\": {\n        \"requestParameters\": {\n            \"g_variant\":\n                \"referenceName\": \"NC_000017.11\",\n                \"start\": [ 7572837 ],\n                \"end\": [ 7578641 ]\n            }\n        }\n    },\n    \"requestedGranularity\": \"record\",\n    \"pagination\": {\n        \"skip\": 0,\n        \"limit\": 5\n    }\n}\n</code></pre> <p>Range Queries are new to Beacon v2</p> <p>Range Queries are new to Beacon v2</p>"},{"location":"variant-queries/#beacon-geneid-queries","title":"Beacon GeneId Queries","text":"<p>GeneId Queries are in essence a variation of Range Queries in which the coordinates are replaced by the HGNC gene symbol. It is left to the implementation if the matching is done on variants annotated for the gene symbol or if a positional translation is being applied.</p> <p></p>"},{"location":"variant-queries/#parameters_2","title":"Parameters","text":"<ul> <li><code>geneId</code></li> <li>optional<ul> <li><code>variantType</code> OR <code>alternateBases</code> OR <code>aminoacidChange</code></li> <li><code>variantMinLength</code></li> <li><code>variantMaxLength</code></li> </ul> </li> </ul> Beacon v2 GET for <code>geneId</code> (deletion CNV)Beacon v2 POST for <code>geneId</code> (deletion CNV) <pre><code>?geneId=EIF4A1&amp;variantMaxLength=1000000&amp;variantType=DEL\n</code></pre> <pre><code>{\n    \"$schema\":\"https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json\",\n    \"meta\": {\n        \"apiVersion\": \"2.0\",\n        \"requestedSchemas\": [\n            {\n                \"entityType\": \"genomicVariation\",\n                \"schema:\": \"https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/models/json/beacon-v2-default-model/genomicVariations/defaultSchema.json\"\n            }\n        ]\n    },\n    \"query\": {\n        \"requestParameters\": {\n            \"g_variant\":\n                \"geneId\": \"EIF4A1\",\n                \"variantType\": \"EFO:0030067\"\n            }\n        }\n    },\n    \"requestedGranularity\": \"record\",\n    \"pagination\": {\n        \"skip\": 0,\n        \"limit\": 5\n    }\n}\n</code></pre>"},{"location":"variant-queries/#beacon-bracket-queries","title":"Beacon Bracket Queries","text":"<p>Bracket Queries allow the specification of sequence ranges for both start and end positions of a genomic variation. The typical example here is the query for similar structural variants - particularly CNVs - affecting a genomic region but potentially differing in their exact base extents.</p> <p></p>"},{"location":"variant-queries/#parameters_3","title":"Parameters","text":"<ul> <li><code>referenceName</code></li> <li><code>start</code> (min) and <code>start</code> (max) - i.e. 2 start parameters</li> <li><code>end</code> (min) and <code>end</code> (max) - i.e. 2 end parameters</li> <li><code>variantType</code> (optional)</li> </ul> <p>Use of <code>start</code> and <code>end</code></p> <p>Bracket queries require the use of two <code>start</code> and <code>end</code> parameters, in contrast to Range Queries.</p> <p>List Parameters in GET Requests</p> <p>Since the direct interpretation of list parameters in queries is not supported by some server environments (e.g. PHP, GO\u2026), list parameters such as <code>start</code> and <code>end</code> should be provided as comma-concatenated strings when using them in GET requests.</p>"},{"location":"variant-queries/#example-cnv-query-tp53-deletion-query-by-coordinates","title":"Example: CNV Query - TP53 Deletion Query by Coordinates","text":"<p>The following example shows a \"bracket query\" for focal deletions of the TP53 gene locus:</p> <ul> <li>The start of the deletion has to occurr anywhere from approx. 2.5Mb 5' of the CDR start to just before the end of the CDR.</li> <li>The end of the matched CNVs has to be anywhere from the start of the gene locus to approx. 2.5Mb 3' of its end.</li> </ul> <p>This leads to matching of deletion CNVs which have at least some base overlap with the gene locus but are not larger than approx. 5Mb (operational definitions of focality vary between 1 and 5Mb).</p> Beacon v2 GETBeacon v2 POSTBeacon v1Beacon v0.3 <pre><code>?datasetIds=TEST&amp;referenceName=NC_000017.11&amp;variantType=DEL&amp;start=5000000,7676592&amp;end=7669607,10000000\n</code></pre> <pre><code>{\n    \"$schema\":\"https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json\",\n    \"meta\": {\n        \"apiVersion\": \"2.0\",\n        \"requestedSchemas\": [\n            {\n                \"entityType\": \"genomicVariation\",\n                \"schema:\": \"https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/models/json/beacon-v2-default-model/genomicVariations/defaultSchema.json\"\n            }\n        ]\n    },\n    \"query\": {\n        \"requestParameters\": {\n            \"g_variant\": {\n                \"referenceName\": \"NC_000017.11\",\n                \"start\": [ 5000000, 7676592 ],\n                \"end\": [ 7669607, 10000000 ],\n                \"variantType\": \"DEL\"\n            }\n        }\n    },\n    \"requestedGranularity\": \"record\",\n    \"pagination\": {\n        \"skip\": 0,\n        \"limit\": 5\n    }\n}\n</code></pre> <p>There are optional parameters [<code>datasetIds</code>, <code>filters</code> ...] and also the option to specify the response type (through <code>requestedGranularity</code>) and returned data format (<code>requestedSchemas</code>). Please follow this up in the framework documentation.</p> <pre><code>?assemblyId=GRCh38&amp;referenceName=17&amp;variantType=DEL&amp;start=5000000,7676592&amp;end=7669607,10000000\n</code></pre> <p>CNV query options were only implemented with Beacon v0.4, based on Beacon<sup>+</sup> prototyping.</p>"},{"location":"variant-queries/#optional_3","title":"Optional","text":"<ul> <li><code>datasetIds=__some-dataset-ids__</code></li> <li><code>filters</code> ...</li> </ul>"},{"location":"variant-queries/#optional_4","title":"Optional","text":"<ul> <li><code>datasetIds=__some-dataset-ids__</code></li> </ul>"},{"location":"variant-queries/#genomic-allele-query-short-form","title":"Genomic Allele Query (Short Form)","text":"<p>When available variants can be identified through their genomic HGVS short form.</p> Beacon v2 GET <pre><code>?genomicAlleleShortForm=NM_004006.2:c.4375C&gt;T\n</code></pre>"},{"location":"variant-queries/#aminoacid-change-query","title":"Aminoacid Change Query","text":"<p>Annotated variants can potentiallyqueried using the single amino acid replacement format. The <code>aminoacidChange</code> parameter may be combined with e.g. a <code>geneId</code> to increase specificity</p> Beacon v2 GET <pre><code>?aminoacidChange=V600E&amp;geneId=BRAF\n</code></pre>"},{"location":"variant-queries/#varianttype-parameter-interpretation","title":"<code>variantType</code> Parameter Interpretation","text":"<p>The <code>variantType</code> parameter is essential for scoping queries beyond precise sequence queries. While versions of Beacon before v2 had demonstrated the use of a few, VCF derived values (particularly for CNV queries using <code>DUP</code> or <code>DEL</code>), the relation of these values to underlying genomic variations had not been precisely defined.</p> <p>Implementation of <code>variantType</code> in Beacon Instances</p> <p>The current Beacon query model does not limit the use of values for <code>variantType</code> since at this time no single specification provides unanimous definitions of genomic variation categories. </p> Future <code>variantType</code> parameter use <p>While for legacy reasons and widespread use of VCFs as input source Beacon v2 documents the use of VCF-like terms, in principle other variant terms can be used (though with possibly negative implications in federated settings). The field of structural genomic variant annotations is rapidly developing, with more specific terms now becoming available e.g. through the Experimental Factor Ontology or the GA4GH Variant Representation Standard VRS (which ligns with the main EFO terms).</p>"},{"location":"variant-queries/#cnv-term-use-comparison-in-computational-fileschema-formats","title":"CNV Term Use Comparison in Computational (File/Schema) Formats","text":"<p>This table is maintained in parallel with the hCNV community documentation.</p> EFO Beacon VCF SO GA4GH VRS<sup>1</sup> Notes <code>EFO:0030070</code> copy number gain <code>DUP</code><sup>2</sup> or<code>EFO:0030070</code> <code>DUP</code><code>SVCLAIM=D</code><sup>3</sup> <code>SO:0001742</code> copy_number_gain <code>EFO:0030070</code> gain a sequence alteration whereby the copy number of a given genomic region is greater than the reference sequence <code>EFO:0030071</code> low-level copy number gain <code>DUP</code><sup>2</sup> or<code>EFO:0030071</code> <code>DUP</code><code>SVCLAIM=D</code><sup>3</sup> <code>SO:0001742</code> copy_number_gain <code>EFO:0030071</code> low-level gain <code>EFO:0030072</code> high-level copy number gain <code>DUP</code><sup>2</sup> or<code>EFO:0030072</code> <code>DUP</code><code>SVCLAIM=D</code><sup>3</sup> <code>SO:0001742</code> copy_number_gain <code>EFO:0030072</code> high-level gain commonly but not consistently used for &gt;=5 copies on a bi-allelic genome region <code>EFO:0030073</code> focal genome amplification <code>DUP</code><sup>2</sup> or<code>EFO:0030073</code> <code>DUP</code><code>SVCLAIM=D</code><sup>3</sup> <code>SO:0001742</code> copy_number_gain <code>EFO:0030072</code> high-level gain<sup>4</sup> commonly but not consistently used for &gt;=5 copies on a bi-allelic genome region, of limited size (operationally max. 1-5Mb) <code>EFO:0030067</code> copy number loss <code>DEL</code><sup>2</sup> or<code>EFO:0030067</code> <code>DEL</code><code>SVCLAIM=D</code><sup>3</sup> <code>SO:0001743</code> copy_number_loss <code>EFO:0030067</code> loss a sequence alteration whereby the copy number of a given genomic region is smaller than the reference sequence <code>EFO:0030068</code> low-level copy number loss <code>DEL</code><sup>2</sup> or<code>EFO:0030068</code> <code>DEL</code><code>SVCLAIM=D</code><sup>3</sup> <code>SO:0001743</code> copy_number_loss <code>EFO:0030068</code> low-level loss <code>EFO:0020073</code> high-level copy number loss <code>DEL</code><sup>2</sup> or<code>EFO:0020073</code> <code>DEL</code><code>SVCLAIM=D</code><sup>3</sup> <code>SO:0001743</code> copy_number_loss <code>EFO:0020073</code> high-level loss a loss of several copies; also used in cases where a complete genomic deletion cannot be asserted <code>EFO:0030069</code> complete genomic deletion <code>DEL</code><sup>2</sup> or<code>EFO:0030069</code> <code>DEL</code><code>SVCLAIM=D</code><sup>3</sup> <code>SO:0001743</code> copy_number_loss <code>EFO:0030069</code> complete genomic loss complete genomic deletion (e.g. homozygous deletion on a bi-allelic genome region)"},{"location":"variant-queries/#last-updated-2023-07-13-to-align-with-2023-03-22-hcnv-documentation-vrs-13-adjustment-by-mbaudis","title":"Last updated 2023-07-13 to align with 2023-03-22 hCNV documentation (VRS 1.3 adjustment) by @mbaudis","text":""},{"location":"variant-queries/#updated-2023-03-20-by-mbaudis-vrs-proposal","title":"updated 2023-03-20 by @mbaudis (VRS proposal)","text":""},{"location":"variant-queries/#query-parameter-change-log","title":"Query Parameter Change Log","text":""},{"location":"variant-queries/#beacon-v2","title":"Beacon v2","text":"<ul> <li>use of sequence reference id's which obviate the need for a <code>assemblyId</code> parameter</li> <li>range queries<ul> <li>with specified single start and end parameters a query should match any vatiant with partial or complete overlap with this sequence range</li> <li>additional parameters (e.g. <code>referenceBases</code>, <code>alternateBases</code>, <code>variantType</code>...) may be used to scope the range query</li> </ul> </li> <li>query by <code>aminoacidChange</code></li> <li>query by <code>geneId</code></li> <li><code>variantMinLength</code>, <code>variantMaxLength</code></li> </ul>"},{"location":"variant-queries/#beacon-v1-based-on-v04","title":"Beacon v1 (based on v0.4)","text":"<ul> <li>switch to 0-based interbase coordinates for the API with 1-based coordinates recommended for query forms<ul> <li>this represents the common GA4GH usage and the practice e.g. of the UCSC genome browser</li> </ul> </li> <li>introduction of bracketed queries<ul> <li>specification of intervals for <code>start</code> and <code>end</code> positions when querying multi-base variants allows for \"fuzzy\" CNV queries</li> </ul> </li> <li>support of a <code>variantType</code> parameter to specify e.g. CNV queries (<code>DUP</code>, <code>DEL</code>)<ul> <li><code>variantType</code> is not required for precise queries with specified <code>referenceBases</code> and <code>alternateBases</code></li> </ul> </li> </ul> <ol> <li> <p>The VRS annotations refer to the status from v1.3 (2022) when  the new class <code>CopyNumberChange</code> (discussion...) with the use of the EFO terms.\u00a0\u21a9</p> </li> <li> <p>While the use of VCF derived (<code>DUP</code>, <code>DEL</code>) values had been introduced with beacon v1, usage of these terms has always been a recommendation rather than an integral part of the API. We now encourage the support of more specific terms (particularly EFO) by Beacon developers. As example, the Progentix Beacon API uses EFO terms but provides an internal term expansion for legacy <code>DUP</code>, <code>DEL</code> support.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>VCFv4.4 introduces an <code>SVCLAIM</code> field to disambiguate between in situ events (such as tandem duplications; known adjacency/ break junction: <code>SVCLAIM=J</code>) and events where e.g. only the change in abundance / read depth (<code>SVCLAIM=D</code>) has been determined. Both J and D flags can be combined.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>VRS did not adopt the \"amplification\" term due to possible inconsistencies\u00a0\u21a9</p> </li> </ol>"},{"location":"implementations/org.progenetix/","title":"Org.progenetix","text":"Progenetix &amp; Beacon<sup>+</sup> <p>The Beacon+ implementation - developed in the Python &amp; MongoDB based <code>bycon</code> project - implements an expanding set of Beacon v2 paths for the Progenetix resource .</p>"},{"location":"implementations/org.progenetix/#scoped-responses-from-query-object","title":"Scoped responses from query object","text":"<p>In queries with a complete <code>beaconRequestBody</code> the type of the delivered data is independent of the path and determined in the <code>requestedSchemas</code>. So far, Beacon+ will compare the first of those to its supported responses and provide the results accordingly; it doesn't matter if the endpoint was <code>/beacon/biosamples/</code> or <code>/beacon/variants/</code> etc.</p> <p>Below is an example for the standard test \"small deletion CNVs in the CDKN2A locus, in gliomas\" Progenetix test query, here responding with the matched variants. Exchanging the <code>entityType</code> entry to</p> <ul> <li><code>{ \"entityType\": \"biosample\", \"schema:\": \"https://progenetix.org/services/schemas/Biosample/\"}</code></li> </ul> <p>would change this to a biosample response. The example ccan be tested by POSTing this as <code>application/json</code> to <code>https://progenetix.org/beacon/variants/</code> or <code>https://progenetix.org/beacon/biosamples/</code>.</p> <pre><code>{\n    \"$schema\":\"beaconRequestBody.json\",\n    \"meta\": {\n        \"apiVersion\": \"2.0\",\n        \"requestedSchemas\": [\n            {\n                \"entityType\": \"genomicVariant\",\n                \"schema:\": \"https://progenetix.org/services/schemas/genomicVariant\"\n            }\n        ]\n    },\n    \"query\": {\n        \"requestParameters\": {\n            \"datasets\": {\n                \"datasetIds\": [\"progenetix\"]\n            },\n            \"assemblyid\": \"GRCh38\",\n            \"referenceName\": \"9\",\n            \"start\": [21500001, 21975098],\n            \"end\": [21967753, 22500000], \n            \"variantType\": \"DEL\"\n        }\n    },\n    \"filters\": [\n        { \"id\": \"NCIT:C3058\", \"includeDescendantTerms\": true }\n    ]\n}\n</code></pre>"},{"location":"implementations/org.progenetix/#paths","title":"Paths","text":""},{"location":"implementations/org.progenetix/#base","title":"Base <code>/</code>","text":"<p>The root path provides the standard <code>BeaconInfoResponse</code>.</p> <ul> <li>/</li> </ul>"},{"location":"implementations/org.progenetix/#base-filtering_terms","title":"Base <code>/filtering_terms</code>","text":""},{"location":"implementations/org.progenetix/#filtering_terms","title":"<code>/filtering_terms/</code>","text":"<ul> <li>/filtering_terms/</li> <li></li> </ul>"},{"location":"implementations/org.progenetix/#base-biosamples","title":"Base <code>/biosamples</code>","text":""},{"location":"implementations/org.progenetix/#biosamples-query","title":"<code>/biosamples/</code> + query","text":"<ul> <li>/biosamples?filters=cellosaurus:CVCL_0004</li> <li>this example retrieves all biosamples having an annotation for the Cellosaurus CVCL_0004   identifier (K562)</li> </ul>"},{"location":"implementations/org.progenetix/#biosamplesid","title":"<code>/biosamples/{id}/</code>","text":"<ul> <li>/biosamples/pgxbs-kftva5c9</li> <li>retrieval of a single biosample</li> </ul>"},{"location":"implementations/org.progenetix/#biosamplestestmodetrue","title":"<code>/biosamples/?testMode=true</code>","text":"<ul> <li>/biosamples?testMode=true</li> <li>retrieval of some random samples</li> <li>for testing API responses</li> </ul>"},{"location":"implementations/org.progenetix/#biosamplesidg_variants","title":"<code>/biosamples/{id}/g_variants</code>","text":"<ul> <li>/biosamples/pgxbs-kftva5c9/g_variants/</li> <li>retrieval of all variants from a single biosample</li> </ul>"},{"location":"implementations/org.progenetix/#base-individuals","title":"Base <code>/individuals</code>","text":""},{"location":"implementations/org.progenetix/#individuals-query","title":"<code>/individuals</code> + query","text":"<ul> <li>/individuals?filters=NCIT:C7541</li> <li>this example retrieves all individuals having an annotation associated with NCIT:C7541 (retinoblastoma)</li> <li>in Progenetix, this particular code will be part of the annotation for the biosample(s) associated with the returned individual</li> <li>/individuals/?filters=PATO:0020001,NCIT:C9291</li> <li>this query returns information about individuals with an anal carcinoma (NCIT:C9291) and a known male genotypic sex (PATO:0020001)</li> <li>in Progenetix, the information about its sex is associated with the Individual object (and therefore in the individuals collection), whereas the information about the cancer type is a property of the Biosample (and therefore stored in the biosamples collection)</li> </ul>"},{"location":"implementations/org.progenetix/#individuals-query-requestedschemaphenopacket","title":"<code>/individuals</code> + query + <code>requestedSchema=phenopacket</code>","text":"<p>Progenetix provides <code>phenopacket</code> as (currently experimental) alternative schema (<code>requestedSchema</code>) for <code>/individuals</code>. This feature allows the combined delivery of attributes annotated w/ the biosamples and such general of the individual, as well as e.g. linking to genomic variation data.</p> <ul> <li>/individuals?requestedSchema=phenopacket&amp;filters=PATO:0020001,NCIT:C9291</li> </ul>"},{"location":"implementations/org.progenetix/#individualsid","title":"<code>/individuals/{id}</code>","text":"<ul> <li>/individuals/pgxind-kftx25hb/</li> <li>retrieval of a single individual</li> </ul>"},{"location":"implementations/org.progenetix/#individualstestmodetrue","title":"<code>/individuals/?testMode=true</code>","text":"<ul> <li>/individuals?testMode=true</li> <li>retrieval of some random individuals</li> <li>for testing API responses</li> </ul>"},{"location":"implementations/org.progenetix/#individualsidg_variants","title":"<code>/individuals/{id}/g_variants</code>","text":"<ul> <li>/individuals/pgxind-kftx25hb/g_variants/</li> <li>/individuals/pgxind-kftx25hb/genomicVariations/</li> <li>retrieval of all variants from a single individual</li> </ul>"},{"location":"implementations/org.progenetix/#base-g_variants","title":"Base <code>/g_variants</code>","text":"<p>There is currently (April 2021) still some discussion about the implementation and naming of the different types of genomic variant endpoints. Since the Progenetix collections follow a \"variant observations\" principle all variant requests are directed against the local <code>variants</code> collection.</p> <p><code>variants</code> is used as alias.</p>"},{"location":"implementations/org.progenetix/#g_variantstestmodetrue","title":"<code>/g_variants?testMode=true</code>","text":"<ul> <li>/g_variants?testMode=true</li> <li>retrieval of some random variants</li> <li>for testing API responses</li> </ul>"},{"location":"implementations/org.progenetix/#g_variants-query","title":"<code>/g_variants</code> + query","text":"<ul> <li>/variants/?assemblyId=GRCh38&amp;referenceName=17&amp;variantType=DEL&amp;filterLogic=AND&amp;start=7500000&amp;start=7676592&amp;end=7669607&amp;end=7800000</li> <li>This is an example for a Beacon \"Bracket Query\" which will return focal deletions in the TP53 locus (by position).</li> </ul>"},{"location":"implementations/org.progenetix/#g_variantsid","title":"<code>/g_variants/{id}</code>","text":"<ul> <li>/g_variants/pgxvar-5f5a35586b8c1d6d377b77f6</li> </ul>"},{"location":"implementations/org.progenetix/#g_variantsidbiosamples","title":"<code>/g_variants/{id}/biosamples</code>","text":"<ul> <li>/g_variants/pgxvar-5f5a35586b8c1d6d377b77f6/biosamples</li> </ul>"},{"location":"implementations/org.progenetix/#base-analyses","title":"Base <code>/analyses</code>","text":"<p>The Beacon v2 <code>/analyses</code> endpoint accesses the Progenetix <code>callsets</code> collection documents, i.e. information about the genomic variants derived from a single analysis. In Progenetix the main use of these documents is the storage of e.g. CNV statistics or binned genome calls.</p> <p><code>/callsets</code> is an alias in Progenetix</p>"},{"location":"implementations/org.progenetix/#analysestestmodetrue","title":"<code>/analyses?testMode=true</code>","text":"<ul> <li>/analyses/?testMode=true</li> <li>retrieval of some random analyses</li> <li>for testing API responses</li> </ul>"},{"location":"implementations/org.progenetix/#analyses-query","title":"<code>/analyses</code> + query","text":"<ul> <li>/analyses?filters=cellosaurus:CVCL_0004</li> <li>this example retrieves all biosamples having an annotation for the Cellosaurus CVCL_0004   identifier (K562)</li> </ul> Changes <ul> <li>2022-04-17: removed some non-standard examples (e.g. <code>variants_in_sample</code>)</li> <li>2021-11-02: added <code>/testMode</code> example</li> <li>2021-07-21: added <code>/map</code> endpoint (incomplete/unser construction)</li> <li>2021-07-21: added <code>/configuration</code> endpoint (incomplete/unser construction)</li> <li>2021-07-02: update for <code>/filteringTerms</code> endpoint to v2b4</li> <li>2021-06-25: updated for <code>datasets</code> parameter as object</li> <li>2021-06-24: Updated response structure conforming to v2b4:</li> <li><code>response_summary</code></li> <li>removal of <code>response</code> root element &amp; direct use of <code>result_sets</code></li> <li>2021-06-24: Updated query structure conforming to v2b4</li> <li><code>entityType</code> format fixed</li> <li><code>filters</code> now objects</li> <li>2021-06-23: New JSON POST example &amp; topic</li> <li>2021-06-07: Added <code>variants_interpretations</code> example</li> <li>2021-05-29: New <code>resultSets</code> response format</li> <li>no change to front-end or examples here but change of <code>bycon</code> backend</li> <li>2021-05-11: Added <code>/analyses</code></li> <li>2021-05-02: Added base path for <code>BeaconInfoResponse</code></li> <li>2021-04-26: First Version</li> </ul>"},{"location":"schemas-md/analyses_defaultSchema/","title":"analyses defaultSchema","text":"Term Description Type Properties Example Enum aligner Reference to mapping/alignment software string NA bwa-0.7.8 NA analysisDate Date at which analysis was performed. string NA 2021-10-17 NA biosampleId Reference to the <code>id</code> of the biosample this analysis is reporting on. string NA S0001 NA id Analysis reference ID (external accession or internal ID) string NA NA NA individualId Reference to the <code>id</code> of the individual this analysis is reporting on. string NA P0001 NA info Placeholder to allow the Beacon to return any additional information that is necessary or could be of interest in relation to the query or the entry returned. It is recommended to encapsulate additional informations in this attribute instead of directly adding attributes at the same level than the others in order to avoid collision in the names of attributes in future versions of the specification. object NA NA NA pipelineName Analysis pipeline and version if a standardized pipeline was used string NA Pipeline-panel-0001-v1 NA pipelineRef Link to Analysis pipeline resource string NA doi.org/10.48511/workflowhub.workflow.111.1 NA runId Run identifier (external accession or internal ID). string NA SRR10903401 NA variantCaller Reference to variant calling software / pipeline string NA GATK4.0 NA"},{"location":"schemas-md/analyses_defaultSchema/#examples","title":"Examples","text":"<p>These are examples extracted directly from the GitHub repository.</p> MINMAX <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"analysisDate\": \"2021-10-17\",\n    \"id\": \"analyses-example-0001\",\n    \"pipelineName\": \"Pipeline-panel-0001-v1\"\n}\n</code></pre> <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"aligner\": \"bwa-0.7.8\",\n    \"analysisDate\": \"2021-10-17\",\n    \"biosampleId\": \"S0001\",\n    \"id\": \"analyses-example-0001\",\n    \"individualId\": \"P0001\",\n    \"pipelineName\": \"Pipeline-panel-0001-v1\",\n    \"pipelineRef\": \"https://doi.org/10.48511/workflowhub.workflow.111.1\",\n    \"runId\": \"SRR10903401\",\n    \"variantCaller\": \"GATK4.0\"\n}\n</code></pre>"},{"location":"schemas-md/beacon_terms/","title":"Beacon terms","text":"<ul> <li>affected</li> <li>Age</li> <li>ageAtExposure</li> <li>ageAtOnset</li> <li>ageAtProcedure</li> <li>ageOfOnset</li> <li>ageRange</li> <li>AgeRange_PXF</li> <li>aligner</li> <li>Allele</li> <li>alleleFrequency</li> <li>alleleOrigin</li> <li>alternateBases</li> <li>aminoacidChanges</li> <li>analysisDate</li> <li>analysisId</li> <li>annotatedWith</li> <li>assayCode</li> <li>availability</li> <li>availabilityCount</li> <li>biosampleId</li> <li>biosampleStatus</li> <li>bodySite</li> <li>caseLevelData</li> <li>category</li> <li>clinicalInterpretations</li> <li>clinicalRelevance</li> <li>clinvarVariantId</li> <li>cohortDataTypes</li> <li>cohortDesign</li> <li>cohortSize</li> <li>cohortType</li> <li>collectionDate</li> <li>collectionEvents</li> <li>collectionMoment</li> <li>Complex Value</li> <li>conditionId</li> <li>CopyNumber</li> <li>createDateTime</li> <li>cumulativeDose</li> <li>dataUseConditions</li> <li>date</li> <li>dateOfProcedure</li> <li>description</li> <li>diagnosticMarkers</li> <li>disease</li> <li>diseaseCode</li> <li>diseaseConditions</li> <li>diseases</li> <li>distribution</li> <li>doseIntervals</li> <li>duoDataUse</li> <li>duration</li> <li>effect</li> <li>end</li> <li>ethnicities</li> <li>ethnicity</li> <li>eventAgeRange</li> <li>eventCases</li> <li>eventControls</li> <li>eventDataTypes</li> <li>eventDate</li> <li>eventDiseases</li> <li>eventEthnicities</li> <li>eventGenders</li> <li>eventLocations</li> <li>eventNum</li> <li>eventPhenotypes</li> <li>eventSize</li> <li>eventTimeline</li> <li>evidence</li> <li>evidenceCode</li> <li>evidenceType</li> <li>excluded</li> <li>exclusionCriteria</li> <li>exposureCode</li> <li>exposures</li> <li>externalUrl</li> <li>familyHistory</li> <li>featureClass</li> <li>featureID</li> <li>featureType</li> <li>frequencies</li> <li>frequencyInPopulations</li> <li>genders</li> <li>geneIds</li> <li>genomicFeatures</li> <li>genomicHGVSId</li> <li>geographicOrigin</li> <li>GestationalAge</li> <li>Haplotype</li> <li>histologicalDiagnosis</li> <li>id</li> <li>identifiers</li> <li>inclusionCriteria</li> <li>individualId</li> <li>info</li> <li>interval</li> <li>interventionsOrProcedures</li> <li>iso8601duration</li> <li>karyotypicSex</li> <li>label</li> <li>LegacyVariation</li> <li>libraryLayout</li> <li>librarySelection</li> <li>librarySource</li> <li>libraryStrategy</li> <li>location</li> <li>locations</li> <li>measurements</li> <li>measurementValue</li> <li>measures</li> <li>memberId</li> <li>members</li> <li>modifiers</li> <li>molecularAttributes</li> <li>molecularEffects</li> <li>MolecularVariation</li> <li>name</li> <li>notes</li> <li>numSubjects</li> <li>observationMoment</li> <li>obtentionProcedure</li> <li>onset</li> <li>pathologicalStage</li> <li>pathologicalTnmFinding</li> <li>pedigrees</li> <li>phenotypicConditions</li> <li>phenotypicEffects</li> <li>phenotypicFeatures</li> <li>pipelineName</li> <li>pipelineRef</li> <li>platform</li> <li>platformModel</li> <li>population</li> <li>procedure</li> <li>procedureCode</li> <li>proteinHGVSIds</li> <li>quantity</li> <li>reference</li> <li>referenceBases</li> <li>referenceRange</li> <li>resolution</li> <li>role</li> <li>routeOfAdministration</li> <li>runDate</li> <li>runId</li> <li>sampleOriginDetail</li> <li>sampleOriginType</li> <li>sampleProcessing</li> <li>sampleStorage</li> <li>scheduleFrequency</li> <li>severity</li> <li>sex</li> <li>source</li> <li>sourceReference</li> <li>stage</li> <li>start</li> <li>SystemicVariation</li> <li>TimeInterval</li> <li>toolName</li> <li>toolReferences</li> <li>transcriptHGVSIds</li> <li>treatmentCode</li> <li>treatments</li> <li>tumorGrade</li> <li>tumorProgression</li> <li>unit</li> <li>updateDateTime</li> <li>value</li> <li>Value_PXF</li> <li>variantAlternativeIds</li> <li>variantCaller</li> <li>variantInternalId</li> <li>variantLevelData</li> <li>variantType</li> <li>variation</li> <li>version</li> <li>zygosity</li> </ul>"},{"location":"schemas-md/biosamples_defaultSchema/","title":"biosamples defaultSchema","text":"Term Description Type Properties Example Enum biosampleStatus Ontology value from Experimental Factor Ontology (EFO) Material Entity term (BFO:0000040). Classification of the sample in abnormal sample (EFO:0009655) or reference sample (EFO:0009654). object id, label <code>[{\"id\": \"EFO:0009654\", \"label\": \"reference sample\"}, {\"id\": \"EFO:0009655\", \"label\": \"abnormal sample\"}, {\"id\": \"EFO:0009656\", \"label\": \"neoplastic sample\"}, {\"id\": \"EFO:0010941\", \"label\": \"metastasis sample\"}, {\"id\": \"EFO:0010942\", \"label\": \"primary tumor sample\"}, {\"id\": \"EFO:0010943\", \"label\": \"recurrent tumor sample\"}]</code> NA collectionDate Date of biosample collection in ISO8601 format. string NA 2021-04-23 NA collectionMoment Individual's or cell cullture age at the time of sample collection in the ISO8601 duration format <code>P[n]Y[n]M[n]DT[n]H[n]M[n]S</code>. string NA P32Y6M1D, P7D NA diagnosticMarkers NA array id, label NA NA histologicalDiagnosis Disease diagnosis that was inferred from the histological examination. RECOMMENDED. object id, label <code>[{\"id\": \"NCIT:C3778\", \"label\": \"Serous Cystadenocarcinoma\"}]</code> NA id Biosample identifier (external accession or internal ID). string NA S0001 NA individualId Reference to the individual from which that sample was obtained. string NA P0001 NA info Placeholder to allow the Beacon to return any additional information that is necessary or could be of interest in relation to the query or the entry returned. It is recommended to encapsulate additional informations in this attribute instead of directly adding attributes at the same level than the others in order to avoid collision in the names of attributes in future versions of the specification. object NA NA NA measurements Definition of a measurement class. Provenance: GA4GH Phenopackets v2 <code>Measurement</code> array assayCode, date, measurementValue, notes, observationMoment, procedure NA NA notes Any relevant info about the biosample that does not fit into any other field in the schema. string NA Some free text NA obtentionProcedure Ontology value from NCIT Intervention or Procedure ontology term (NCIT:C25218) describing the procedure for sample obtention, e.g. NCIT:C15189 (biopsy). object ageAtProcedure, bodySite, dateOfProcedure, procedureCode <code>[{\"code\": {\"id\": \"NCIT:C15189\", \"label\": \"biopsy\"}}, {\"code\": {\"id\": \"NCIT:C157179\", \"label\": \"FGFR1 Mutation Analysis\"}}]</code> NA pathologicalStage Pathological stage, if applicable, preferably as subclass of NCIT:C28108 - Disease Stage Qualifier. RECOMMENDED. object id, label <code>[{\"id\": \"NCIT:C27977\", \"label\": \"Stage IIIA\"}]</code> NA pathologicalTnmFinding NA array id, label <code>[{\"id\": \"NCIT:C48725\", \"label\": \"T2a Stage Finding\"}, {\"id\": \"NCIT:C48709\", \"label\": \"N1c Stage Finding\"}, {\"id\": \"NCIT:C48699\", \"label\": \"M0 Stage Finding\"}]</code> NA phenotypicFeatures Used to describe a phenotype that characterizes the subject or biosample. array evidence, excluded, featureType, modifiers, notes, onset, resolution, severity NA NA sampleOriginDetail Tissue from which the sample was taken or sample origin matching the category set in 'sampleOriginType'. Value from Uber-anatomy ontology (UBERON) or BRENDA tissue / enzyme source (BTO), Ontology for Biomedical Investigations (OBI) or Cell Line Ontology (CLO), e.g. 'cerebellar vermis' (UBERON:0004720), 'HEK-293T cell' (BTO:0002181), 'nasopharyngeal swab specimen' (OBI:0002606), 'cerebrospinal fluid specimen' (OBI:0002502). object id, label <code>[{\"id\": \"UBERON:0000474\", \"label\": \"female reproductive system\"}, {\"id\": \"BTO:0002181\", \"label\": \"HEK-293T cell\"}, {\"id\": \"OBI:0002606\", \"label\": \"nasopharyngeal swab specimen\"}]</code> NA sampleOriginType Category of sample origin. Value from Ontology for Biomedical Investigations (OBI) material entity (BFO:0000040) ontology, e.g. 'specimen from organism' (OBI:0001479),'xenograft' (OBI:0100058), 'cell culture' (OBI:0001876) object id, label <code>[{\"id\": \"OBI:0001479\", \"label\": \"specimen from organism\"}, {\"id\": \"OBI:0001876\", \"label\": \"cell culture\"}, {\"id\": \"OBI:0100058\", \"label\": \"xenograft\"}]</code> NA sampleProcessing Status of how the specimen was processed,e.g. a child term of EFO:0009091. object id, label <code>[{\"id\": \"EFO:0009129\", \"label\": \"mechanical dissociation\"}]</code> NA sampleStorage Status of how the specimen was stored. object id, label NA tumorGrade Term representing the tumor grade. Child term of NCIT:C28076 (Disease Grade Qualifier) or equivalent. object id, label <code>[{\"id\": \"NCIT:C28080\", \"label\": \"Grade 3a\"}]</code> NA tumorProgression Tumor progression category indicating primary, metastatic or recurrent progression. Ontology value from Neoplasm by Special Category ontology (NCIT:C7062), e.g. NCIT:C84509 (Primary Malignant Neoplasm). object id, label <code>[{\"id\": \"NCIT:C84509\", \"label\": \"Primary Malignant Neoplasm\"}, {\"id\": \"NCIT:C4813\", \"label\": \"Recurrent Malignant Neoplasm\"}]</code> NA"},{"location":"schemas-md/biosamples_defaultSchema/#examples","title":"Examples","text":"<p>These are examples extracted directly from the GitHub repository.</p> MINMID <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"biosampleStatus\": {\n        \"id\": \"EFO:0009655\",\n        \"label\": \"abnormal sample\"\n    },\n    \"id\": \"sample-example-0001\",\n    \"sampleOriginType\": {\n        \"id\": \"UBERON:0000474\",\n        \"label\": \"female reproductive system\"\n    }\n}\n</code></pre> <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"biosampleStatus\": {\n        \"id\": \"EFO:0009655\",\n        \"label\": \"abnormal sample\"\n    },\n    \"collectionDate\": \"2020-09-11\",\n    \"collectionMoment\": \"P32Y6M1D\",\n    \"id\": \"sample-example-0001\",\n    \"obtentionProcedure\": {\n        \"procedureCode\": {\n            \"id\": \"OBI:0002654\",\n            \"label\": \"needle biopsy\"\n        }\n    },\n    \"sampleOriginType\": {\n        \"id\": \"UBERON:0000992\",\n        \"label\": \"ovary\"\n    }\n}\n</code></pre>"},{"location":"schemas-md/cohorts_defaultSchema/","title":"cohorts defaultSchema","text":"Term Description Type Properties Example Enum cohortDataTypes NA array id, label <code>[{\"id\": \"OGMS:0000015\", \"label\": \"clinical history\"}, {\"id\": \"OBI:0000070\", \"label\": \"genotyping assay\"}, {\"id\": \"OMIABIS:0000060\", \"label\": \"survey data\"}]</code> NA cohortDesign Cohort type by its design. A plan specification comprised of protocols (which may specify how and what kinds of data will be gathered) that are executed as part of an investigation and is realized during a study design execution. Value from Ontologized MIABIS (OMIABIS) Study design ontology term tree (OBI:0500000). object id, label <code>[{\"id\": \"OMIABIS:0001017\", \"label\": \"case control study design\"}, {\"id\": \"OMIABIS:0001019\", \"label\": \"longitudinal study design\"}, {\"id\": \"OMIABIS:0001024\", \"label\": \"twin study design\"}]</code> NA cohortSize Count of unique Individuals in cohort (individuals meeting criteria for <code>user-defined</code> cohorts). If not previously known, it could be calculated by counting the individuals in the cohort. integer NA 14765, 20000 NA cohortType Cohort type by its definition. If a cohort is declared <code>study-defined</code> or <code>beacon-defined</code> criteria are to be entered <code>in cohort_inclusion_criteria</code>; if a cohort is declared <code>user-defined</code> <code>cohort_inclusion_criteria</code> could be automatically populated from the parameters used to perform the query. string NA NA study-defined, beacon-defined, user-defined collectionEvents TBD array eventAgeRange, eventCases, eventControls, eventDataTypes, eventDate, eventDiseases, eventEthnicities, eventGenders, eventLocations, eventNum, eventPhenotypes, eventSize, eventTimeline NA NA exclusionCriteria Exclusion criteria used for defining the cohort. It is assumed that NONE of the cohort participants will match such criteria. object ageRange, diseaseConditions, ethnicities, genders, locations, phenotypicConditions NA NA id Cohort identifier. For <code>study-defined</code> or <code>beacon-defined</code> cohorts this field is set by the implementer. For <code>user-defined</code> this unique identifier could be generated upon the query that defined the cohort, but could be later edited by the user. string NA cohort-T2D-2010 NA inclusionCriteria Inclusion criteria used for defining the cohort. It is assumed that all cohort participants will match such criteria. object ageRange, diseaseConditions, ethnicities, genders, locations, phenotypicConditions NA NA name Name of the cohort. For <code>user-defined</code> this field could be generated upon the query, e.g. a value that is a concatenationor some representation of the user query. string NA Wellcome Trust Case Control Consortium, GCAT Genomes for Life NA"},{"location":"schemas-md/cohorts_defaultSchema/#examples","title":"Examples","text":"<p>These are examples extracted directly from the GitHub repository.</p> MINMIDMAX <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"cohortType\": \"study-defined\",\n    \"id\": \"cohort0001\",\n    \"name\": \"GCAT Genomes for Life\"\n}\n</code></pre> <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"cohortDataTypes\": [\n        {\n            \"id\": \"OGMS:0000015\",\n            \"label\": \"clinical history\"\n        },\n        {\n            \"id\": \"OBI:0000070\",\n            \"label\": \"genotyping assay\"\n        },\n        {\n            \"id\": \"OMIABIS:0000060\",\n            \"label\": \"survey data\"\n        }\n    ],\n    \"cohortDesign\": {\n        \"id\": \"OMIABIS:0001019\",\n        \"label\": \"longitudinal study design\"\n    },\n    \"cohortSize\": 20000,\n    \"cohortType\": \"study-defined\",\n    \"id\": \"cohort0001\",\n    \"inclusionCriteria\": {\n        \"ageRange\": {\n            \"end\": {\n                \"iso8601duration\": \"P40Y\"\n            },\n            \"start\": {\n                \"iso8601duration\": \"P18Y\"\n            }\n        },\n        \"genders\": [\n            {\n                \"id\": \"NCIT:C16576\",\n                \"label\": \"female\"\n            },\n            {\n                \"id\": \"NCIT:C20197\",\n                \"label\": \"male\"\n            }\n        ],\n        \"locations\": [\n            {\n                \"id\": \"GAZ:00004501\",\n                \"label\": \"Catalonia Autonomous Community\"\n            }\n        ]\n    },\n    \"name\": \"GCAT Genomes for Life\"\n}\n</code></pre> <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"cohortDataTypes\": [\n        {\n            \"id\": \"OGMS:0000015\",\n            \"label\": \"clinical history\"\n        },\n        {\n            \"id\": \"OBI:0000070\",\n            \"label\": \"genotyping assay\"\n        },\n        {\n            \"id\": \"OMIABIS:0000060\",\n            \"label\": \"survey data\"\n        }\n    ],\n    \"cohortDesign\": {\n        \"id\": \"OMIABIS:0001019\",\n        \"label\": \"longitudinal study design\"\n    },\n    \"cohortSize\": 20000,\n    \"cohortType\": \"study-defined\",\n    \"collectionEvents\": [\n        {\n            \"eventDataTypes\": {\n                \"availability\": true,\n                \"distribution\": {\n                    \"dataTypes\": {\n                        \"blood collected from fasting subject\": 51,\n                        \"survey data\": 98\n                    }\n                }\n            },\n            \"eventDate\": \"2019-04-23\",\n            \"eventEthnicities\": {\n                \"availability\": true,\n                \"availabilityCount\": 101,\n                \"distribution\": {\n                    \"ethnicities\": {\n                        \"African\": 3,\n                        \"European\": 90,\n                        \"Latin American\": 8\n                    }\n                }\n            },\n            \"eventGenders\": {\n                \"availability\": true,\n                \"availabilityCount\": 101,\n                \"distribution\": {\n                    \"genders\": {\n                        \"female\": 51,\n                        \"male\": 50\n                    }\n                }\n            },\n            \"eventNum\": 1,\n            \"eventSize\": 101\n        }\n    ],\n    \"id\": \"cohort0001\",\n    \"inclusionCriteria\": {\n        \"ageRange\": {\n            \"end\": {\n                \"iso8601duration\": \"P40Y\"\n            },\n            \"start\": {\n                \"iso8601duration\": \"P18Y\"\n            }\n        },\n        \"genders\": [\n            {\n                \"id\": \"NCIT:C16576\",\n                \"label\": \"female\"\n            },\n            {\n                \"id\": \"NCIT:C20197\",\n                \"label\": \"male\"\n            }\n        ],\n        \"locations\": [\n            {\n                \"id\": \"GAZ:00004501\",\n                \"label\": \"Catalonia Autonomous Community\"\n            }\n        ]\n    },\n    \"name\": \"GCAT Genomes for Life\"\n}\n</code></pre>"},{"location":"schemas-md/datasets_defaultSchema/","title":"datasets defaultSchema","text":"Term Description Type Properties Example Enum createDateTime The time the dataset was created (ISO 8601 format) string NA 2017-01-17T20:33:40Z NA dataUseConditions Data use conditions applying to this dataset. object duoDataUse NA NA description Description of the dataset string NA This dataset provides examples of the actual data in this Beacon instance. NA externalUrl URL to an external system providing more dataset information (RFC 3986 format). string NA example.org/wiki/Main_Page NA id Unique identifier of the dataset string NA ds01010101 NA info Placeholder to allow the Beacon to return any additional information that is necessary or could be of interest in relation to the query or the entry returned. It is recommended to encapsulate additional informations in this attribute instead of directly adding attributes at the same level than the others in order to avoid collision in the names of attributes in future versions of the specification. object NA NA NA name Name of the dataset string NA Dataset with synthetic data NA updateDateTime The time the dataset was updated in (ISO 8601 format) string NA 2017-01-17T20:33:40Z NA version Version of the dataset string NA v1.1 NA"},{"location":"schemas-md/datasets_defaultSchema/#examples","title":"Examples","text":"<p>These are examples extracted directly from the GitHub repository.</p> MAXMIN <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"createDateTime\": \"2017-01-17T20:33:40Z\",\n    \"dataUseConditions\": {\n        \"duoDataUse\": [\n            {\n                \"id\": \"DUO:0000007\",\n                \"label\": \"disease specific research\",\n                \"modifiers\": [\n                    {\n                        \"id\": \"EFO:0001645\",\n                        \"label\": \"coronary artery disease\"\n                    }\n                ],\n                \"version\": \"17-07-2016\"\n            }\n        ]\n    },\n    \"description\": \"This dataset provides examples of the actual data in this Beacon instance.\",\n    \"externalUrl\": \"https://example.org/wiki/Main_Page\",\n    \"id\": \"ds01010101\",\n    \"name\": \"Dataset with synthetic data\",\n    \"updateDateTime\": \"2017-01-17T20:33:40Z\",\n    \"version\": \"v1.1\"\n}\n</code></pre> <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"id\": \"ds01010101\",\n    \"name\": \"Dataset with synthetic data\"\n}\n</code></pre>"},{"location":"schemas-md/genomicVariations_defaultSchema/","title":"genomicVariations defaultSchema","text":"Term Description Type Properties Example Enum caseLevelData array alleleOrigin, analysisId, biosampleId, clinicalInterpretations, id, individualId, phenotypicEffects, runId, zygosity NA NA frequencyInPopulations NA array frequencies, source, sourceReference, version NA NA identifiers NA object clinvarVariantId, genomicHGVSId, proteinHGVSIds, transcriptHGVSIds, variantAlternativeIds NA NA molecularAttributes NA object aminoacidChanges, geneIds, genomicFeatures, molecularEffects NA NA variantInternalId Reference to the internal variant ID. This represents the primary key/identifier of that variant inside a given Beacon instance. Different Beacon instances may use identical id values, referring to unrelated variants. Public identifiers such as the GA4GH Variant Representation Id (VRSid) MUST be returned in the <code>identifiers</code> section. A Beacon instance can, of course, use the VRSid as their own internal id but still MUST represent this then in the <code>identifiers</code> section. string NA var00001, v110112 NA variantLevelData NA object clinicalInterpretations, phenotypicEffects NA NA variation NA oneOf LegacyVariation, MolecularVariation, SystemicVariation NA NA"},{"location":"schemas-md/genomicVariations_defaultSchema/#examples","title":"Examples","text":"<p>These are examples extracted directly from the GitHub repository.</p> MINMINMID <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"variantInternalId\": \"GRCh37-1-55505652-G-A\",\n    \"variation\": {\n        \"alternateBases\": \"A\",\n        \"location\": {\n            \"interval\": {\n                \"end\": {\n                    \"type\": \"Number\",\n                    \"value\": 5505653\n                },\n                \"start\": {\n                    \"type\": \"Number\",\n                    \"value\": 5505652\n                },\n                \"type\": \"SequenceInterval\"\n            },\n            \"sequence_id\": \"refseq:NC_000001.10\",\n            \"type\": \"SequenceLocation\"\n        },\n        \"variantType\": \"SNP\"\n    }\n}\n</code></pre> <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"variantInternalId\": \"GRCh37-1-55505652-G-A\",\n    \"variation\": {\n        \"location\": {\n            \"interval\": {\n                \"end\": {\n                    \"type\": \"Number\",\n                    \"value\": 5505653\n                },\n                \"start\": {\n                    \"type\": \"Number\",\n                    \"value\": 5505652\n                },\n                \"type\": \"SequenceInterval\"\n            },\n            \"sequence_id\": \"refseq:NC_000001.10\",\n            \"type\": \"SequenceLocation\"\n        },\n        \"state\": {\n            \"sequence\": \"A\",\n            \"type\": \"SequenceState\"\n        },\n        \"type\": \"Allele\"\n    }\n}\n</code></pre> <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"frequencyInPopulations\": [\n        {\n            \"frequencies\": [\n                {\n                    \"alleleFrequency\": 2.939e-05,\n                    \"population\": \"European (non-Finish)\"\n                },\n                {\n                    \"alleleFrequency\": 0,\n                    \"population\": \"Other\"\n                }\n            ],\n            \"source\": \"gnomaD Genomes\",\n            \"sourceReference\": \"https://gnomad.broadinstitute.org/\",\n            \"version\": \"v3.1.1\"\n        },\n        {\n            \"frequencies\": [\n                {\n                    \"alleleFrequency\": 9e-05,\n                    \"population\": \"Total\"\n                },\n                {\n                    \"alleleFrequency\": 6e-05,\n                    \"population\": \"European\"\n                },\n                {\n                    \"alleleFrequency\": 0,\n                    \"population\": \"African\"\n                }\n            ],\n            \"source\": \"ALFA\",\n            \"sourceReference\": \"https://www.ncbi.nlm.nih.gov/snp/docs/gsr/alfa/\",\n            \"version\": \"20201027095038\"\n        }\n    ],\n    \"identifiers\": {\n        \"clinVarIds\": [\n            \"434136\",\n            \"VCV000440707.6\"\n        ],\n        \"genomicHGVSId\": \"NC_000001.11:g.55039979G&gt;A\",\n        \"proteinHGVSIds\": [\n            \"NP_777596.2:p.Glu48Lys\"\n        ],\n        \"transcriptHGVSIds\": [\n            \"NM_174936.4:c.142G&gt;A\"\n        ],\n        \"variantAlternativeIds\": [\n            \"dbSNP:rs3975092470\",\n            \"ClinGen: CA340482854\"\n        ]\n    },\n    \"molecularAttributes\": {\n        \"aminoacidChanges\": [\n            \"E48K\"\n        ],\n        \"geneIds\": [\n            \"PCSK9\",\n            \"LRG_275\"\n        ],\n        \"molecularEffects\": [\n            {\n                \"id\": \"ENSGLOSSARY:0000150\",\n                \"label\": \"Missense variant\"\n            }\n        ]\n    },\n    \"variantInternalId\": \"var123\",\n    \"variantLevelData\": {\n        \"clinicalInterpretations\": [\n            {\n                \"category\": {\n                    \"id\": \"MONDO:0000001\",\n                    \"label\": \"disease or disorder\"\n                },\n                \"clinicalRelevance\": \"pathogenic\",\n                \"conditionId\": \"famchol1\",\n                \"effect\": {\n                    \"id\": \"MONDO:0007750\",\n                    \"label\": \"Familial hypercholesterolemia 1\"\n                }\n            },\n            {\n                \"category\": {\n                    \"id\": \"MONDO:0000001\",\n                    \"label\": \"disease or disorder\"\n                },\n                \"clinicalRelevance\": \"uncertain significance\",\n                \"conditionId\": \"famchol3\",\n                \"effect\": {\n                    \"id\": \"MONDO:0011369\",\n                    \"label\": \"hypercholesterolemia, autosomal dominant, 3\"\n                }\n            }\n        ]\n    },\n    \"variation\": {\n        \"alternateBases\": \"A\",\n        \"location\": {\n            \"interval\": {\n                \"end\": {\n                    \"type\": \"Number\",\n                    \"value\": 55039980\n                },\n                \"start\": {\n                    \"type\": \"Number\",\n                    \"value\": 55039979\n                },\n                \"type\": \"SequenceInterval\"\n            },\n            \"sequence_id\": \"refseq:NC_000001.11\",\n            \"type\": \"SequenceLocation\"\n        },\n        \"referenceBases\": \"G\",\n        \"variantType\": \"SNP\"\n    }\n}\n</code></pre>"},{"location":"schemas-md/individuals_defaultSchema/","title":"individuals defaultSchema","text":"Term Description Type Properties Example Enum diseases Diseases diagnosed e.g. to an individual, defined by diseaseID, age of onset, stage, level of severity, outcome and the presence of family history. Similarities to GA4GH Phenopackets v2 <code>Disease</code> array ageOfOnset, diseaseCode, familyHistory, notes, severity, stage NA NA ethnicity Ethnic background of the individual. Value from NCIT Race (NCIT:C17049) ontology term descendants, e.g. NCIT:C126531 (Latin American). A geographic ancestral origin category that is assigned to a population group based mainly on physical characteristics that are thought to be distinct and inherent. [ NCI ] object id, label <code>[{\"id\": \"NCIT:C42331\", \"label\": \"African\"}, {\"id\": \"NCIT:C41260\", \"label\": \"Asian\"}, {\"id\": \"NCIT:C126535\", \"label\": \"Australian\"}, {\"id\": \"NCIT:C43851\", \"label\": \"European\"}, {\"id\": \"NCIT:C77812\", \"label\": \"North American\"}, {\"id\": \"NCIT:C126531\", \"label\": \"Latin American\"}, {\"id\": \"NCIT:C104495\", \"label\": \"Other race\"}]</code> NA exposures Exposures (lifestyle, behavioural exposures) occurred to individual, defined by exposure ID, date and age of onset, dose, and duration. array ageAtExposure, date, duration, exposureCode, unit, value NA NA geographicOrigin Individual's country or region of origin (birthplace or residence place regardless of ethnic origin). Value from GAZ Geographic Location ontology (GAZ:00000448), e.g. GAZ:00002459 (United States of America). object id, label <code>[{\"id\": \"GAZ:00002955\", \"label\": \"Slovenia\"}, {\"id\": \"GAZ:00002459\", \"label\": \"United States of America\"}, {\"id\": \"GAZ:00316959\", \"label\": \"Municipality of El Masnou\"}, {\"id\": \"GAZ:00000460\", \"label\": \"Eurasia\"}]</code> NA id Individual identifier (internal ID). string NA P0001 NA info Placeholder to allow the Beacon to return any additional information that is necessary or could be of interest in relation to the query or the entry returned. It is recommended to encapsulate additional informations in this attribute instead of directly adding attributes at the same level than the others in order to avoid collision in the names of attributes in future versions of the specification. object NA NA NA interventionsOrProcedures Class describing a clinical procedure or intervention. Provenance: GA4GH Phenopackets v2 <code>Procedure</code> array ageAtProcedure, bodySite, dateOfProcedure, procedureCode NA NA karyotypicSex The chromosomal sex of an individual represented from a selection of options. string NA NA UNKNOWN_KARYOTYPE, XX, XY, XO, XXY, XXX, XXYY, XXXY, XXXX, XYY, OTHER_KARYOTYPE measures Definition of a measurement class. Provenance: GA4GH Phenopackets v2 <code>Measurement</code> array assayCode, date, measurementValue, notes, observationMoment, procedure NA NA pedigrees Pedigree studies in which the individual is part of. array disease, id, members, numSubjects NA NA phenotypicFeatures Used to describe a phenotype that characterizes the subject or biosample. array evidence, excluded, featureType, modifiers, notes, onset, resolution, severity NA NA sex Sex of the individual. Value from NCIT General Qualifier (NCIT:C27993): 'unknown' (not assessed or not available) (NCIT:C17998), 'female' (NCIT:C16576), or 'male', (NCIT:C20197). object id, label <code>[{\"id\": \"NCIT:C16576\", \"label\": \"female\"}, {\"id\": \"NCIT:C20197\", \"label\": \"male\"}, {\"id\": \"NCIT:C1799\", \"label\": \"unknown\"}]</code> NA treatments Treatment(s) prescribed/administered, defined by treatment ID, date and age of onset, dose, schedule and duration. array ageAtOnset, cumulativeDose, doseIntervals, routeOfAdministration, treatmentCode NA NA"},{"location":"schemas-md/individuals_defaultSchema/#examples","title":"Examples","text":"<p>These are examples extracted directly from the GitHub repository.</p> MINMID <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"id\": \"Ind001\",\n    \"sex\": {\n        \"id\": \"NCIT:C16576\",\n        \"label\": \"female\"\n    }\n}\n</code></pre> <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"diseases\": [\n        {\n            \"ageOfOnset\": {\n                \"ageGroup\": {\n                    \"id\": \"NCIT:C49685\",\n                    \"label\": \"Adult 18-65 Years Old\"\n                }\n            },\n            \"diseaseCode\": {\n                \"id\": \"OMIM:164400\",\n                \"label\": \"Spinocerebellar ataxia 1\"\n            },\n            \"familyHistory\": false,\n            \"severity\": {\n                \"id\": \"HP:0012829\",\n                \"label\": \"Profound\"\n            },\n            \"stage\": {\n                \"id\": \"OGMS:0000119\",\n                \"label\": \"acute onset\"\n            }\n        }\n    ],\n    \"ethnicity\": {\n        \"id\": \"NCIT:C43851\",\n        \"label\": \"European\"\n    },\n    \"geographicOrigin\": {\n        \"id\": \"GAZ:00002955\",\n        \"label\": \"Slovenia\"\n    },\n    \"id\": \"Ind001\",\n    \"measures\": [\n        {\n            \"assayCode\": {\n                \"id\": \"LOINC:26515-7\",\n                \"label\": \"Platelets [#/volume] in Blood\"\n            },\n            \"date\": \"2017-05-03\",\n            \"measurementValue\": {\n                \"units\": {\n                    \"id\": \"NCIT:C103452\",\n                    \"label\": \"Per Milliliter\"\n                },\n                \"value\": 55345\n            },\n            \"observationMoment\": {\n                \"age\": {\n                    \"iso8601duration\": \"P55Y8M12D\"\n                }\n            }\n        }\n    ],\n    \"sex\": {\n        \"id\": \"NCIT:C16576\",\n        \"label\": \"female\"\n    }\n}\n</code></pre>"},{"location":"schemas-md/runs_defaultSchema/","title":"runs defaultSchema","text":"Term Description Type Properties Example Enum biosampleId Reference to the biosample ID. string NA 008dafdd-a3d1-4801-8c0a-8714e2b58e48 NA id Run ID. string NA SRR10903401 NA individualId Reference to the individual ID. string NA TCGA-AO-A0JJ NA info Placeholder to allow the Beacon to return any additional information that is necessary or could be of interest in relation to the query or the entry returned. It is recommended to encapsulate additional informations in this attribute instead of directly adding attributes at the same level than the others in order to avoid collision in the names of attributes in future versions of the specification. object NA NA NA libraryLayout Ontology value for the library layout e.g \"PAIRED\", \"SINGLE\" #todo add Ontology name? string NA NA PAIRED, SINGLE librarySelection Selection method for library preparation, e.g \"RANDOM\", \"RT-PCR\" string NA RANDOM, RT-PCR NA librarySource Ontology value for the source of the sequencing or hybridization library, e.g \"genomic source\", \"transcriptomic source\" object id, label <code>[{\"id\": \"GENEPIO:0001966\", \"label\": \"genomic source\"}, {\"id\": \"GENEPIO:0001965\", \"label\": \"metagenomic source\"}]</code> NA libraryStrategy Library strategy, e.g. \"WGS\" string NA WGS NA platform General platform technology label. It SHOULD be a subset of the platformModel and used only for query convenience, e.g. \"return everything sequenced with Illimuna\", where the specific model is not relevant string NA Illumina, Oxford Nanopore, Affymetrix NA platformModel Ontology value for experimental platform or methodology used. For sequencing platforms the use of \"OBI:0400103 - DNA sequencer\" is suggested. object id, label <code>[{\"id\": \"OBI:0002048\", \"label\": \"Illumina HiSeq 3000\"}, {\"id\": \"OBI:0002750\", \"label\": \"Oxford Nanopore MinION\"}, {\"id\": \"EFO:0010938\", \"label\": \"large-insert clone DNA microarray\"}]</code> NA runDate Date at which the experiment was performed. string NA 2021-10-18 NA"},{"location":"schemas-md/runs_defaultSchema/#examples","title":"Examples","text":"<p>These are examples extracted directly from the GitHub repository.</p> MINMAX <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"biosampleId\": \"008dafdd-a3d1-4801-8c0a-8714e2b58e48\",\n    \"id\": \"SRR10903401\",\n    \"runDate\": \"2021-10-18\"\n}\n</code></pre> <pre><code>{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"biosampleId\": \"008dafdd-a3d1-4801-8c0a-8714e2b58e48\",\n    \"id\": \"SRR10903401\",\n    \"individualId\": \"TCGA-AO-A0JJ\",\n    \"libraryLayout\": \"PAIRED\",\n    \"librarySelection\": \"RANDOM\",\n    \"librarySource\": {\n        \"id\": \"GENEPIO:0001966\",\n        \"label\": \"genomic source\"\n    },\n    \"libraryStrategy\": \"WGS\",\n    \"platform\": \"Illumina\",\n    \"platformModel\": {\n        \"id\": \"OBI:0002048\",\n        \"label\": \"Illumina HiSeq 3000\"\n    },\n    \"runDate\": \"2021-10-18\"\n}\n</code></pre>"},{"location":"schemas-md/obj/Age/","title":"Age","text":"Term Description Type Properties Example Enum Age Age value definition. Provenance: GA4GH Phenopackets v2 <code>Age</code> object iso8601duration NA NA"},{"location":"schemas-md/obj/AgeRange_PXF/","title":"AgeRange PXF","text":"Term Description Type Properties Example Enum AgeRange Age range definition. Provenance: GA4GH Phenopackets v2 <code>AgeRange</code> object end, start NA NA"},{"location":"schemas-md/obj/Allele/","title":"Allele","text":"Term Description Type Properties Example Enum Allele The state of a molecule at a Location. object _id, location, state, type NA NA"},{"location":"schemas-md/obj/Complex%20Value/","title":"Complex Value","text":"Term Description Type Properties Example Enum Complex Value Definition of a complex value class. Provenance: GA4GH Phenopackets v2 <code>TypedQuantity</code> object required, typedQuantities NA NA"},{"location":"schemas-md/obj/CopyNumber/","title":"CopyNumber","text":"Term Description Type Properties Example Enum CopyNumber NA allOf VRS definition for CopyNumber NA NA"},{"location":"schemas-md/obj/GestationalAge/","title":"GestationalAge","text":"Term Description Type Properties Example Enum GestationalAge Gestational age (or menstrual age) is the time elapsed between the first day of the last normal menstrual period and the day of delivery. The first day of the last menstrual period occurs approximately 2 weeks before ovulation and approximately 3 weeks before implantation of the blastocyst. Because most women know when their last period began but not when ovulation occurred, this definition traditionally has been used when estimating the expected date of delivery. In contrast, chronological age (or postnatal age) is the time elapsed after birth. Provenance: Phenopackets v2 object days, weeks NA NA"},{"location":"schemas-md/obj/Haplotype/","title":"Haplotype","text":"Term Description Type Properties Example Enum Haplotype A set of non-overlapping Allele members that co-occur on the same molecule. object _id, members, type NA NA"},{"location":"schemas-md/obj/LegacyVariation/","title":"LegacyVariation","text":"Term Description Type Properties Example Enum LegacyVariation NA object alternateBases, location, referenceBases, variantType NA NA"},{"location":"schemas-md/obj/MolecularVariation/","title":"MolecularVariation","text":"Term Description Type Properties Example Enum MolecularVariation NA oneOf Allele, Haplotype NA NA"},{"location":"schemas-md/obj/SystemicVariation/","title":"SystemicVariation","text":"Term Description Type Properties Example Enum SystemicVariation NA oneOf CopyNumber NA NA"},{"location":"schemas-md/obj/TimeInterval/","title":"TimeInterval","text":"Term Description Type Properties Example Enum TimeInterval Time interval with start and end defined as ISO8601 time stamps. object end, start NA NA"},{"location":"schemas-md/obj/Value_PXF/","title":"Value PXF","text":"Term Description Type Properties Example Enum Value NA oneOf Quantity, ontologyTerm NA NA"},{"location":"schemas-md/obj/affected/","title":"Affected","text":"Term Description Type Properties Example Enum affected Is the individual affected by the disease in the pedigree? boolean NA NA NA"},{"location":"schemas-md/obj/ageAtExposure/","title":"ageAtExposure","text":"Term Description Type Properties Example Enum ageAtExposure Age value definition. Provenance: GA4GH Phenopackets v2 <code>Age</code> object iso8601duration NA NA"},{"location":"schemas-md/obj/ageAtOnset/","title":"ageAtOnset","text":"Term Description Type Properties Example Enum ageAtOnset Age value definition. Provenance: GA4GH Phenopackets v2 <code>Age</code> object iso8601duration NA NA"},{"location":"schemas-md/obj/ageAtProcedure/","title":"ageAtProcedure","text":"Term Description Type Properties Example Enum ageAtProcedure NA oneOf Age, AgeRange, GestationalAge, TimeInterval NA NA"},{"location":"schemas-md/obj/ageOfOnset/","title":"ageOfOnset","text":"Term Description Type Properties Example Enum ageOfOnset NA oneOf Age, AgeRange, GestationalAge, TimeInterval NA NA"},{"location":"schemas-md/obj/ageRange/","title":"ageRange","text":"Term Description Type Properties Example Enum ageRange Individual age range in cohort inclusion criteria object end, start NA NA"},{"location":"schemas-md/obj/aligner/","title":"Aligner","text":"Term Description Type Properties Example Enum aligner Reference to mapping/alignment software string NA bwa-0.7.8 NA"},{"location":"schemas-md/obj/alleleFrequency/","title":"alleleFrequency","text":"Term Description Type Properties Example Enum alleleFrequency Allele frequency between 0 and 1. number NA 3.186e-05 NA"},{"location":"schemas-md/obj/alleleOrigin/","title":"alleleOrigin","text":"Term Description Type Properties Example Enum alleleOrigin Ontology value for allele origin of variant in sample from the Variant Origin (SO:0001762). Categories are <code>somatic variant</code>, <code>germline variant</code>, <code>maternal variant</code>, <code>paternal variant</code>, <code>de novo variant</code>, <code>pedigree specific variant</code>, <code>population specific variant</code>. Corresponds to Variant Inheritance in FHIR. object id, label <code>[{\"id\": \"SO:0001777\", \"label\": \"somatic variant\"}, {\"id\": \"SO:0001778\", \"label\": \"germline variant\"}, {\"id\": \"SO:0001775\", \"label\": \"maternal variant\"}, {\"id\": \"SO:0001776\", \"label\": \"paternal variant\"}, {\"id\": \"SO:0001781\", \"label\": \"de novo variant\"}, {\"id\": \"SO:0001779\", \"label\": \"pedigree specific variant\"}, {\"id\": \"SO:0001780\", \"label\": \"population specific variant\"}]</code> NA"},{"location":"schemas-md/obj/alternateBases/","title":"alternateBases","text":"Term Description Type Properties Example Enum alternateBases Alternate bases for this variant (starting from <code>start</code>). * Accepted values: IUPAC codes for nucleotides (e.g. <code>https://www.bioinformatics.org/sms/iupac.html</code>). * N is a wildcard, that denotes the position of any base, and can be used as  a standalone base of any type or within a partially known sequence. an empty value* is used in the case of deletions with the maximally  trimmed, deleted sequence being indicated in <code>ReferenceBases</code> string NA T, G, N, AG, NA"},{"location":"schemas-md/obj/aminoacidChanges/","title":"aminoacidChanges","text":"Term Description Type Properties Example Enum aminoacidChanges NA array NA <code>[\"V304*\"]</code> NA"},{"location":"schemas-md/obj/analysisDate/","title":"analysisDate","text":"Term Description Type Properties Example Enum analysisDate Date at which analysis was performed. string NA 2021-10-17 NA"},{"location":"schemas-md/obj/analysisId/","title":"analysisId","text":"Term Description Type Properties Example Enum analysisId Reference to the bioinformatics analysis ID (<code>analysis.id</code>) string NA pgxcs-kftvldsu NA"},{"location":"schemas-md/obj/annotatedWith/","title":"annotatedWith","text":"Term Description Type Properties Example Enum annotatedWith NA object toolName, toolReferences, version NA NA"},{"location":"schemas-md/obj/assayCode/","title":"assayCode","text":"Term Description Type Properties Example Enum assayCode Definition of an ontology term. object id, label id, label NA"},{"location":"schemas-md/obj/availability/","title":"Availability","text":"Term Description Type Properties Example Enum availability data availability boolean NA NA NA"},{"location":"schemas-md/obj/availabilityCount/","title":"availabilityCount","text":"Term Description Type Properties Example Enum availabilityCount Count of individuals with data available integer NA NA NA"},{"location":"schemas-md/obj/biosampleId/","title":"biosampleId","text":"Term Description Type Properties Example Enum biosampleId Reference to the biosample ID. string NA 008dafdd-a3d1-4801-8c0a-8714e2b58e48 NA"},{"location":"schemas-md/obj/biosampleStatus/","title":"biosampleStatus","text":"Term Description Type Properties Example Enum biosampleStatus Ontology value from Experimental Factor Ontology (EFO) Material Entity term (BFO:0000040). Classification of the sample in abnormal sample (EFO:0009655) or reference sample (EFO:0009654). object id, label <code>[{\"id\": \"EFO:0009654\", \"label\": \"reference sample\"}, {\"id\": \"EFO:0009655\", \"label\": \"abnormal sample\"}, {\"id\": \"EFO:0009656\", \"label\": \"neoplastic sample\"}, {\"id\": \"EFO:0010941\", \"label\": \"metastasis sample\"}, {\"id\": \"EFO:0010942\", \"label\": \"primary tumor sample\"}, {\"id\": \"EFO:0010943\", \"label\": \"recurrent tumor sample\"}]</code> NA"},{"location":"schemas-md/obj/bodySite/","title":"bodySite","text":"Term Description Type Properties Example Enum bodySite Definition of an ontology term. object id, label <code>[{\"id\": \"UBERON:0003403\", \"label\": \"Skin of forearm\"}, {\"id\": \"UBERON:0003214\", \"label\": \"mammary gland alveolus\"}]</code> NA"},{"location":"schemas-md/obj/caseLevelData/","title":"caseLevelData","text":"Term Description Type Properties Example Enum caseLevelData array alleleOrigin, analysisId, biosampleId, clinicalInterpretations, id, individualId, phenotypicEffects, runId, zygosity NA NA"},{"location":"schemas-md/obj/category/","title":"Category","text":"Term Description Type Properties Example Enum category Ontology term for the type of disease, condition, phenotypic measurement, etc. object id, label <code>[{\"id\": \"MONDO:0000001\", \"label\": \"disease or disorder\"}, {\"id\": \"HP:0000118\", \"label\": \"phenotypic abnormality\"}]</code> NA"},{"location":"schemas-md/obj/clinicalInterpretations/","title":"clinicalInterpretations","text":"Term Description Type Properties Example Enum clinicalInterpretations List of annotated effects on disease or phenotypes. array annotatedWith, category, clinicalRelevance, conditionId, effect, evidenceType NA NA"},{"location":"schemas-md/obj/clinicalRelevance/","title":"clinicalRelevance","text":"Term Description Type Properties Example Enum clinicalRelevance Indication of the clinical relevance of the variant Recommended: A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798). string NA pathogenic benign, likely benign, uncertain significance, likely pathogenic, pathogenic"},{"location":"schemas-md/obj/clinvarVariantId/","title":"clinvarVariantId","text":"Term Description Type Properties Example Enum clinvarVariantId ClinVar variant id. Other id values used by ClinVar can be added to <code>variantAlternativeIds</code> string NA clinvar:12345, 9325 NA"},{"location":"schemas-md/obj/cohortDataTypes/","title":"cohortDataTypes","text":"Term Description Type Properties Example Enum cohortDataTypes NA array id, label <code>[{\"id\": \"OGMS:0000015\", \"label\": \"clinical history\"}, {\"id\": \"OBI:0000070\", \"label\": \"genotyping assay\"}, {\"id\": \"OMIABIS:0000060\", \"label\": \"survey data\"}]</code> NA"},{"location":"schemas-md/obj/cohortDesign/","title":"cohortDesign","text":"Term Description Type Properties Example Enum cohortDesign Cohort type by its design. A plan specification comprised of protocols (which may specify how and what kinds of data will be gathered) that are executed as part of an investigation and is realized during a study design execution. Value from Ontologized MIABIS (OMIABIS) Study design ontology term tree (OBI:0500000). object id, label <code>[{\"id\": \"OMIABIS:0001017\", \"label\": \"case control study design\"}, {\"id\": \"OMIABIS:0001019\", \"label\": \"longitudinal study design\"}, {\"id\": \"OMIABIS:0001024\", \"label\": \"twin study design\"}]</code> NA"},{"location":"schemas-md/obj/cohortSize/","title":"cohortSize","text":"Term Description Type Properties Example Enum cohortSize Count of unique Individuals in cohort (individuals meeting criteria for <code>user-defined</code> cohorts). If not previously known, it could be calculated by counting the individuals in the cohort. integer NA 14765, 20000 NA"},{"location":"schemas-md/obj/cohortType/","title":"cohortType","text":"Term Description Type Properties Example Enum cohortType Cohort type by its definition. If a cohort is declared <code>study-defined</code> or <code>beacon-defined</code> criteria are to be entered <code>in cohort_inclusion_criteria</code>; if a cohort is declared <code>user-defined</code> <code>cohort_inclusion_criteria</code> could be automatically populated from the parameters used to perform the query. string NA NA study-defined, beacon-defined, user-defined"},{"location":"schemas-md/obj/collectionDate/","title":"collectionDate","text":"Term Description Type Properties Example Enum collectionDate Date of biosample collection in ISO8601 format. string NA 2021-04-23 NA"},{"location":"schemas-md/obj/collectionEvents/","title":"collectionEvents","text":"Term Description Type Properties Example Enum collectionEvents TBD array eventAgeRange, eventCases, eventControls, eventDataTypes, eventDate, eventDiseases, eventEthnicities, eventGenders, eventLocations, eventNum, eventPhenotypes, eventSize, eventTimeline NA NA"},{"location":"schemas-md/obj/collectionMoment/","title":"collectionMoment","text":"Term Description Type Properties Example Enum collectionMoment Individual's or cell cullture age at the time of sample collection in the ISO8601 duration format <code>P[n]Y[n]M[n]DT[n]H[n]M[n]S</code>. string NA P32Y6M1D, P7D NA"},{"location":"schemas-md/obj/conditionId/","title":"conditionId","text":"Term Description Type Properties Example Enum conditionId Internal identifier of the phenotype or clinical effect. string NA disease1, phen2234 NA"},{"location":"schemas-md/obj/createDateTime/","title":"createDateTime","text":"Term Description Type Properties Example Enum createDateTime The time the dataset was created (ISO 8601 format) string NA 2017-01-17T20:33:40Z NA"},{"location":"schemas-md/obj/cumulativeDose/","title":"cumulativeDose","text":"Term Description Type Properties Example Enum cumulativeDose Definition of a quantity class. Provenance: GA4GH Phenopackets v2 <code>Quantity</code> object referenceRange, unit, value NA NA"},{"location":"schemas-md/obj/dataUseConditions/","title":"dataUseConditions","text":"Term Description Type Properties Example Enum dataUseConditions Data use conditions applying to this dataset. object duoDataUse NA NA"},{"location":"schemas-md/obj/date/","title":"Date","text":"Term Description Type Properties Example Enum date Date of measurement. Addition compared to Phenopackets model. string NA NA NA"},{"location":"schemas-md/obj/dateOfProcedure/","title":"dateOfProcedure","text":"Term Description Type Properties Example Enum dateOfProcedure Date of procedure, in ISO8601 format string NA 2010-07-10 NA"},{"location":"schemas-md/obj/description/","title":"Description","text":"Term Description Type Properties Example Enum description Description of the dataset string NA This dataset provides examples of the actual data in this Beacon instance. NA"},{"location":"schemas-md/obj/diagnosticMarkers/","title":"diagnosticMarkers","text":"Term Description Type Properties Example Enum diagnosticMarkers NA array id, label NA NA"},{"location":"schemas-md/obj/disease/","title":"Disease","text":"Term Description Type Properties Example Enum disease Diseases diagnosed e.g. to an individual, defined by diseaseID, age of onset, stage, level of severity, outcome and the presence of family history. Similarities to GA4GH Phenopackets v2 <code>Disease</code> object ageOfOnset, diseaseCode, familyHistory, notes, severity, stage NA NA"},{"location":"schemas-md/obj/diseaseCode/","title":"diseaseCode","text":"Term Description Type Properties Example Enum diseaseCode Definition of an ontology term. object id, label <code>[{\"id\": \"HP:0004789\", \"label\": \"lactose intolerance\"}, {\"id\": \"ICD10CM:E73\", \"label\": \"lactose intolerance\"}, {\"id\": \"OMIM:164400\", \"label\": \"Spinocerebellar ataxia 1\"}]</code> NA"},{"location":"schemas-md/obj/diseaseConditions/","title":"diseaseConditions","text":"Term Description Type Properties Example Enum diseaseConditions Diseases diagnosed e.g. to an individual, defined by diseaseID, age of onset, stage, level of severity, outcome and the presence of family history. Similarities to GA4GH Phenopackets v2 <code>Disease</code> array ageOfOnset, diseaseCode, familyHistory, notes, severity, stage NA NA"},{"location":"schemas-md/obj/diseases/","title":"Diseases","text":"Term Description Type Properties Example Enum diseases Diseases diagnosed e.g. to an individual, defined by diseaseID, age of onset, stage, level of severity, outcome and the presence of family history. Similarities to GA4GH Phenopackets v2 <code>Disease</code> array ageOfOnset, diseaseCode, familyHistory, notes, severity, stage NA NA"},{"location":"schemas-md/obj/distribution/","title":"Distribution","text":"Term Description Type Properties Example Enum distribution List of categories and results or counts for each category. object <code>[{\"genders\": {\"female\": \"51\", \"male\": \"50\"}}]</code> NA"},{"location":"schemas-md/obj/doseIntervals/","title":"doseIntervals","text":"Term Description Type Properties Example Enum doseIntervals This element represents a block of time in which the dosage of a medication was constant. For example, to represent a period of 30 mg twice a day for an interval of 10 days, we would use a Quantity element to represent the individual 30 mg dose, and OntologyClass element to represent twice a day, and an Interval element to represent the 10-day interval. Provenance: Phenopackets v2 array interval, quantity, scheduleFrequency NA NA"},{"location":"schemas-md/obj/duoDataUse/","title":"duoDataUse","text":"Term Description Type Properties Example Enum duoDataUse Definition of an ontology term. array id, label, modifiers, version <code>[{\"id\": \"DUO:0000007\", \"label\": \"disease specific research\", \"version\": \"17-07-2016\"}]</code> NA"},{"location":"schemas-md/obj/duration/","title":"Duration","text":"Term Description Type Properties Example Enum duration Exposure duration in ISO8601 format string NA P2Y6M1D NA"},{"location":"schemas-md/obj/effect/","title":"Effect","text":"Term Description Type Properties Example Enum effect Ontology term for the phenotypic or clinical effect object id, label <code>[{\"id\": \"MONDO:0003582\", \"label\": \"hereditary breast ovarian cancer syndrome\"}, {\"id\": \"HP:0000256\", \"label\": \"macrocephaly\"}]</code> NA"},{"location":"schemas-md/obj/end/","title":"End","text":"Term Description Type Properties Example Enum end Represents age as an ISO8601 duration (e.g., P59Y). object iso8601duration NA NA"},{"location":"schemas-md/obj/ethnicities/","title":"Ethnicities","text":"Term Description Type Properties Example Enum ethnicities Ethnic background of the individual. Recommended is the use of a value from NCIT Race (NCIT:C17049) ontology term descendants, e.g. NCIT:C126531 (Latin American). A geographic ancestral origin category that is assigned to a population group based mainly on physical characteristics that are thought to be distinct and inherent. [ NCI ] array id, label NA NA"},{"location":"schemas-md/obj/ethnicity/","title":"Ethnicity","text":"Term Description Type Properties Example Enum ethnicity Ethnic background of the individual. Value from NCIT Race (NCIT:C17049) ontology term descendants, e.g. NCIT:C126531 (Latin American). A geographic ancestral origin category that is assigned to a population group based mainly on physical characteristics that are thought to be distinct and inherent. [ NCI ] object id, label <code>[{\"id\": \"NCIT:C42331\", \"label\": \"African\"}, {\"id\": \"NCIT:C41260\", \"label\": \"Asian\"}, {\"id\": \"NCIT:C126535\", \"label\": \"Australian\"}, {\"id\": \"NCIT:C43851\", \"label\": \"European\"}, {\"id\": \"NCIT:C77812\", \"label\": \"North American\"}, {\"id\": \"NCIT:C126531\", \"label\": \"Latin American\"}, {\"id\": \"NCIT:C104495\", \"label\": \"Other race\"}]</code> NA"},{"location":"schemas-md/obj/eventAgeRange/","title":"eventAgeRange","text":"Term Description Type Properties Example Enum eventAgeRange Individual age range, obtained from individual level info of the cohort members object availability, availabilityCount, distribution NA NA"},{"location":"schemas-md/obj/eventCases/","title":"eventCases","text":"Term Description Type Properties Example Enum eventCases number of cases integer NA 543, 20 NA"},{"location":"schemas-md/obj/eventControls/","title":"eventControls","text":"Term Description Type Properties Example Enum eventControls number of controls integer NA 1000, 22 NA"},{"location":"schemas-md/obj/eventDataTypes/","title":"eventDataTypes","text":"Term Description Type Properties Example Enum eventDataTypes Aggregated data type information available for each cohort data type as declared in <code>cohortDataTypes</code>, and obtained from individual level info of the cohort members object availability, availabilityCount, distribution NA NA"},{"location":"schemas-md/obj/eventDate/","title":"eventDate","text":"Term Description Type Properties Example Enum eventDate date of collection event/data point string NA 2018-10-01T13:23:45Z, 2019-04-23T09:11:13Z, 2017-01-17T20:33:40Z NA"},{"location":"schemas-md/obj/eventDiseases/","title":"eventDiseases","text":"Term Description Type Properties Example Enum eventDiseases Aggregated information of disease/condition(s) obtained from individual level info of the cohort members object availability, availabilityCount, distribution NA NA"},{"location":"schemas-md/obj/eventEthnicities/","title":"eventEthnicities","text":"Term Description Type Properties Example Enum eventEthnicities Aggregated information of ethnicity obtained from individual level info of the cohort members object availability, availabilityCount, distribution NA NA"},{"location":"schemas-md/obj/eventGenders/","title":"eventGenders","text":"Term Description Type Properties Example Enum eventGenders Aggregated information of gender(s) obtained from individual level info of the cohort members object availability, availabilityCount, distribution NA NA"},{"location":"schemas-md/obj/eventLocations/","title":"eventLocations","text":"Term Description Type Properties Example Enum eventLocations Aggregated information of geographic location obtained from individual level info of the cohort members object availability, availabilityCount, distribution NA NA"},{"location":"schemas-md/obj/eventNum/","title":"eventNum","text":"Term Description Type Properties Example Enum eventNum cardinality of the collection event / data point in a series integer NA 1, 2, 3, 4 NA"},{"location":"schemas-md/obj/eventPhenotypes/","title":"eventPhenotypes","text":"Term Description Type Properties Example Enum eventPhenotypes Aggregated information of phenotype(s) obtained from individual level info of the cohort members object availability, availabilityCount, distribution NA NA"},{"location":"schemas-md/obj/eventSize/","title":"eventSize","text":"Term Description Type Properties Example Enum eventSize Count of individuals in cohort at data point (for \u00b4user-defined\u00b4 cohorts, this is individuals meeting criteria) obtained from individual level info in database. integer NA 1543, 42 NA"},{"location":"schemas-md/obj/eventTimeline/","title":"eventTimeline","text":"Term Description Type Properties Example Enum eventTimeline Aggregated information of dates of visit diagnostic inclusion in study obtained from individual level info of the cohort members. object end, start"},{"location":"schemas-md/obj/evidence/","title":"Evidence","text":"Term Description Type Properties Example Enum evidence The evidence for an assertion of the observation of a type. RECOMMENDED. object evidenceCode, reference NA NA"},{"location":"schemas-md/obj/evidenceCode/","title":"evidenceCode","text":"Term Description Type Properties Example Enum evidenceCode Definition of an ontology term. object id, label id, label NA"},{"location":"schemas-md/obj/evidenceType/","title":"evidenceType","text":"Term Description Type Properties Example Enum evidenceType Ontology term for the type of evidence supporting variant-disease association Recommended: values from the Evidence &amp; Conclusion Ontology (ECO) object id, label <code>[{\"id\": \"ECO:0000361\", \"label\": \"inferential evidence\"}, {\"id\": \"ECO:0000006\", \"label\": \"experimental evidence\"}]</code> NA"},{"location":"schemas-md/obj/excluded/","title":"Excluded","text":"Term Description Type Properties Example Enum excluded Flag to indicate whether the phenotypic feature was observed or not. Default is \u2018false\u2019, in other words the phenotype was observed. Therefore it is only used in cases where the phenotype was looked for but found to be absent. More formally, this modifier indicates the logical negation of the OntologyClass used in the <code>featureType</code> field. CAUTION: It is imperative to check this field for correct interpretation of the phenotype! Source: Phenopackets v2 boolean NA NA NA"},{"location":"schemas-md/obj/exclusionCriteria/","title":"exclusionCriteria","text":"Term Description Type Properties Example Enum exclusionCriteria Exclusion criteria used for defining the cohort. It is assumed that NONE of the cohort participants will match such criteria. object ageRange, diseaseConditions, ethnicities, genders, locations, phenotypicConditions NA NA"},{"location":"schemas-md/obj/exposureCode/","title":"exposureCode","text":"Term Description Type Properties Example Enum exposureCode Definition of an ontology term. object id, label <code>[{\"id\": \"CHEBI:46661\", \"label\": \"asbestos\"}, {\"id\": \"ENVO:21001217\", \"label\": \"X-ray radiation\"}]</code> NA"},{"location":"schemas-md/obj/exposures/","title":"Exposures","text":"Term Description Type Properties Example Enum exposures Exposures (lifestyle, behavioural exposures) occurred to individual, defined by exposure ID, date and age of onset, dose, and duration. array ageAtExposure, date, duration, exposureCode, unit, value NA NA"},{"location":"schemas-md/obj/externalUrl/","title":"externalUrl","text":"Term Description Type Properties Example Enum externalUrl URL to an external system providing more dataset information (RFC 3986 format). string NA example.org/wiki/Main_Page NA"},{"location":"schemas-md/obj/familyHistory/","title":"familyHistory","text":"Term Description Type Properties Example Enum familyHistory Boolean indicating determined or self-reported presence of family history of the disease. boolean NA 1 NA"},{"location":"schemas-md/obj/featureClass/","title":"featureClass","text":"Term Description Type Properties Example Enum featureClass Ontology term that describes the class of genomic feature affected by the variant. Values from SO (Sequence ontology) are recommended, e.g. <code>SO:0001623: 5 prime UTR variant</code> object id, label <code>[{\"id\": \"SO:0001623\", \"label\": \"5 prime UTR variant\"}]</code> NA"},{"location":"schemas-md/obj/featureID/","title":"featureID","text":"Term Description Type Properties Example Enum featureID Where applicable, ID/accession/name of genomic feature related to the <code>featureClass</code>, preferably in CURIE format. If the value is a gene id or name, it points to the gene related to the <code>featureClass</code>, e.g. <code>the 5 prime UTR upstream of TP53</code> object id, label <code>[{\"id\": \"HGNC:11998\", \"label\": \"TP53\"}]</code> NA"},{"location":"schemas-md/obj/featureType/","title":"featureType","text":"Term Description Type Properties Example Enum featureType Definition of an ontology term. object id, label <code>[{\"id\": \"HP:0000002\", \"label\": \"Abnormality of body height\"}, {\"id\": \"HP:0002006\", \"label\": \"Facial cleft\"}, {\"id\": \"HP:0012469\", \"label\": \"Infantile spasms\"}]</code> NA"},{"location":"schemas-md/obj/frequencies/","title":"Frequencies","text":"Term Description Type Properties Example Enum frequencies NA array alleleFrequency, population NA NA"},{"location":"schemas-md/obj/frequencyInPopulations/","title":"frequencyInPopulations","text":"Term Description Type Properties Example Enum frequencyInPopulations NA array frequencies, source, sourceReference, version NA NA"},{"location":"schemas-md/obj/genders/","title":"Genders","text":"Term Description Type Properties Example Enum genders Sex of the individual. Recommended values from NCIT General Qualifier (NCIT:C27993): \"unknown\" (not assessed or not available) - NCIT:C17998; \"female\" - NCIT:C16576;  \"male\" - NCIT:C20197 array id, label NA NA"},{"location":"schemas-md/obj/geneIds/","title":"geneIds","text":"Term Description Type Properties Example Enum geneIds NA array NA <code>[\"ACE2\"]</code>,<code>[\"BRCA1\", \"ENSG00000012048\"]</code> NA"},{"location":"schemas-md/obj/genomicFeatures/","title":"genomicFeatures","text":"Term Description Type Properties Example Enum genomicFeatures Genomic feature(s) related to the variant. NOTE: Although genes could also be referenced using these attributes, they have an independent section to allow direct queries. array featureClass, featureID NA NA"},{"location":"schemas-md/obj/genomicHGVSId/","title":"genomicHGVSId","text":"Term Description Type Properties Example Enum genomicHGVSId HGVSId descriptor. string NA NC_000017.11:g.43057063G&gt;A NA"},{"location":"schemas-md/obj/geographicOrigin/","title":"geographicOrigin","text":"Term Description Type Properties Example Enum geographicOrigin Individual's country or region of origin (birthplace or residence place regardless of ethnic origin). Value from GAZ Geographic Location ontology (GAZ:00000448), e.g. GAZ:00002459 (United States of America). object id, label <code>[{\"id\": \"GAZ:00002955\", \"label\": \"Slovenia\"}, {\"id\": \"GAZ:00002459\", \"label\": \"United States of America\"}, {\"id\": \"GAZ:00316959\", \"label\": \"Municipality of El Masnou\"}, {\"id\": \"GAZ:00000460\", \"label\": \"Eurasia\"}]</code> NA"},{"location":"schemas-md/obj/histologicalDiagnosis/","title":"histologicalDiagnosis","text":"Term Description Type Properties Example Enum histologicalDiagnosis Disease diagnosis that was inferred from the histological examination. RECOMMENDED. object id, label <code>[{\"id\": \"NCIT:C3778\", \"label\": \"Serous Cystadenocarcinoma\"}]</code> NA"},{"location":"schemas-md/obj/id/","title":"Id","text":"Term Description Type Properties Example Enum id A CURIE identifier, e.g. as <code>id</code> for an ontology term. string NA ga4gh:GA.01234abcde, DUO:0000004, orcid:0000-0003-3463-0775, PMID:15254584 NA"},{"location":"schemas-md/obj/identifiers/","title":"Identifiers","text":"Term Description Type Properties Example Enum identifiers NA object clinvarVariantId, genomicHGVSId, proteinHGVSIds, transcriptHGVSIds, variantAlternativeIds NA NA"},{"location":"schemas-md/obj/inclusionCriteria/","title":"inclusionCriteria","text":"Term Description Type Properties Example Enum inclusionCriteria Inclusion criteria used for defining the cohort. It is assumed that all cohort participants will match such criteria. object ageRange, diseaseConditions, ethnicities, genders, locations, phenotypicConditions NA NA"},{"location":"schemas-md/obj/individualId/","title":"individualId","text":"Term Description Type Properties Example Enum individualId Reference to the individual ID. string NA TCGA-AO-A0JJ NA"},{"location":"schemas-md/obj/info/","title":"Info","text":"Term Description Type Properties Example Enum info Placeholder to allow the Beacon to return any additional information that is necessary or could be of interest in relation to the query or the entry returned. It is recommended to encapsulate additional informations in this attribute instead of directly adding attributes at the same level than the others in order to avoid collision in the names of attributes in future versions of the specification. object NA NA NA"},{"location":"schemas-md/obj/interval/","title":"Interval","text":"Term Description Type Properties Example Enum interval Time interval with start and end defined as ISO8601 time stamps. object end, start <code>[{\"end\": \"1967-11-18T12:00:00+01\", \"start\": \"1967-11-11T07:30:00+01\"}]</code> NA"},{"location":"schemas-md/obj/interventionsOrProcedures/","title":"interventionsOrProcedures","text":"Term Description Type Properties Example Enum interventionsOrProcedures Class describing a clinical procedure or intervention. Provenance: GA4GH Phenopackets v2 <code>Procedure</code> array ageAtProcedure, bodySite, dateOfProcedure, procedureCode NA NA"},{"location":"schemas-md/obj/iso8601duration/","title":"Iso8601duration","text":"Term Description Type Properties Example Enum iso8601duration Represents age as a ISO8601 duration (e.g., P40Y10M05D). string NA P32Y6M1D NA"},{"location":"schemas-md/obj/karyotypicSex/","title":"karyotypicSex","text":"Term Description Type Properties Example Enum karyotypicSex The chromosomal sex of an individual represented from a selection of options. string NA NA UNKNOWN_KARYOTYPE, XX, XY, XO, XXY, XXX, XXYY, XXXY, XXXX, XYY, OTHER_KARYOTYPE"},{"location":"schemas-md/obj/label/","title":"Label","text":"Term Description Type Properties Example Enum label The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context. string NA NA NA"},{"location":"schemas-md/obj/libraryLayout/","title":"libraryLayout","text":"Term Description Type Properties Example Enum libraryLayout Ontology value for the library layout e.g \"PAIRED\", \"SINGLE\" #todo add Ontology name? string NA NA PAIRED, SINGLE"},{"location":"schemas-md/obj/librarySelection/","title":"librarySelection","text":"Term Description Type Properties Example Enum librarySelection Selection method for library preparation, e.g \"RANDOM\", \"RT-PCR\" string NA RANDOM, RT-PCR NA"},{"location":"schemas-md/obj/librarySource/","title":"librarySource","text":"Term Description Type Properties Example Enum librarySource Ontology value for the source of the sequencing or hybridization library, e.g \"genomic source\", \"transcriptomic source\" object id, label <code>[{\"id\": \"GENEPIO:0001966\", \"label\": \"genomic source\"}, {\"id\": \"GENEPIO:0001965\", \"label\": \"metagenomic source\"}]</code> NA"},{"location":"schemas-md/obj/libraryStrategy/","title":"libraryStrategy","text":"Term Description Type Properties Example Enum libraryStrategy Library strategy, e.g. \"WGS\" string NA WGS NA"},{"location":"schemas-md/obj/location/","title":"Location","text":"Term Description Type Properties Example Enum location NA oneOf CURIE, Location NA NA"},{"location":"schemas-md/obj/locations/","title":"Locations","text":"Term Description Type Properties Example Enum locations Country or region of origin of the individual (birthplace or residence place regardless of ethnic origin). Value from GAZ Geographic Location ontology (GAZ:00000448), e.g. GAZ:00002459 (United States of America). array id, label NA NA"},{"location":"schemas-md/obj/measurementValue/","title":"measurementValue","text":"Term Description Type Properties Example Enum measurementValue NA oneOf Complex Value, Value NA NA"},{"location":"schemas-md/obj/measurements/","title":"Measurements","text":"Term Description Type Properties Example Enum measurements Definition of a measurement class. Provenance: GA4GH Phenopackets v2 <code>Measurement</code> array assayCode, date, measurementValue, notes, observationMoment, procedure NA NA"},{"location":"schemas-md/obj/measures/","title":"Measures","text":"Term Description Type Properties Example Enum measures Definition of a measurement class. Provenance: GA4GH Phenopackets v2 <code>Measurement</code> array assayCode, date, measurementValue, notes, observationMoment, procedure NA NA"},{"location":"schemas-md/obj/memberId/","title":"memberId","text":"Term Description Type Properties Example Enum memberId Identifier of the individual. The individual could be part of the same Beacon datasets or not, in which case the information here is meant to complete the pedigree. If the individual is also in the dataset use that Individual ID. If it is not the in the dataset, use a non-collading ID, e.g. concatenating the Pedigree ID with a local ID, similarly to the example 'Pedigree1001-m1'. string NA Pedigree1001-m1, Ind0012122 NA"},{"location":"schemas-md/obj/members/","title":"Members","text":"Term Description Type Properties Example Enum members NA array affected, memberId, role NA NA"},{"location":"schemas-md/obj/modifiers/","title":"Modifiers","text":"Term Description Type Properties Example Enum modifiers Definition of an ontology term. array id, label <code>[{\"id\": \"HP:0032500\", \"label\": \"Exacerbated by tobacco use\"}, {\"id\": \"HP:4000053\", \"label\": \"Displaced fracture\"}]</code> NA"},{"location":"schemas-md/obj/molecularAttributes/","title":"molecularAttributes","text":"Term Description Type Properties Example Enum molecularAttributes NA object aminoacidChanges, geneIds, genomicFeatures, molecularEffects NA NA"},{"location":"schemas-md/obj/molecularEffects/","title":"molecularEffects","text":"Term Description Type Properties Example Enum molecularEffects NA array id, label <code>[{\"id\": \"SO:0002322\", \"label\": \"stop gained NMD escaping\"}, {\"id\": \"SO:0001583\", \"label\": \"missense variant\"}]</code> NA"},{"location":"schemas-md/obj/name/","title":"Name","text":"Term Description Type Properties Example Enum name Name of the dataset string NA Dataset with synthetic data NA"},{"location":"schemas-md/obj/notes/","title":"Notes","text":"Term Description Type Properties Example Enum notes Unstructured text to describe this measurement. Addition compared to Phenopackets model. string NA Some free text NA"},{"location":"schemas-md/obj/numSubjects/","title":"numSubjects","text":"Term Description Type Properties Example Enum numSubjects Total number of subjects in pedigree. integer NA 10 NA"},{"location":"schemas-md/obj/observationMoment/","title":"observationMoment","text":"Term Description Type Properties Example Enum observationMoment NA oneOf Age, AgeRange, GestationalAge, TimeInterval NA NA"},{"location":"schemas-md/obj/obtentionProcedure/","title":"obtentionProcedure","text":"Term Description Type Properties Example Enum obtentionProcedure Ontology value from NCIT Intervention or Procedure ontology term (NCIT:C25218) describing the procedure for sample obtention, e.g. NCIT:C15189 (biopsy). object ageAtProcedure, bodySite, dateOfProcedure, procedureCode <code>[{\"code\": {\"id\": \"NCIT:C15189\", \"label\": \"biopsy\"}}, {\"code\": {\"id\": \"NCIT:C157179\", \"label\": \"FGFR1 Mutation Analysis\"}}]</code> NA"},{"location":"schemas-md/obj/onset/","title":"Onset","text":"Term Description Type Properties Example Enum onset NA oneOf Age, AgeRange, GestationalAge, TimeInterval NA NA"},{"location":"schemas-md/obj/pathologicalStage/","title":"pathologicalStage","text":"Term Description Type Properties Example Enum pathologicalStage Pathological stage, if applicable, preferably as subclass of NCIT:C28108 - Disease Stage Qualifier. RECOMMENDED. object id, label <code>[{\"id\": \"NCIT:C27977\", \"label\": \"Stage IIIA\"}]</code> NA"},{"location":"schemas-md/obj/pathologicalTnmFinding/","title":"pathologicalTnmFinding","text":"Term Description Type Properties Example Enum pathologicalTnmFinding NA array id, label <code>[{\"id\": \"NCIT:C48725\", \"label\": \"T2a Stage Finding\"}, {\"id\": \"NCIT:C48709\", \"label\": \"N1c Stage Finding\"}, {\"id\": \"NCIT:C48699\", \"label\": \"M0 Stage Finding\"}]</code> NA"},{"location":"schemas-md/obj/pedigrees/","title":"Pedigrees","text":"Term Description Type Properties Example Enum pedigrees Pedigree studies in which the individual is part of. array disease, id, members, numSubjects NA NA"},{"location":"schemas-md/obj/phenotypicConditions/","title":"phenotypicConditions","text":"Term Description Type Properties Example Enum phenotypicConditions Used to describe a phenotype that characterizes the subject or biosample. array evidence, excluded, featureType, modifiers, notes, onset, resolution, severity NA NA"},{"location":"schemas-md/obj/phenotypicEffects/","title":"phenotypicEffects","text":"Term Description Type Properties Example Enum phenotypicEffects List of annotated effects on disease or phenotypes. array annotatedWith, category, clinicalRelevance, conditionId, effect, evidenceType NA NA"},{"location":"schemas-md/obj/phenotypicFeatures/","title":"phenotypicFeatures","text":"Term Description Type Properties Example Enum phenotypicFeatures Used to describe a phenotype that characterizes the subject or biosample. array evidence, excluded, featureType, modifiers, notes, onset, resolution, severity NA NA"},{"location":"schemas-md/obj/pipelineName/","title":"pipelineName","text":"Term Description Type Properties Example Enum pipelineName Analysis pipeline and version if a standardized pipeline was used string NA Pipeline-panel-0001-v1 NA"},{"location":"schemas-md/obj/pipelineRef/","title":"pipelineRef","text":"Term Description Type Properties Example Enum pipelineRef Link to Analysis pipeline resource string NA doi.org/10.48511/workflowhub.workflow.111.1 NA"},{"location":"schemas-md/obj/platform/","title":"Platform","text":"Term Description Type Properties Example Enum platform General platform technology label. It SHOULD be a subset of the platformModel and used only for query convenience, e.g. \"return everything sequenced with Illimuna\", where the specific model is not relevant string NA Illumina, Oxford Nanopore, Affymetrix NA"},{"location":"schemas-md/obj/platformModel/","title":"platformModel","text":"Term Description Type Properties Example Enum platformModel Ontology value for experimental platform or methodology used. For sequencing platforms the use of \"OBI:0400103 - DNA sequencer\" is suggested. object id, label <code>[{\"id\": \"OBI:0002048\", \"label\": \"Illumina HiSeq 3000\"}, {\"id\": \"OBI:0002750\", \"label\": \"Oxford Nanopore MinION\"}, {\"id\": \"EFO:0010938\", \"label\": \"large-insert clone DNA microarray\"}]</code> NA"},{"location":"schemas-md/obj/population/","title":"Population","text":"Term Description Type Properties Example Enum population A name for the population. A population could an ethnic, geographical one or just the members of a study. string NA East Asian, ICGC Chronic Lymphocytic Leukemia-ES, Men, Children NA"},{"location":"schemas-md/obj/procedure/","title":"Procedure","text":"Term Description Type Properties Example Enum procedure Class describing a clinical procedure or intervention. Provenance: GA4GH Phenopackets v2 <code>Procedure</code> object ageAtProcedure, bodySite, dateOfProcedure, procedureCode code NA"},{"location":"schemas-md/obj/procedureCode/","title":"procedureCode","text":"Term Description Type Properties Example Enum procedureCode Definition of an ontology term. object id, label <code>[{\"id\": \"MAXO:0001175\", \"label\": \"liver transplantation\"}, {\"id\": \"MAXO:0000136\", \"label\": \"high-resolution microendoscopy\"}, {\"id\": \"OBI:0002654\", \"label\": \"needle biopsy\"}]</code> NA"},{"location":"schemas-md/obj/proteinHGVSIds/","title":"proteinHGVSIds","text":"Term Description Type Properties Example Enum proteinHGVSIds NA array NA <code>[\"NP_009225.1:p.Glu1817Ter\"]</code>,<code>[\"LRG 199p1:p.Val25Gly (preferred)\"]</code> NA"},{"location":"schemas-md/obj/quantity/","title":"Quantity","text":"Term Description Type Properties Example Enum quantity Definition of a quantity class. Provenance: GA4GH Phenopackets v2 <code>Quantity</code> object referenceRange, unit, value NA NA"},{"location":"schemas-md/obj/reference/","title":"Reference","text":"Term Description Type Properties Example Enum reference Representation of the source of the evidence object id, notes, reference id, label NA"},{"location":"schemas-md/obj/referenceBases/","title":"referenceBases","text":"Term Description Type Properties Example Enum referenceBases Reference bases for this variant (starting from <code>start</code>). * Accepted values: IUPAC codes for nucleotides (e.g. <code>https://www.bioinformatics.org/sms/iupac.html</code>). * N is a wildcard, that denotes the position of any base, and can be used  as a standalone base of any type or within a partially known sequence. an empty value* is used in the case of insertions with the maximally  trimmed, inserted sequence being indicated in <code>AlternateBases</code>. string NA A, T, N, , ACG NA"},{"location":"schemas-md/obj/referenceRange/","title":"referenceRange","text":"Term Description Type Properties Example Enum referenceRange The normal range for the value object high, low, unit NA"},{"location":"schemas-md/obj/resolution/","title":"Resolution","text":"Term Description Type Properties Example Enum resolution NA oneOf Age, AgeRange, GestationalAge, TimeInterval NA NA"},{"location":"schemas-md/obj/role/","title":"Role","text":"Term Description Type Properties Example Enum role Definition of an ontology term. object id, label <code>[{\"id\": \"NCIT:C64435\", \"label\": \"Proband\"}, {\"id\": \"NCIT:C96580\", \"label\": \"Biological Mother\"}, {\"id\": \"NCIT:C96572\", \"label\": \"Biological Father\"}, {\"id\": \"NCIT:C165848\", \"label\": \"Identical Twin Brother\"}]</code> NA"},{"location":"schemas-md/obj/routeOfAdministration/","title":"routeOfAdministration","text":"Term Description Type Properties Example Enum routeOfAdministration Definition of an ontology term. object id, label <code>[{\"id\": \"NCIT:C38304\", \"label\": \"Topical\"}, {\"id\": \"NCIT:C78373\", \"label\": \"Dietary\"}]</code> NA"},{"location":"schemas-md/obj/runDate/","title":"runDate","text":"Term Description Type Properties Example Enum runDate Date at which the experiment was performed. string NA 2021-10-18 NA"},{"location":"schemas-md/obj/runId/","title":"runId","text":"Term Description Type Properties Example Enum runId Reference to the experimental run ID (<code>run.id</code>) string NA SRR10903401 NA"},{"location":"schemas-md/obj/sampleOriginDetail/","title":"sampleOriginDetail","text":"Term Description Type Properties Example Enum sampleOriginDetail Tissue from which the sample was taken or sample origin matching the category set in 'sampleOriginType'. Value from Uber-anatomy ontology (UBERON) or BRENDA tissue / enzyme source (BTO), Ontology for Biomedical Investigations (OBI) or Cell Line Ontology (CLO), e.g. 'cerebellar vermis' (UBERON:0004720), 'HEK-293T cell' (BTO:0002181), 'nasopharyngeal swab specimen' (OBI:0002606), 'cerebrospinal fluid specimen' (OBI:0002502). object id, label <code>[{\"id\": \"UBERON:0000474\", \"label\": \"female reproductive system\"}, {\"id\": \"BTO:0002181\", \"label\": \"HEK-293T cell\"}, {\"id\": \"OBI:0002606\", \"label\": \"nasopharyngeal swab specimen\"}]</code> NA"},{"location":"schemas-md/obj/sampleOriginType/","title":"sampleOriginType","text":"Term Description Type Properties Example Enum sampleOriginType Category of sample origin. Value from Ontology for Biomedical Investigations (OBI) material entity (BFO:0000040) ontology, e.g. 'specimen from organism' (OBI:0001479),'xenograft' (OBI:0100058), 'cell culture' (OBI:0001876) object id, label <code>[{\"id\": \"OBI:0001479\", \"label\": \"specimen from organism\"}, {\"id\": \"OBI:0001876\", \"label\": \"cell culture\"}, {\"id\": \"OBI:0100058\", \"label\": \"xenograft\"}]</code> NA"},{"location":"schemas-md/obj/sampleProcessing/","title":"sampleProcessing","text":"Term Description Type Properties Example Enum sampleProcessing Status of how the specimen was processed,e.g. a child term of EFO:0009091. object id, label <code>[{\"id\": \"EFO:0009129\", \"label\": \"mechanical dissociation\"}]</code> NA"},{"location":"schemas-md/obj/sampleStorage/","title":"sampleStorage","text":"Term Description Type Properties Example Enum sampleStorage Status of how the specimen was stored. object id, label NA"},{"location":"schemas-md/obj/scheduleFrequency/","title":"scheduleFrequency","text":"Term Description Type Properties Example Enum scheduleFrequency Definition of an ontology term. object id, label <code>[{\"id\": \"NCIT:C64496\", \"label\": \"Twice Daily\"}]</code> NA"},{"location":"schemas-md/obj/severity/","title":"Severity","text":"Term Description Type Properties Example Enum severity Severity as applicable to phenotype or disease observed. Recommended are values from Human Phenotype Ontology (HP:0012824), e.g <code>mild</code>. The intensity or degree of a manifestation. Source: Phenopackets v2 object id, label <code>[{\"id\": \"HP:0012828\", \"label\": \"Severe\"}, {\"id\": \"HP:0012826\", \"label\": \"Moderate\"}]</code> NA"},{"location":"schemas-md/obj/sex/","title":"Sex","text":"Term Description Type Properties Example Enum sex Sex of the individual. Value from NCIT General Qualifier (NCIT:C27993): 'unknown' (not assessed or not available) (NCIT:C17998), 'female' (NCIT:C16576), or 'male', (NCIT:C20197). object id, label <code>[{\"id\": \"NCIT:C16576\", \"label\": \"female\"}, {\"id\": \"NCIT:C20197\", \"label\": \"male\"}, {\"id\": \"NCIT:C1799\", \"label\": \"unknown\"}]</code> NA"},{"location":"schemas-md/obj/source/","title":"Source","text":"Term Description Type Properties Example Enum source The study string NA The Genome Aggregation Database (gnomAD), The European Genome-phenome Archive (EGA) NA"},{"location":"schemas-md/obj/sourceReference/","title":"sourceReference","text":"Term Description Type Properties Example Enum sourceReference A reference to further documentation or details. string NA gnomad.broadinstitute.org/, ega-archive.org/ NA"},{"location":"schemas-md/obj/stage/","title":"Stage","text":"Term Description Type Properties Example Enum stage Definition of an ontology term. object id, label <code>[{\"id\": \"OGMS:0000119\", \"label\": \"acute onset\"}, {\"id\": \"OGMS:0000117\", \"label\": \"asymptomatic\"}, {\"id\": \"OGMS:0000106\", \"label\": \"remission\"}]</code> NA"},{"location":"schemas-md/obj/start/","title":"Start","text":"Term Description Type Properties Example Enum start Represents age as an ISO8601 duration (e.g., P18Y). object iso8601duration NA NA"},{"location":"schemas-md/obj/toolName/","title":"toolName","text":"Term Description Type Properties Example Enum toolName Name of the tool. string NA Ensembl Variant Effect Predictor (VEP) NA"},{"location":"schemas-md/obj/toolReferences/","title":"toolReferences","text":"Term Description Type Properties Example Enum toolReferences References to the tool object NA <code>[{\"bio.toolsId\": \"https://bio.tools/vep\"}, {\"url\": \"https://www.ensembl.org/vep\"}]</code> NA"},{"location":"schemas-md/obj/transcriptHGVSIds/","title":"transcriptHGVSIds","text":"Term Description Type Properties Example Enum transcriptHGVSIds NA array NA <code>[\"NC 000023.10(NM004006.2):c.357+1G\"]</code> NA"},{"location":"schemas-md/obj/treatmentCode/","title":"treatmentCode","text":"Term Description Type Properties Example Enum treatmentCode Definition of an ontology term. object id, label <code>[{\"id\": \"NCIT:C287\", \"label\": \"Aspirin\"}, {\"id\": \"NCIT:C62078\", \"label\": \"Tamoxifen\"}]</code> NA"},{"location":"schemas-md/obj/treatments/","title":"Treatments","text":"Term Description Type Properties Example Enum treatments Treatment(s) prescribed/administered, defined by treatment ID, date and age of onset, dose, schedule and duration. array ageAtOnset, cumulativeDose, doseIntervals, routeOfAdministration, treatmentCode NA NA"},{"location":"schemas-md/obj/tumorGrade/","title":"tumorGrade","text":"Term Description Type Properties Example Enum tumorGrade Term representing the tumor grade. Child term of NCIT:C28076 (Disease Grade Qualifier) or equivalent. object id, label <code>[{\"id\": \"NCIT:C28080\", \"label\": \"Grade 3a\"}]</code> NA"},{"location":"schemas-md/obj/tumorProgression/","title":"tumorProgression","text":"Term Description Type Properties Example Enum tumorProgression Tumor progression category indicating primary, metastatic or recurrent progression. Ontology value from Neoplasm by Special Category ontology (NCIT:C7062), e.g. NCIT:C84509 (Primary Malignant Neoplasm). object id, label <code>[{\"id\": \"NCIT:C84509\", \"label\": \"Primary Malignant Neoplasm\"}, {\"id\": \"NCIT:C4813\", \"label\": \"Recurrent Malignant Neoplasm\"}]</code> NA"},{"location":"schemas-md/obj/unit/","title":"Unit","text":"Term Description Type Properties Example Enum unit Unit of the exposure. Recommended from NCIT Unit of Category ontology term (NCIT:C42568) descendants. object id, label <code>[{\"id\": \"NCIT:C70575\", \"label\": \"Roentgen\"}, {\"id\": \"NCIT:C28252\", \"label\": \"Kilogram\"}, {\"id\": \"NCIT:C28253\", \"label\": \"Milligram\"}]</code> NA"},{"location":"schemas-md/obj/updateDateTime/","title":"updateDateTime","text":"Term Description Type Properties Example Enum updateDateTime The time the dataset was updated in (ISO 8601 format) string NA 2017-01-17T20:33:40Z NA"},{"location":"schemas-md/obj/value/","title":"Value","text":"Term Description Type Properties Example Enum value Quantification of the exposure. number NA NA NA"},{"location":"schemas-md/obj/variantAlternativeIds/","title":"variantAlternativeIds","text":"Term Description Type Properties Example Enum variantAlternativeIds Definition of an external reference class. Provenance: GA4GH Phenopackets v2 <code>ExternalReference</code> array id, notes, reference <code>[{\"id\": \"dbSNP:rs587780345\", \"notes\": \"dbSNP id\", \"reference\": \"https://www.ncbi.nlm.nih.gov/snp/rs587780345\"}, {\"id\": \"ClinGen:CA152954\", \"notes\": \"ClinGen Allele Registry id\", \"reference\": \"https://reg.clinicalgenome.org/redmine/projects/registry/genboree_registry/by_caid?caid=CA152954\"}, {\"id\": \"UniProtKB:P35557#VAR_003699\", \"reference\": \"https://www.uniprot.org/uniprot/P35557#VAR_003699\"}]</code>,<code>[{\"id\": \"OMIM:164757.0001\", \"reference\": \"https://www.omim.org/entry/164757#0001\"}]</code> NA"},{"location":"schemas-md/obj/variantCaller/","title":"variantCaller","text":"Term Description Type Properties Example Enum variantCaller Reference to variant calling software / pipeline string NA GATK4.0 NA"},{"location":"schemas-md/obj/variantInternalId/","title":"variantInternalId","text":"Term Description Type Properties Example Enum variantInternalId Reference to the internal variant ID. This represents the primary key/identifier of that variant inside a given Beacon instance. Different Beacon instances may use identical id values, referring to unrelated variants. Public identifiers such as the GA4GH Variant Representation Id (VRSid) MUST be returned in the <code>identifiers</code> section. A Beacon instance can, of course, use the VRSid as their own internal id but still MUST represent this then in the <code>identifiers</code> section. string NA var00001, v110112 NA"},{"location":"schemas-md/obj/variantLevelData/","title":"variantLevelData","text":"Term Description Type Properties Example Enum variantLevelData NA object clinicalInterpretations, phenotypicEffects NA NA"},{"location":"schemas-md/obj/variantType/","title":"variantType","text":"Term Description Type Properties Example Enum variantType The <code>variantType</code> declares the nature of the variation in relation to a reference. In a response, it is used to describe the variation. Examples here are e.g. structural variants such as <code>DUP</code> (increased allelic count of material from the genomic region  between <code>start</code> and <code>end</code> positions without assumption about the placement of the additional sequence) or <code>DEL</code> (deletion of sequence following <code>start</code>). Either <code>alternateBases</code> or <code>variantType</code> is required in representing a <code>LegacyVariation</code>. string NA SNP, DEL, DUP, BND NA"},{"location":"schemas-md/obj/variation/","title":"Variation","text":"Term Description Type Properties Example Enum variation NA oneOf LegacyVariation, MolecularVariation, SystemicVariation NA NA"},{"location":"schemas-md/obj/version/","title":"Version","text":"Term Description Type Properties Example Enum version version of the source data. string NA gnomAD v3.1.1 NA"},{"location":"schemas-md/obj/zygosity/","title":"Zygosity","text":"Term Description Type Properties Example Enum zygosity Ontology term for zygosity in which variant is present in the sample from the Zygosity Ontology (GENO:0000391) , e.g <code>heterozygous</code> (GENO:0000135) object id, label <code>[{\"id\": \"GENO:0000135\", \"label\": \"heterozygous\"}, {\"id\": \"GENO:0000136\", \"label\": \"homozygous\"}, {\"id\": \"GENO:0000604\", \"label\": \"hemizygous X-linked\"}]</code> NA"}]}