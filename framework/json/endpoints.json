{
    "components": {
        "parameters": {
            "limit": {
                "in": "query",
                "name": "limit",
                "schema": {
                    "$ref": "./common/beaconCommonComponents.json#/definitions/Limit"
                }
            },
            "requestedSchema": {
                "description": "Schema to be used to format the `result` field in the response. The response will use Beacon format.",
                "example": "ga4gh-service-info-v1.0",
                "in": "query",
                "name": "requestedSchema",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "skip": {
                "in": "query",
                "name": "skip",
                "schema": {
                    "$ref": "./common/beaconCommonComponents.json#/definitions/Skip"
                }
            }
        },
        "responses": {
            "infoOKResponse": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "./responses/beaconInfoResponse.json",
                            "description": "Response of a request for information about a Beacon."
                        }
                    }
                },
                "description": "Successful operation."
            }
        }
    },
    "info": {
        "contact": {
            "email": "beacon@ga4gh.org"
        },
        "description": "A Beacon is a web service for genetic data sharing that can be queried for information about variants, individuals, biosamples, and other entities.",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "GA4GH Beacon API Specification",
        "version": "2.0.0"
    },
    "openapi": "3.0.2",
    "paths": {
        "/": {
            "get": {
                "description": "Get information about the beacon",
                "operationId": "getBeaconRoot",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/infoOKResponse"
                    },
                    "default": {
                        "$ref": "./responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation."
                    }
                },
                "tags": [
                    "Informational endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/requestedSchema"
                }
            ]
        },
        "/configuration": {
            "get": {
                "description": "TBD",
                "operationId": "getBeaconConfiguration",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "./responses/beaconConfigurationResponse.json",
                                    "description": "Response of a request for information about a Beacon"
                                }
                            }
                        },
                        "description": "Successful operation."
                    },
                    "default": {
                        "$ref": "./responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation."
                    }
                },
                "tags": [
                    "Configuration"
                ]
            }
        },
        "/entry_types": {
            "get": {
                "description": "TBD",
                "operationId": "getEntryTypes",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "./responses/beaconEntryTypesResponse.json",
                                    "description": "Response of a request for information about a Beacon"
                                }
                            }
                        },
                        "description": "Successful operation."
                    },
                    "default": {
                        "$ref": "./responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation."
                    }
                },
                "tags": [
                    "Configuration"
                ]
            }
        },
        "/filtering_terms": {
            "get": {
                "description": "Get the list of filtering terms handled by this beacon",
                "operationId": "getFilteringTerms",
                "responses": {
                    "200": {
                        "$ref": "./responses/beaconFilteringTermsResponse.json"
                    },
                    "default": {
                        "$ref": "./responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation."
                    }
                },
                "tags": [
                    "Informational endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/skip"
                },
                {
                    "$ref": "#/components/parameters/limit"
                }
            ]
        },
        "/info": {
            "get": {
                "description": "Get information about the beacon",
                "operationId": "getBeaconInfoRoot",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/infoOKResponse"
                    },
                    "default": {
                        "$ref": "./responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation."
                    }
                },
                "tags": [
                    "Informational endpoints"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/components/parameters/requestedSchema"
                }
            ]
        },
        "/map": {
            "get": {
                "description": "TBD",
                "operationId": "getBeaconMap",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "./responses/beaconMapResponse.json",
                                    "description": "Response of a request for information about a Beacon"
                                }
                            }
                        },
                        "description": "Successful operation."
                    },
                    "default": {
                        "$ref": "./responses/beaconErrorResponse.json",
                        "description": "An unsuccessful operation."
                    }
                },
                "tags": [
                    "Configuration"
                ]
            }
        },
        "/service-info": {
            "get": {
                "description": "Get information about the beacon using GA4GH ServiceInfo format",
                "operationId": "getBeaconServiceInfo",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "./responses/ga4gh-service-info-1-0-0-schema.json"
                                }
                            }
                        },
                        "description": "Successful operation"
                    }
                },
                "tags": [
                    "Informational endpoints"
                ]
            }
        }
    },
    "servers": []
}