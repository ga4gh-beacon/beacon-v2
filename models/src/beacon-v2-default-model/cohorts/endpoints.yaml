openapi: 3.0.2
servers: []
info:
  version: 2.0.0
  title: GA4GH Beacon API Specification - Cohorts Endpoints
  description: TBD
  contact:
    email: beacon@ga4gh.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: GET Endpoints
    description: Available endpoints in this API. All of them have a POST counterpart.
  - name: POST Endpoints
    description: The same operations than GET, just by POST.
paths:
  /cohorts:
    get:
      parameters:
        - $ref: '#/components/parameters/requestedSchema'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filters'
      description: Get a list of cohorts
      operationId: getCohorts
      tags:
        - GET Endpoints
      responses:
        '200':
          $ref: '#/components/responses/CollectionsResponse'
        default:
          $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json
    post:
      description: Get a list of cohorts
      operationId: postCohortsRequest
      tags:
        - POST Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json
        required: true
      responses:
        '200':
          $ref: '#/components/responses/CollectionsResponse'
        default:
          description: An unsuccessful operation
          $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json
  /cohorts/{id}:
    parameters:
      - $ref: '#/components/parameters/entryId'
    get:
      parameters:
        - $ref: '#/components/parameters/requestedSchema'
      description: Get details about one cohort, identified by its (unique) 'id'
      operationId: getOneCohort
      tags:
        - GET Endpoints
      responses:
        '200':
          $ref: '#/components/responses/ResultsOKResponse'
        default:
          description: An unsuccessful operation
          $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json
    post:
      description: Get details about one cohort, identified by its (unique) 'id'
      operationId: postOneCohort
      tags:
        - POST Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ResultsOKResponse'
        default:
          description: An unsuccessful operation
          $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json
  /cohorts/{id}/individuals:
    parameters:
      - $ref: '#/components/parameters/entryId'
    get:
      parameters:
        - $ref: '#/components/parameters/requestedSchema'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/limit'
      description: Get the individuals from one cohort, identified by its (unique)
        'id'
      operationId: getOneCohortIndividuals
      tags:
        - GET Endpoints
      responses:
        '200':
          $ref: '#/components/responses/ResultsOKResponse'
        default:
          description: An unsuccessful operation
          $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json
    post:
      description: Get the individuals from one cohort, identified by its (unique)
        'id'
      operationId: postOneCohortEntries
      tags:
        - POST Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ResultsOKResponse'
        default:
          description: An unsuccessful operation
          $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json
  /cohorts/{id}/filtering_terms:
    parameters:
      - $ref: '#/components/parameters/entryId'
    get:
      parameters:
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/limit'
      description: Get the list of filtering terms that could be used with a given
        cohort, identified by its (unique) 'id'
      operationId: getOneCohortFilteringTerms
      tags:
        - GET Endpoints
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconFilteringTermsResponse.json
        default:
          description: An unsuccessful operation
          $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json
    post:
      description: Get the list of filtering terms that could be used with a given
        cohort, identified by its (unique) 'id'
      operationId: postOneCohortFilteringTerms
      tags:
        - POST Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/requests/beaconRequestBody.json
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconFilteringTermsResponse.json
        default:
          description: An unsuccessful operation
          $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconErrorResponse.json
components:
  responses:
    ResultsOKResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconBooleanResponse.json
              - $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconCountResponse.json
              - $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconResultsetsResponse.json
    CollectionsResponse:
      description: Successful collection list operation.
      content:
        application/json:
          schema:
            oneOf:
              - $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconBooleanResponse.json
              - $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconCountResponse.json
              - $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/responses/beaconCollectionsResponse.json
  parameters:
    requestedSchema:
      name: requestedSchema
      description: Schema to be used to format the `result` field in the response.
        The response will use Beacon format.
      in: query
      required: false
      schema:
        type: string
      example: ga4gh-service-info-v1.0
    skip:
      name: skip
      in: query
      schema:
        $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/common/beaconCommonComponents.json#/definitions/Skip
    limit:
      name: limit
      in: query
      schema:
        $ref: https://raw.githubusercontent.com/ga4gh-beacon/beacon-v2/main/framework/json/common/beaconCommonComponents.json#/definitions/Limit
    entryId:
      name: id
      in: path
      required: true
      schema:
        type: string
    filters:
      name: filters
      in: query
      schema:
        type: array
        items:
          type: string
        examples:
          -   - OMIABIS:0001017
